/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package Thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-06-28")
public class Dictamen implements org.apache.thrift.TBase<Dictamen, Dictamen._Fields>, java.io.Serializable, Cloneable, Comparable<Dictamen> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Dictamen");

  private static final org.apache.thrift.protocol.TField DICTAMEN_FIELD_DESC = new org.apache.thrift.protocol.TField("dictamen", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField FECHA_FIELD_DESC = new org.apache.thrift.protocol.TField("fecha", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField IDFUNCIONARIO_FIELD_DESC = new org.apache.thrift.protocol.TField("idfuncionario", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField IDREPORTE_FIELD_DESC = new org.apache.thrift.protocol.TField("idreporte", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField FOLIO_UNICO_FIELD_DESC = new org.apache.thrift.protocol.TField("folioUnico", org.apache.thrift.protocol.TType.I32, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new DictamenStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new DictamenTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String dictamen; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String fecha; // required
  public int idfuncionario; // required
  public int idreporte; // required
  public int folioUnico; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    DICTAMEN((short)1, "dictamen"),
    FECHA((short)2, "fecha"),
    IDFUNCIONARIO((short)3, "idfuncionario"),
    IDREPORTE((short)4, "idreporte"),
    FOLIO_UNICO((short)5, "folioUnico");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // DICTAMEN
          return DICTAMEN;
        case 2: // FECHA
          return FECHA;
        case 3: // IDFUNCIONARIO
          return IDFUNCIONARIO;
        case 4: // IDREPORTE
          return IDREPORTE;
        case 5: // FOLIO_UNICO
          return FOLIO_UNICO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __IDFUNCIONARIO_ISSET_ID = 0;
  private static final int __IDREPORTE_ISSET_ID = 1;
  private static final int __FOLIOUNICO_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.DICTAMEN, new org.apache.thrift.meta_data.FieldMetaData("dictamen", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FECHA, new org.apache.thrift.meta_data.FieldMetaData("fecha", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IDFUNCIONARIO, new org.apache.thrift.meta_data.FieldMetaData("idfuncionario", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IDREPORTE, new org.apache.thrift.meta_data.FieldMetaData("idreporte", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FOLIO_UNICO, new org.apache.thrift.meta_data.FieldMetaData("folioUnico", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Dictamen.class, metaDataMap);
  }

  public Dictamen() {
  }

  public Dictamen(
    java.lang.String dictamen,
    java.lang.String fecha,
    int idfuncionario,
    int idreporte,
    int folioUnico)
  {
    this();
    this.dictamen = dictamen;
    this.fecha = fecha;
    this.idfuncionario = idfuncionario;
    setIdfuncionarioIsSet(true);
    this.idreporte = idreporte;
    setIdreporteIsSet(true);
    this.folioUnico = folioUnico;
    setFolioUnicoIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Dictamen(Dictamen other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetDictamen()) {
      this.dictamen = other.dictamen;
    }
    if (other.isSetFecha()) {
      this.fecha = other.fecha;
    }
    this.idfuncionario = other.idfuncionario;
    this.idreporte = other.idreporte;
    this.folioUnico = other.folioUnico;
  }

  public Dictamen deepCopy() {
    return new Dictamen(this);
  }

  @Override
  public void clear() {
    this.dictamen = null;
    this.fecha = null;
    setIdfuncionarioIsSet(false);
    this.idfuncionario = 0;
    setIdreporteIsSet(false);
    this.idreporte = 0;
    setFolioUnicoIsSet(false);
    this.folioUnico = 0;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getDictamen() {
    return this.dictamen;
  }

  public Dictamen setDictamen(@org.apache.thrift.annotation.Nullable java.lang.String dictamen) {
    this.dictamen = dictamen;
    return this;
  }

  public void unsetDictamen() {
    this.dictamen = null;
  }

  /** Returns true if field dictamen is set (has been assigned a value) and false otherwise */
  public boolean isSetDictamen() {
    return this.dictamen != null;
  }

  public void setDictamenIsSet(boolean value) {
    if (!value) {
      this.dictamen = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getFecha() {
    return this.fecha;
  }

  public Dictamen setFecha(@org.apache.thrift.annotation.Nullable java.lang.String fecha) {
    this.fecha = fecha;
    return this;
  }

  public void unsetFecha() {
    this.fecha = null;
  }

  /** Returns true if field fecha is set (has been assigned a value) and false otherwise */
  public boolean isSetFecha() {
    return this.fecha != null;
  }

  public void setFechaIsSet(boolean value) {
    if (!value) {
      this.fecha = null;
    }
  }

  public int getIdfuncionario() {
    return this.idfuncionario;
  }

  public Dictamen setIdfuncionario(int idfuncionario) {
    this.idfuncionario = idfuncionario;
    setIdfuncionarioIsSet(true);
    return this;
  }

  public void unsetIdfuncionario() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDFUNCIONARIO_ISSET_ID);
  }

  /** Returns true if field idfuncionario is set (has been assigned a value) and false otherwise */
  public boolean isSetIdfuncionario() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDFUNCIONARIO_ISSET_ID);
  }

  public void setIdfuncionarioIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDFUNCIONARIO_ISSET_ID, value);
  }

  public int getIdreporte() {
    return this.idreporte;
  }

  public Dictamen setIdreporte(int idreporte) {
    this.idreporte = idreporte;
    setIdreporteIsSet(true);
    return this;
  }

  public void unsetIdreporte() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDREPORTE_ISSET_ID);
  }

  /** Returns true if field idreporte is set (has been assigned a value) and false otherwise */
  public boolean isSetIdreporte() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDREPORTE_ISSET_ID);
  }

  public void setIdreporteIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDREPORTE_ISSET_ID, value);
  }

  public int getFolioUnico() {
    return this.folioUnico;
  }

  public Dictamen setFolioUnico(int folioUnico) {
    this.folioUnico = folioUnico;
    setFolioUnicoIsSet(true);
    return this;
  }

  public void unsetFolioUnico() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FOLIOUNICO_ISSET_ID);
  }

  /** Returns true if field folioUnico is set (has been assigned a value) and false otherwise */
  public boolean isSetFolioUnico() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FOLIOUNICO_ISSET_ID);
  }

  public void setFolioUnicoIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FOLIOUNICO_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case DICTAMEN:
      if (value == null) {
        unsetDictamen();
      } else {
        setDictamen((java.lang.String)value);
      }
      break;

    case FECHA:
      if (value == null) {
        unsetFecha();
      } else {
        setFecha((java.lang.String)value);
      }
      break;

    case IDFUNCIONARIO:
      if (value == null) {
        unsetIdfuncionario();
      } else {
        setIdfuncionario((java.lang.Integer)value);
      }
      break;

    case IDREPORTE:
      if (value == null) {
        unsetIdreporte();
      } else {
        setIdreporte((java.lang.Integer)value);
      }
      break;

    case FOLIO_UNICO:
      if (value == null) {
        unsetFolioUnico();
      } else {
        setFolioUnico((java.lang.Integer)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case DICTAMEN:
      return getDictamen();

    case FECHA:
      return getFecha();

    case IDFUNCIONARIO:
      return getIdfuncionario();

    case IDREPORTE:
      return getIdreporte();

    case FOLIO_UNICO:
      return getFolioUnico();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case DICTAMEN:
      return isSetDictamen();
    case FECHA:
      return isSetFecha();
    case IDFUNCIONARIO:
      return isSetIdfuncionario();
    case IDREPORTE:
      return isSetIdreporte();
    case FOLIO_UNICO:
      return isSetFolioUnico();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Dictamen)
      return this.equals((Dictamen)that);
    return false;
  }

  public boolean equals(Dictamen that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_dictamen = true && this.isSetDictamen();
    boolean that_present_dictamen = true && that.isSetDictamen();
    if (this_present_dictamen || that_present_dictamen) {
      if (!(this_present_dictamen && that_present_dictamen))
        return false;
      if (!this.dictamen.equals(that.dictamen))
        return false;
    }

    boolean this_present_fecha = true && this.isSetFecha();
    boolean that_present_fecha = true && that.isSetFecha();
    if (this_present_fecha || that_present_fecha) {
      if (!(this_present_fecha && that_present_fecha))
        return false;
      if (!this.fecha.equals(that.fecha))
        return false;
    }

    boolean this_present_idfuncionario = true;
    boolean that_present_idfuncionario = true;
    if (this_present_idfuncionario || that_present_idfuncionario) {
      if (!(this_present_idfuncionario && that_present_idfuncionario))
        return false;
      if (this.idfuncionario != that.idfuncionario)
        return false;
    }

    boolean this_present_idreporte = true;
    boolean that_present_idreporte = true;
    if (this_present_idreporte || that_present_idreporte) {
      if (!(this_present_idreporte && that_present_idreporte))
        return false;
      if (this.idreporte != that.idreporte)
        return false;
    }

    boolean this_present_folioUnico = true;
    boolean that_present_folioUnico = true;
    if (this_present_folioUnico || that_present_folioUnico) {
      if (!(this_present_folioUnico && that_present_folioUnico))
        return false;
      if (this.folioUnico != that.folioUnico)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetDictamen()) ? 131071 : 524287);
    if (isSetDictamen())
      hashCode = hashCode * 8191 + dictamen.hashCode();

    hashCode = hashCode * 8191 + ((isSetFecha()) ? 131071 : 524287);
    if (isSetFecha())
      hashCode = hashCode * 8191 + fecha.hashCode();

    hashCode = hashCode * 8191 + idfuncionario;

    hashCode = hashCode * 8191 + idreporte;

    hashCode = hashCode * 8191 + folioUnico;

    return hashCode;
  }

  @Override
  public int compareTo(Dictamen other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetDictamen()).compareTo(other.isSetDictamen());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDictamen()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dictamen, other.dictamen);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFecha()).compareTo(other.isSetFecha());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFecha()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fecha, other.fecha);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdfuncionario()).compareTo(other.isSetIdfuncionario());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdfuncionario()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idfuncionario, other.idfuncionario);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdreporte()).compareTo(other.isSetIdreporte());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdreporte()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idreporte, other.idreporte);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFolioUnico()).compareTo(other.isSetFolioUnico());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFolioUnico()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.folioUnico, other.folioUnico);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Dictamen(");
    boolean first = true;

    sb.append("dictamen:");
    if (this.dictamen == null) {
      sb.append("null");
    } else {
      sb.append(this.dictamen);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fecha:");
    if (this.fecha == null) {
      sb.append("null");
    } else {
      sb.append(this.fecha);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("idfuncionario:");
    sb.append(this.idfuncionario);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idreporte:");
    sb.append(this.idreporte);
    first = false;
    if (!first) sb.append(", ");
    sb.append("folioUnico:");
    sb.append(this.folioUnico);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class DictamenStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public DictamenStandardScheme getScheme() {
      return new DictamenStandardScheme();
    }
  }

  private static class DictamenStandardScheme extends org.apache.thrift.scheme.StandardScheme<Dictamen> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Dictamen struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // DICTAMEN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.dictamen = iprot.readString();
              struct.setDictamenIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // FECHA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fecha = iprot.readString();
              struct.setFechaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // IDFUNCIONARIO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idfuncionario = iprot.readI32();
              struct.setIdfuncionarioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // IDREPORTE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idreporte = iprot.readI32();
              struct.setIdreporteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // FOLIO_UNICO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.folioUnico = iprot.readI32();
              struct.setFolioUnicoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Dictamen struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.dictamen != null) {
        oprot.writeFieldBegin(DICTAMEN_FIELD_DESC);
        oprot.writeString(struct.dictamen);
        oprot.writeFieldEnd();
      }
      if (struct.fecha != null) {
        oprot.writeFieldBegin(FECHA_FIELD_DESC);
        oprot.writeString(struct.fecha);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IDFUNCIONARIO_FIELD_DESC);
      oprot.writeI32(struct.idfuncionario);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IDREPORTE_FIELD_DESC);
      oprot.writeI32(struct.idreporte);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FOLIO_UNICO_FIELD_DESC);
      oprot.writeI32(struct.folioUnico);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class DictamenTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public DictamenTupleScheme getScheme() {
      return new DictamenTupleScheme();
    }
  }

  private static class DictamenTupleScheme extends org.apache.thrift.scheme.TupleScheme<Dictamen> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Dictamen struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetDictamen()) {
        optionals.set(0);
      }
      if (struct.isSetFecha()) {
        optionals.set(1);
      }
      if (struct.isSetIdfuncionario()) {
        optionals.set(2);
      }
      if (struct.isSetIdreporte()) {
        optionals.set(3);
      }
      if (struct.isSetFolioUnico()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetDictamen()) {
        oprot.writeString(struct.dictamen);
      }
      if (struct.isSetFecha()) {
        oprot.writeString(struct.fecha);
      }
      if (struct.isSetIdfuncionario()) {
        oprot.writeI32(struct.idfuncionario);
      }
      if (struct.isSetIdreporte()) {
        oprot.writeI32(struct.idreporte);
      }
      if (struct.isSetFolioUnico()) {
        oprot.writeI32(struct.folioUnico);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Dictamen struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.dictamen = iprot.readString();
        struct.setDictamenIsSet(true);
      }
      if (incoming.get(1)) {
        struct.fecha = iprot.readString();
        struct.setFechaIsSet(true);
      }
      if (incoming.get(2)) {
        struct.idfuncionario = iprot.readI32();
        struct.setIdfuncionarioIsSet(true);
      }
      if (incoming.get(3)) {
        struct.idreporte = iprot.readI32();
        struct.setIdreporteIsSet(true);
      }
      if (incoming.get(4)) {
        struct.folioUnico = iprot.readI32();
        struct.setFolioUnicoIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

