/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package Thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-06-28")
public class Reporte implements org.apache.thrift.TBase<Reporte, Reporte._Fields>, java.io.Serializable, Cloneable, Comparable<Reporte> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Reporte");

  private static final org.apache.thrift.protocol.TField IDREPORTE_FIELD_DESC = new org.apache.thrift.protocol.TField("idreporte", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField LATITUD_FIELD_DESC = new org.apache.thrift.protocol.TField("latitud", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField LONGITUD_FIELD_DESC = new org.apache.thrift.protocol.TField("longitud", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField NOMBRE_OTRO_CONDUC_FIELD_DESC = new org.apache.thrift.protocol.TField("nombreOtroConduc", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField IDCONDUCTOR_FIELD_DESC = new org.apache.thrift.protocol.TField("idconductor", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField FOLIO_UNICO_DICTAMEN_FIELD_DESC = new org.apache.thrift.protocol.TField("folioUnico_dictamen", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField ID_FUNCIONARIO_FIELD_DESC = new org.apache.thrift.protocol.TField("idFuncionario", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField NOMBRE_CONDUCTOR_FIELD_DESC = new org.apache.thrift.protocol.TField("nombreConductor", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField DICTAMEN_FIELD_DESC = new org.apache.thrift.protocol.TField("dictamen", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField FECHA_FIELD_DESC = new org.apache.thrift.protocol.TField("fecha", org.apache.thrift.protocol.TType.STRING, (short)10);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ReporteStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ReporteTupleSchemeFactory();

  public int idreporte; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String latitud; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String longitud; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String nombreOtroConduc; // required
  public int idconductor; // required
  public int folioUnico_dictamen; // required
  public int idFuncionario; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String nombreConductor; // required
  public int dictamen; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String fecha; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    IDREPORTE((short)1, "idreporte"),
    LATITUD((short)2, "latitud"),
    LONGITUD((short)3, "longitud"),
    NOMBRE_OTRO_CONDUC((short)4, "nombreOtroConduc"),
    IDCONDUCTOR((short)5, "idconductor"),
    FOLIO_UNICO_DICTAMEN((short)6, "folioUnico_dictamen"),
    ID_FUNCIONARIO((short)7, "idFuncionario"),
    NOMBRE_CONDUCTOR((short)8, "nombreConductor"),
    DICTAMEN((short)9, "dictamen"),
    FECHA((short)10, "fecha");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // IDREPORTE
          return IDREPORTE;
        case 2: // LATITUD
          return LATITUD;
        case 3: // LONGITUD
          return LONGITUD;
        case 4: // NOMBRE_OTRO_CONDUC
          return NOMBRE_OTRO_CONDUC;
        case 5: // IDCONDUCTOR
          return IDCONDUCTOR;
        case 6: // FOLIO_UNICO_DICTAMEN
          return FOLIO_UNICO_DICTAMEN;
        case 7: // ID_FUNCIONARIO
          return ID_FUNCIONARIO;
        case 8: // NOMBRE_CONDUCTOR
          return NOMBRE_CONDUCTOR;
        case 9: // DICTAMEN
          return DICTAMEN;
        case 10: // FECHA
          return FECHA;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __IDREPORTE_ISSET_ID = 0;
  private static final int __IDCONDUCTOR_ISSET_ID = 1;
  private static final int __FOLIOUNICO_DICTAMEN_ISSET_ID = 2;
  private static final int __IDFUNCIONARIO_ISSET_ID = 3;
  private static final int __DICTAMEN_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.IDREPORTE, new org.apache.thrift.meta_data.FieldMetaData("idreporte", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LATITUD, new org.apache.thrift.meta_data.FieldMetaData("latitud", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LONGITUD, new org.apache.thrift.meta_data.FieldMetaData("longitud", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NOMBRE_OTRO_CONDUC, new org.apache.thrift.meta_data.FieldMetaData("nombreOtroConduc", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IDCONDUCTOR, new org.apache.thrift.meta_data.FieldMetaData("idconductor", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FOLIO_UNICO_DICTAMEN, new org.apache.thrift.meta_data.FieldMetaData("folioUnico_dictamen", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ID_FUNCIONARIO, new org.apache.thrift.meta_data.FieldMetaData("idFuncionario", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NOMBRE_CONDUCTOR, new org.apache.thrift.meta_data.FieldMetaData("nombreConductor", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DICTAMEN, new org.apache.thrift.meta_data.FieldMetaData("dictamen", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FECHA, new org.apache.thrift.meta_data.FieldMetaData("fecha", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Reporte.class, metaDataMap);
  }

  public Reporte() {
  }

  public Reporte(
    int idreporte,
    java.lang.String latitud,
    java.lang.String longitud,
    java.lang.String nombreOtroConduc,
    int idconductor,
    int folioUnico_dictamen,
    int idFuncionario,
    java.lang.String nombreConductor,
    int dictamen,
    java.lang.String fecha)
  {
    this();
    this.idreporte = idreporte;
    setIdreporteIsSet(true);
    this.latitud = latitud;
    this.longitud = longitud;
    this.nombreOtroConduc = nombreOtroConduc;
    this.idconductor = idconductor;
    setIdconductorIsSet(true);
    this.folioUnico_dictamen = folioUnico_dictamen;
    setFolioUnico_dictamenIsSet(true);
    this.idFuncionario = idFuncionario;
    setIdFuncionarioIsSet(true);
    this.nombreConductor = nombreConductor;
    this.dictamen = dictamen;
    setDictamenIsSet(true);
    this.fecha = fecha;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Reporte(Reporte other) {
    __isset_bitfield = other.__isset_bitfield;
    this.idreporte = other.idreporte;
    if (other.isSetLatitud()) {
      this.latitud = other.latitud;
    }
    if (other.isSetLongitud()) {
      this.longitud = other.longitud;
    }
    if (other.isSetNombreOtroConduc()) {
      this.nombreOtroConduc = other.nombreOtroConduc;
    }
    this.idconductor = other.idconductor;
    this.folioUnico_dictamen = other.folioUnico_dictamen;
    this.idFuncionario = other.idFuncionario;
    if (other.isSetNombreConductor()) {
      this.nombreConductor = other.nombreConductor;
    }
    this.dictamen = other.dictamen;
    if (other.isSetFecha()) {
      this.fecha = other.fecha;
    }
  }

  public Reporte deepCopy() {
    return new Reporte(this);
  }

  @Override
  public void clear() {
    setIdreporteIsSet(false);
    this.idreporte = 0;
    this.latitud = null;
    this.longitud = null;
    this.nombreOtroConduc = null;
    setIdconductorIsSet(false);
    this.idconductor = 0;
    setFolioUnico_dictamenIsSet(false);
    this.folioUnico_dictamen = 0;
    setIdFuncionarioIsSet(false);
    this.idFuncionario = 0;
    this.nombreConductor = null;
    setDictamenIsSet(false);
    this.dictamen = 0;
    this.fecha = null;
  }

  public int getIdreporte() {
    return this.idreporte;
  }

  public Reporte setIdreporte(int idreporte) {
    this.idreporte = idreporte;
    setIdreporteIsSet(true);
    return this;
  }

  public void unsetIdreporte() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDREPORTE_ISSET_ID);
  }

  /** Returns true if field idreporte is set (has been assigned a value) and false otherwise */
  public boolean isSetIdreporte() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDREPORTE_ISSET_ID);
  }

  public void setIdreporteIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDREPORTE_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getLatitud() {
    return this.latitud;
  }

  public Reporte setLatitud(@org.apache.thrift.annotation.Nullable java.lang.String latitud) {
    this.latitud = latitud;
    return this;
  }

  public void unsetLatitud() {
    this.latitud = null;
  }

  /** Returns true if field latitud is set (has been assigned a value) and false otherwise */
  public boolean isSetLatitud() {
    return this.latitud != null;
  }

  public void setLatitudIsSet(boolean value) {
    if (!value) {
      this.latitud = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getLongitud() {
    return this.longitud;
  }

  public Reporte setLongitud(@org.apache.thrift.annotation.Nullable java.lang.String longitud) {
    this.longitud = longitud;
    return this;
  }

  public void unsetLongitud() {
    this.longitud = null;
  }

  /** Returns true if field longitud is set (has been assigned a value) and false otherwise */
  public boolean isSetLongitud() {
    return this.longitud != null;
  }

  public void setLongitudIsSet(boolean value) {
    if (!value) {
      this.longitud = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getNombreOtroConduc() {
    return this.nombreOtroConduc;
  }

  public Reporte setNombreOtroConduc(@org.apache.thrift.annotation.Nullable java.lang.String nombreOtroConduc) {
    this.nombreOtroConduc = nombreOtroConduc;
    return this;
  }

  public void unsetNombreOtroConduc() {
    this.nombreOtroConduc = null;
  }

  /** Returns true if field nombreOtroConduc is set (has been assigned a value) and false otherwise */
  public boolean isSetNombreOtroConduc() {
    return this.nombreOtroConduc != null;
  }

  public void setNombreOtroConducIsSet(boolean value) {
    if (!value) {
      this.nombreOtroConduc = null;
    }
  }

  public int getIdconductor() {
    return this.idconductor;
  }

  public Reporte setIdconductor(int idconductor) {
    this.idconductor = idconductor;
    setIdconductorIsSet(true);
    return this;
  }

  public void unsetIdconductor() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDCONDUCTOR_ISSET_ID);
  }

  /** Returns true if field idconductor is set (has been assigned a value) and false otherwise */
  public boolean isSetIdconductor() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDCONDUCTOR_ISSET_ID);
  }

  public void setIdconductorIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDCONDUCTOR_ISSET_ID, value);
  }

  public int getFolioUnico_dictamen() {
    return this.folioUnico_dictamen;
  }

  public Reporte setFolioUnico_dictamen(int folioUnico_dictamen) {
    this.folioUnico_dictamen = folioUnico_dictamen;
    setFolioUnico_dictamenIsSet(true);
    return this;
  }

  public void unsetFolioUnico_dictamen() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FOLIOUNICO_DICTAMEN_ISSET_ID);
  }

  /** Returns true if field folioUnico_dictamen is set (has been assigned a value) and false otherwise */
  public boolean isSetFolioUnico_dictamen() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FOLIOUNICO_DICTAMEN_ISSET_ID);
  }

  public void setFolioUnico_dictamenIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FOLIOUNICO_DICTAMEN_ISSET_ID, value);
  }

  public int getIdFuncionario() {
    return this.idFuncionario;
  }

  public Reporte setIdFuncionario(int idFuncionario) {
    this.idFuncionario = idFuncionario;
    setIdFuncionarioIsSet(true);
    return this;
  }

  public void unsetIdFuncionario() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDFUNCIONARIO_ISSET_ID);
  }

  /** Returns true if field idFuncionario is set (has been assigned a value) and false otherwise */
  public boolean isSetIdFuncionario() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDFUNCIONARIO_ISSET_ID);
  }

  public void setIdFuncionarioIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDFUNCIONARIO_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getNombreConductor() {
    return this.nombreConductor;
  }

  public Reporte setNombreConductor(@org.apache.thrift.annotation.Nullable java.lang.String nombreConductor) {
    this.nombreConductor = nombreConductor;
    return this;
  }

  public void unsetNombreConductor() {
    this.nombreConductor = null;
  }

  /** Returns true if field nombreConductor is set (has been assigned a value) and false otherwise */
  public boolean isSetNombreConductor() {
    return this.nombreConductor != null;
  }

  public void setNombreConductorIsSet(boolean value) {
    if (!value) {
      this.nombreConductor = null;
    }
  }

  public int getDictamen() {
    return this.dictamen;
  }

  public Reporte setDictamen(int dictamen) {
    this.dictamen = dictamen;
    setDictamenIsSet(true);
    return this;
  }

  public void unsetDictamen() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DICTAMEN_ISSET_ID);
  }

  /** Returns true if field dictamen is set (has been assigned a value) and false otherwise */
  public boolean isSetDictamen() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DICTAMEN_ISSET_ID);
  }

  public void setDictamenIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DICTAMEN_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getFecha() {
    return this.fecha;
  }

  public Reporte setFecha(@org.apache.thrift.annotation.Nullable java.lang.String fecha) {
    this.fecha = fecha;
    return this;
  }

  public void unsetFecha() {
    this.fecha = null;
  }

  /** Returns true if field fecha is set (has been assigned a value) and false otherwise */
  public boolean isSetFecha() {
    return this.fecha != null;
  }

  public void setFechaIsSet(boolean value) {
    if (!value) {
      this.fecha = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case IDREPORTE:
      if (value == null) {
        unsetIdreporte();
      } else {
        setIdreporte((java.lang.Integer)value);
      }
      break;

    case LATITUD:
      if (value == null) {
        unsetLatitud();
      } else {
        setLatitud((java.lang.String)value);
      }
      break;

    case LONGITUD:
      if (value == null) {
        unsetLongitud();
      } else {
        setLongitud((java.lang.String)value);
      }
      break;

    case NOMBRE_OTRO_CONDUC:
      if (value == null) {
        unsetNombreOtroConduc();
      } else {
        setNombreOtroConduc((java.lang.String)value);
      }
      break;

    case IDCONDUCTOR:
      if (value == null) {
        unsetIdconductor();
      } else {
        setIdconductor((java.lang.Integer)value);
      }
      break;

    case FOLIO_UNICO_DICTAMEN:
      if (value == null) {
        unsetFolioUnico_dictamen();
      } else {
        setFolioUnico_dictamen((java.lang.Integer)value);
      }
      break;

    case ID_FUNCIONARIO:
      if (value == null) {
        unsetIdFuncionario();
      } else {
        setIdFuncionario((java.lang.Integer)value);
      }
      break;

    case NOMBRE_CONDUCTOR:
      if (value == null) {
        unsetNombreConductor();
      } else {
        setNombreConductor((java.lang.String)value);
      }
      break;

    case DICTAMEN:
      if (value == null) {
        unsetDictamen();
      } else {
        setDictamen((java.lang.Integer)value);
      }
      break;

    case FECHA:
      if (value == null) {
        unsetFecha();
      } else {
        setFecha((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case IDREPORTE:
      return getIdreporte();

    case LATITUD:
      return getLatitud();

    case LONGITUD:
      return getLongitud();

    case NOMBRE_OTRO_CONDUC:
      return getNombreOtroConduc();

    case IDCONDUCTOR:
      return getIdconductor();

    case FOLIO_UNICO_DICTAMEN:
      return getFolioUnico_dictamen();

    case ID_FUNCIONARIO:
      return getIdFuncionario();

    case NOMBRE_CONDUCTOR:
      return getNombreConductor();

    case DICTAMEN:
      return getDictamen();

    case FECHA:
      return getFecha();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case IDREPORTE:
      return isSetIdreporte();
    case LATITUD:
      return isSetLatitud();
    case LONGITUD:
      return isSetLongitud();
    case NOMBRE_OTRO_CONDUC:
      return isSetNombreOtroConduc();
    case IDCONDUCTOR:
      return isSetIdconductor();
    case FOLIO_UNICO_DICTAMEN:
      return isSetFolioUnico_dictamen();
    case ID_FUNCIONARIO:
      return isSetIdFuncionario();
    case NOMBRE_CONDUCTOR:
      return isSetNombreConductor();
    case DICTAMEN:
      return isSetDictamen();
    case FECHA:
      return isSetFecha();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Reporte)
      return this.equals((Reporte)that);
    return false;
  }

  public boolean equals(Reporte that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_idreporte = true;
    boolean that_present_idreporte = true;
    if (this_present_idreporte || that_present_idreporte) {
      if (!(this_present_idreporte && that_present_idreporte))
        return false;
      if (this.idreporte != that.idreporte)
        return false;
    }

    boolean this_present_latitud = true && this.isSetLatitud();
    boolean that_present_latitud = true && that.isSetLatitud();
    if (this_present_latitud || that_present_latitud) {
      if (!(this_present_latitud && that_present_latitud))
        return false;
      if (!this.latitud.equals(that.latitud))
        return false;
    }

    boolean this_present_longitud = true && this.isSetLongitud();
    boolean that_present_longitud = true && that.isSetLongitud();
    if (this_present_longitud || that_present_longitud) {
      if (!(this_present_longitud && that_present_longitud))
        return false;
      if (!this.longitud.equals(that.longitud))
        return false;
    }

    boolean this_present_nombreOtroConduc = true && this.isSetNombreOtroConduc();
    boolean that_present_nombreOtroConduc = true && that.isSetNombreOtroConduc();
    if (this_present_nombreOtroConduc || that_present_nombreOtroConduc) {
      if (!(this_present_nombreOtroConduc && that_present_nombreOtroConduc))
        return false;
      if (!this.nombreOtroConduc.equals(that.nombreOtroConduc))
        return false;
    }

    boolean this_present_idconductor = true;
    boolean that_present_idconductor = true;
    if (this_present_idconductor || that_present_idconductor) {
      if (!(this_present_idconductor && that_present_idconductor))
        return false;
      if (this.idconductor != that.idconductor)
        return false;
    }

    boolean this_present_folioUnico_dictamen = true;
    boolean that_present_folioUnico_dictamen = true;
    if (this_present_folioUnico_dictamen || that_present_folioUnico_dictamen) {
      if (!(this_present_folioUnico_dictamen && that_present_folioUnico_dictamen))
        return false;
      if (this.folioUnico_dictamen != that.folioUnico_dictamen)
        return false;
    }

    boolean this_present_idFuncionario = true;
    boolean that_present_idFuncionario = true;
    if (this_present_idFuncionario || that_present_idFuncionario) {
      if (!(this_present_idFuncionario && that_present_idFuncionario))
        return false;
      if (this.idFuncionario != that.idFuncionario)
        return false;
    }

    boolean this_present_nombreConductor = true && this.isSetNombreConductor();
    boolean that_present_nombreConductor = true && that.isSetNombreConductor();
    if (this_present_nombreConductor || that_present_nombreConductor) {
      if (!(this_present_nombreConductor && that_present_nombreConductor))
        return false;
      if (!this.nombreConductor.equals(that.nombreConductor))
        return false;
    }

    boolean this_present_dictamen = true;
    boolean that_present_dictamen = true;
    if (this_present_dictamen || that_present_dictamen) {
      if (!(this_present_dictamen && that_present_dictamen))
        return false;
      if (this.dictamen != that.dictamen)
        return false;
    }

    boolean this_present_fecha = true && this.isSetFecha();
    boolean that_present_fecha = true && that.isSetFecha();
    if (this_present_fecha || that_present_fecha) {
      if (!(this_present_fecha && that_present_fecha))
        return false;
      if (!this.fecha.equals(that.fecha))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + idreporte;

    hashCode = hashCode * 8191 + ((isSetLatitud()) ? 131071 : 524287);
    if (isSetLatitud())
      hashCode = hashCode * 8191 + latitud.hashCode();

    hashCode = hashCode * 8191 + ((isSetLongitud()) ? 131071 : 524287);
    if (isSetLongitud())
      hashCode = hashCode * 8191 + longitud.hashCode();

    hashCode = hashCode * 8191 + ((isSetNombreOtroConduc()) ? 131071 : 524287);
    if (isSetNombreOtroConduc())
      hashCode = hashCode * 8191 + nombreOtroConduc.hashCode();

    hashCode = hashCode * 8191 + idconductor;

    hashCode = hashCode * 8191 + folioUnico_dictamen;

    hashCode = hashCode * 8191 + idFuncionario;

    hashCode = hashCode * 8191 + ((isSetNombreConductor()) ? 131071 : 524287);
    if (isSetNombreConductor())
      hashCode = hashCode * 8191 + nombreConductor.hashCode();

    hashCode = hashCode * 8191 + dictamen;

    hashCode = hashCode * 8191 + ((isSetFecha()) ? 131071 : 524287);
    if (isSetFecha())
      hashCode = hashCode * 8191 + fecha.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Reporte other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetIdreporte()).compareTo(other.isSetIdreporte());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdreporte()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idreporte, other.idreporte);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLatitud()).compareTo(other.isSetLatitud());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLatitud()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.latitud, other.latitud);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLongitud()).compareTo(other.isSetLongitud());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLongitud()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.longitud, other.longitud);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNombreOtroConduc()).compareTo(other.isSetNombreOtroConduc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNombreOtroConduc()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nombreOtroConduc, other.nombreOtroConduc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdconductor()).compareTo(other.isSetIdconductor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdconductor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idconductor, other.idconductor);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFolioUnico_dictamen()).compareTo(other.isSetFolioUnico_dictamen());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFolioUnico_dictamen()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.folioUnico_dictamen, other.folioUnico_dictamen);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdFuncionario()).compareTo(other.isSetIdFuncionario());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdFuncionario()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idFuncionario, other.idFuncionario);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNombreConductor()).compareTo(other.isSetNombreConductor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNombreConductor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nombreConductor, other.nombreConductor);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDictamen()).compareTo(other.isSetDictamen());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDictamen()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dictamen, other.dictamen);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFecha()).compareTo(other.isSetFecha());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFecha()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fecha, other.fecha);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Reporte(");
    boolean first = true;

    sb.append("idreporte:");
    sb.append(this.idreporte);
    first = false;
    if (!first) sb.append(", ");
    sb.append("latitud:");
    if (this.latitud == null) {
      sb.append("null");
    } else {
      sb.append(this.latitud);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("longitud:");
    if (this.longitud == null) {
      sb.append("null");
    } else {
      sb.append(this.longitud);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("nombreOtroConduc:");
    if (this.nombreOtroConduc == null) {
      sb.append("null");
    } else {
      sb.append(this.nombreOtroConduc);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("idconductor:");
    sb.append(this.idconductor);
    first = false;
    if (!first) sb.append(", ");
    sb.append("folioUnico_dictamen:");
    sb.append(this.folioUnico_dictamen);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idFuncionario:");
    sb.append(this.idFuncionario);
    first = false;
    if (!first) sb.append(", ");
    sb.append("nombreConductor:");
    if (this.nombreConductor == null) {
      sb.append("null");
    } else {
      sb.append(this.nombreConductor);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dictamen:");
    sb.append(this.dictamen);
    first = false;
    if (!first) sb.append(", ");
    sb.append("fecha:");
    if (this.fecha == null) {
      sb.append("null");
    } else {
      sb.append(this.fecha);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ReporteStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ReporteStandardScheme getScheme() {
      return new ReporteStandardScheme();
    }
  }

  private static class ReporteStandardScheme extends org.apache.thrift.scheme.StandardScheme<Reporte> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Reporte struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // IDREPORTE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idreporte = iprot.readI32();
              struct.setIdreporteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // LATITUD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.latitud = iprot.readString();
              struct.setLatitudIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LONGITUD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.longitud = iprot.readString();
              struct.setLongitudIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // NOMBRE_OTRO_CONDUC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nombreOtroConduc = iprot.readString();
              struct.setNombreOtroConducIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // IDCONDUCTOR
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idconductor = iprot.readI32();
              struct.setIdconductorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // FOLIO_UNICO_DICTAMEN
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.folioUnico_dictamen = iprot.readI32();
              struct.setFolioUnico_dictamenIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ID_FUNCIONARIO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idFuncionario = iprot.readI32();
              struct.setIdFuncionarioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // NOMBRE_CONDUCTOR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nombreConductor = iprot.readString();
              struct.setNombreConductorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // DICTAMEN
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.dictamen = iprot.readI32();
              struct.setDictamenIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // FECHA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fecha = iprot.readString();
              struct.setFechaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Reporte struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(IDREPORTE_FIELD_DESC);
      oprot.writeI32(struct.idreporte);
      oprot.writeFieldEnd();
      if (struct.latitud != null) {
        oprot.writeFieldBegin(LATITUD_FIELD_DESC);
        oprot.writeString(struct.latitud);
        oprot.writeFieldEnd();
      }
      if (struct.longitud != null) {
        oprot.writeFieldBegin(LONGITUD_FIELD_DESC);
        oprot.writeString(struct.longitud);
        oprot.writeFieldEnd();
      }
      if (struct.nombreOtroConduc != null) {
        oprot.writeFieldBegin(NOMBRE_OTRO_CONDUC_FIELD_DESC);
        oprot.writeString(struct.nombreOtroConduc);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IDCONDUCTOR_FIELD_DESC);
      oprot.writeI32(struct.idconductor);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FOLIO_UNICO_DICTAMEN_FIELD_DESC);
      oprot.writeI32(struct.folioUnico_dictamen);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ID_FUNCIONARIO_FIELD_DESC);
      oprot.writeI32(struct.idFuncionario);
      oprot.writeFieldEnd();
      if (struct.nombreConductor != null) {
        oprot.writeFieldBegin(NOMBRE_CONDUCTOR_FIELD_DESC);
        oprot.writeString(struct.nombreConductor);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(DICTAMEN_FIELD_DESC);
      oprot.writeI32(struct.dictamen);
      oprot.writeFieldEnd();
      if (struct.fecha != null) {
        oprot.writeFieldBegin(FECHA_FIELD_DESC);
        oprot.writeString(struct.fecha);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ReporteTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ReporteTupleScheme getScheme() {
      return new ReporteTupleScheme();
    }
  }

  private static class ReporteTupleScheme extends org.apache.thrift.scheme.TupleScheme<Reporte> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Reporte struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetIdreporte()) {
        optionals.set(0);
      }
      if (struct.isSetLatitud()) {
        optionals.set(1);
      }
      if (struct.isSetLongitud()) {
        optionals.set(2);
      }
      if (struct.isSetNombreOtroConduc()) {
        optionals.set(3);
      }
      if (struct.isSetIdconductor()) {
        optionals.set(4);
      }
      if (struct.isSetFolioUnico_dictamen()) {
        optionals.set(5);
      }
      if (struct.isSetIdFuncionario()) {
        optionals.set(6);
      }
      if (struct.isSetNombreConductor()) {
        optionals.set(7);
      }
      if (struct.isSetDictamen()) {
        optionals.set(8);
      }
      if (struct.isSetFecha()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetIdreporte()) {
        oprot.writeI32(struct.idreporte);
      }
      if (struct.isSetLatitud()) {
        oprot.writeString(struct.latitud);
      }
      if (struct.isSetLongitud()) {
        oprot.writeString(struct.longitud);
      }
      if (struct.isSetNombreOtroConduc()) {
        oprot.writeString(struct.nombreOtroConduc);
      }
      if (struct.isSetIdconductor()) {
        oprot.writeI32(struct.idconductor);
      }
      if (struct.isSetFolioUnico_dictamen()) {
        oprot.writeI32(struct.folioUnico_dictamen);
      }
      if (struct.isSetIdFuncionario()) {
        oprot.writeI32(struct.idFuncionario);
      }
      if (struct.isSetNombreConductor()) {
        oprot.writeString(struct.nombreConductor);
      }
      if (struct.isSetDictamen()) {
        oprot.writeI32(struct.dictamen);
      }
      if (struct.isSetFecha()) {
        oprot.writeString(struct.fecha);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Reporte struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.idreporte = iprot.readI32();
        struct.setIdreporteIsSet(true);
      }
      if (incoming.get(1)) {
        struct.latitud = iprot.readString();
        struct.setLatitudIsSet(true);
      }
      if (incoming.get(2)) {
        struct.longitud = iprot.readString();
        struct.setLongitudIsSet(true);
      }
      if (incoming.get(3)) {
        struct.nombreOtroConduc = iprot.readString();
        struct.setNombreOtroConducIsSet(true);
      }
      if (incoming.get(4)) {
        struct.idconductor = iprot.readI32();
        struct.setIdconductorIsSet(true);
      }
      if (incoming.get(5)) {
        struct.folioUnico_dictamen = iprot.readI32();
        struct.setFolioUnico_dictamenIsSet(true);
      }
      if (incoming.get(6)) {
        struct.idFuncionario = iprot.readI32();
        struct.setIdFuncionarioIsSet(true);
      }
      if (incoming.get(7)) {
        struct.nombreConductor = iprot.readString();
        struct.setNombreConductorIsSet(true);
      }
      if (incoming.get(8)) {
        struct.dictamen = iprot.readI32();
        struct.setDictamenIsSet(true);
      }
      if (incoming.get(9)) {
        struct.fecha = iprot.readString();
        struct.setFechaIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

