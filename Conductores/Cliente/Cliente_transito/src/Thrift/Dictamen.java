/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package Thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
//@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-06-27")
public class Dictamen implements org.apache.thrift.TBase<Dictamen, Dictamen._Fields>, java.io.Serializable, Cloneable, Comparable<Dictamen> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Dictamen");

  private static final org.apache.thrift.protocol.TField FOLIO_UNICO_FIELD_DESC = new org.apache.thrift.protocol.TField("folioUnico", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField DICTAMEN_FIELD_DESC = new org.apache.thrift.protocol.TField("dictamen", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField FECHA_HORA_FIELD_DESC = new org.apache.thrift.protocol.TField("fechaHora", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ID_FUNCIONARIO_FIELD_DESC = new org.apache.thrift.protocol.TField("idFuncionario", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField ID_REPORTE_FIELD_DESC = new org.apache.thrift.protocol.TField("idReporte", org.apache.thrift.protocol.TType.I32, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new DictamenStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new DictamenTupleSchemeFactory();

  public int folioUnico; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String dictamen; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String fechaHora; // required
  public int idFuncionario; // required
  public int idReporte; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    FOLIO_UNICO((short)1, "folioUnico"),
    DICTAMEN((short)2, "dictamen"),
    FECHA_HORA((short)3, "fechaHora"),
    ID_FUNCIONARIO((short)4, "idFuncionario"),
    ID_REPORTE((short)5, "idReporte");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // FOLIO_UNICO
          return FOLIO_UNICO;
        case 2: // DICTAMEN
          return DICTAMEN;
        case 3: // FECHA_HORA
          return FECHA_HORA;
        case 4: // ID_FUNCIONARIO
          return ID_FUNCIONARIO;
        case 5: // ID_REPORTE
          return ID_REPORTE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __FOLIOUNICO_ISSET_ID = 0;
  private static final int __IDFUNCIONARIO_ISSET_ID = 1;
  private static final int __IDREPORTE_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.FOLIO_UNICO, new org.apache.thrift.meta_data.FieldMetaData("folioUnico", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DICTAMEN, new org.apache.thrift.meta_data.FieldMetaData("dictamen", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FECHA_HORA, new org.apache.thrift.meta_data.FieldMetaData("fechaHora", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ID_FUNCIONARIO, new org.apache.thrift.meta_data.FieldMetaData("idFuncionario", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ID_REPORTE, new org.apache.thrift.meta_data.FieldMetaData("idReporte", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Dictamen.class, metaDataMap);
  }

  public Dictamen() {
  }

  public Dictamen(
    int folioUnico,
    java.lang.String dictamen,
    java.lang.String fechaHora,
    int idFuncionario,
    int idReporte)
  {
    this();
    this.folioUnico = folioUnico;
    setFolioUnicoIsSet(true);
    this.dictamen = dictamen;
    this.fechaHora = fechaHora;
    this.idFuncionario = idFuncionario;
    setIdFuncionarioIsSet(true);
    this.idReporte = idReporte;
    setIdReporteIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Dictamen(Dictamen other) {
    __isset_bitfield = other.__isset_bitfield;
    this.folioUnico = other.folioUnico;
    if (other.isSetDictamen()) {
      this.dictamen = other.dictamen;
    }
    if (other.isSetFechaHora()) {
      this.fechaHora = other.fechaHora;
    }
    this.idFuncionario = other.idFuncionario;
    this.idReporte = other.idReporte;
  }

  public Dictamen deepCopy() {
    return new Dictamen(this);
  }

  @Override
  public void clear() {
    setFolioUnicoIsSet(false);
    this.folioUnico = 0;
    this.dictamen = null;
    this.fechaHora = null;
    setIdFuncionarioIsSet(false);
    this.idFuncionario = 0;
    setIdReporteIsSet(false);
    this.idReporte = 0;
  }

  public int getFolioUnico() {
    return this.folioUnico;
  }

  public Dictamen setFolioUnico(int folioUnico) {
    this.folioUnico = folioUnico;
    setFolioUnicoIsSet(true);
    return this;
  }

  public void unsetFolioUnico() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FOLIOUNICO_ISSET_ID);
  }

  /** Returns true if field folioUnico is set (has been assigned a value) and false otherwise */
  public boolean isSetFolioUnico() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FOLIOUNICO_ISSET_ID);
  }

  public void setFolioUnicoIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FOLIOUNICO_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getDictamen() {
    return this.dictamen;
  }

  public Dictamen setDictamen(@org.apache.thrift.annotation.Nullable java.lang.String dictamen) {
    this.dictamen = dictamen;
    return this;
  }

  public void unsetDictamen() {
    this.dictamen = null;
  }

  /** Returns true if field dictamen is set (has been assigned a value) and false otherwise */
  public boolean isSetDictamen() {
    return this.dictamen != null;
  }

  public void setDictamenIsSet(boolean value) {
    if (!value) {
      this.dictamen = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getFechaHora() {
    return this.fechaHora;
  }

  public Dictamen setFechaHora(@org.apache.thrift.annotation.Nullable java.lang.String fechaHora) {
    this.fechaHora = fechaHora;
    return this;
  }

  public void unsetFechaHora() {
    this.fechaHora = null;
  }

  /** Returns true if field fechaHora is set (has been assigned a value) and false otherwise */
  public boolean isSetFechaHora() {
    return this.fechaHora != null;
  }

  public void setFechaHoraIsSet(boolean value) {
    if (!value) {
      this.fechaHora = null;
    }
  }

  public int getIdFuncionario() {
    return this.idFuncionario;
  }

  public Dictamen setIdFuncionario(int idFuncionario) {
    this.idFuncionario = idFuncionario;
    setIdFuncionarioIsSet(true);
    return this;
  }

  public void unsetIdFuncionario() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDFUNCIONARIO_ISSET_ID);
  }

  /** Returns true if field idFuncionario is set (has been assigned a value) and false otherwise */
  public boolean isSetIdFuncionario() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDFUNCIONARIO_ISSET_ID);
  }

  public void setIdFuncionarioIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDFUNCIONARIO_ISSET_ID, value);
  }

  public int getIdReporte() {
    return this.idReporte;
  }

  public Dictamen setIdReporte(int idReporte) {
    this.idReporte = idReporte;
    setIdReporteIsSet(true);
    return this;
  }

  public void unsetIdReporte() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDREPORTE_ISSET_ID);
  }

  /** Returns true if field idReporte is set (has been assigned a value) and false otherwise */
  public boolean isSetIdReporte() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDREPORTE_ISSET_ID);
  }

  public void setIdReporteIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDREPORTE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case FOLIO_UNICO:
      if (value == null) {
        unsetFolioUnico();
      } else {
        setFolioUnico((java.lang.Integer)value);
      }
      break;

    case DICTAMEN:
      if (value == null) {
        unsetDictamen();
      } else {
        setDictamen((java.lang.String)value);
      }
      break;

    case FECHA_HORA:
      if (value == null) {
        unsetFechaHora();
      } else {
        setFechaHora((java.lang.String)value);
      }
      break;

    case ID_FUNCIONARIO:
      if (value == null) {
        unsetIdFuncionario();
      } else {
        setIdFuncionario((java.lang.Integer)value);
      }
      break;

    case ID_REPORTE:
      if (value == null) {
        unsetIdReporte();
      } else {
        setIdReporte((java.lang.Integer)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case FOLIO_UNICO:
      return getFolioUnico();

    case DICTAMEN:
      return getDictamen();

    case FECHA_HORA:
      return getFechaHora();

    case ID_FUNCIONARIO:
      return getIdFuncionario();

    case ID_REPORTE:
      return getIdReporte();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case FOLIO_UNICO:
      return isSetFolioUnico();
    case DICTAMEN:
      return isSetDictamen();
    case FECHA_HORA:
      return isSetFechaHora();
    case ID_FUNCIONARIO:
      return isSetIdFuncionario();
    case ID_REPORTE:
      return isSetIdReporte();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Dictamen)
      return this.equals((Dictamen)that);
    return false;
  }

  public boolean equals(Dictamen that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_folioUnico = true;
    boolean that_present_folioUnico = true;
    if (this_present_folioUnico || that_present_folioUnico) {
      if (!(this_present_folioUnico && that_present_folioUnico))
        return false;
      if (this.folioUnico != that.folioUnico)
        return false;
    }

    boolean this_present_dictamen = true && this.isSetDictamen();
    boolean that_present_dictamen = true && that.isSetDictamen();
    if (this_present_dictamen || that_present_dictamen) {
      if (!(this_present_dictamen && that_present_dictamen))
        return false;
      if (!this.dictamen.equals(that.dictamen))
        return false;
    }

    boolean this_present_fechaHora = true && this.isSetFechaHora();
    boolean that_present_fechaHora = true && that.isSetFechaHora();
    if (this_present_fechaHora || that_present_fechaHora) {
      if (!(this_present_fechaHora && that_present_fechaHora))
        return false;
      if (!this.fechaHora.equals(that.fechaHora))
        return false;
    }

    boolean this_present_idFuncionario = true;
    boolean that_present_idFuncionario = true;
    if (this_present_idFuncionario || that_present_idFuncionario) {
      if (!(this_present_idFuncionario && that_present_idFuncionario))
        return false;
      if (this.idFuncionario != that.idFuncionario)
        return false;
    }

    boolean this_present_idReporte = true;
    boolean that_present_idReporte = true;
    if (this_present_idReporte || that_present_idReporte) {
      if (!(this_present_idReporte && that_present_idReporte))
        return false;
      if (this.idReporte != that.idReporte)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + folioUnico;

    hashCode = hashCode * 8191 + ((isSetDictamen()) ? 131071 : 524287);
    if (isSetDictamen())
      hashCode = hashCode * 8191 + dictamen.hashCode();

    hashCode = hashCode * 8191 + ((isSetFechaHora()) ? 131071 : 524287);
    if (isSetFechaHora())
      hashCode = hashCode * 8191 + fechaHora.hashCode();

    hashCode = hashCode * 8191 + idFuncionario;

    hashCode = hashCode * 8191 + idReporte;

    return hashCode;
  }

  @Override
  public int compareTo(Dictamen other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetFolioUnico()).compareTo(other.isSetFolioUnico());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFolioUnico()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.folioUnico, other.folioUnico);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDictamen()).compareTo(other.isSetDictamen());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDictamen()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dictamen, other.dictamen);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFechaHora()).compareTo(other.isSetFechaHora());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFechaHora()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fechaHora, other.fechaHora);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdFuncionario()).compareTo(other.isSetIdFuncionario());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdFuncionario()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idFuncionario, other.idFuncionario);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdReporte()).compareTo(other.isSetIdReporte());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdReporte()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idReporte, other.idReporte);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Dictamen(");
    boolean first = true;

    sb.append("folioUnico:");
    sb.append(this.folioUnico);
    first = false;
    if (!first) sb.append(", ");
    sb.append("dictamen:");
    if (this.dictamen == null) {
      sb.append("null");
    } else {
      sb.append(this.dictamen);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fechaHora:");
    if (this.fechaHora == null) {
      sb.append("null");
    } else {
      sb.append(this.fechaHora);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("idFuncionario:");
    sb.append(this.idFuncionario);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idReporte:");
    sb.append(this.idReporte);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class DictamenStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public DictamenStandardScheme getScheme() {
      return new DictamenStandardScheme();
    }
  }

  private static class DictamenStandardScheme extends org.apache.thrift.scheme.StandardScheme<Dictamen> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Dictamen struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // FOLIO_UNICO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.folioUnico = iprot.readI32();
              struct.setFolioUnicoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DICTAMEN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.dictamen = iprot.readString();
              struct.setDictamenIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // FECHA_HORA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fechaHora = iprot.readString();
              struct.setFechaHoraIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ID_FUNCIONARIO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idFuncionario = iprot.readI32();
              struct.setIdFuncionarioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ID_REPORTE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idReporte = iprot.readI32();
              struct.setIdReporteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Dictamen struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(FOLIO_UNICO_FIELD_DESC);
      oprot.writeI32(struct.folioUnico);
      oprot.writeFieldEnd();
      if (struct.dictamen != null) {
        oprot.writeFieldBegin(DICTAMEN_FIELD_DESC);
        oprot.writeString(struct.dictamen);
        oprot.writeFieldEnd();
      }
      if (struct.fechaHora != null) {
        oprot.writeFieldBegin(FECHA_HORA_FIELD_DESC);
        oprot.writeString(struct.fechaHora);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ID_FUNCIONARIO_FIELD_DESC);
      oprot.writeI32(struct.idFuncionario);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ID_REPORTE_FIELD_DESC);
      oprot.writeI32(struct.idReporte);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class DictamenTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public DictamenTupleScheme getScheme() {
      return new DictamenTupleScheme();
    }
  }

  private static class DictamenTupleScheme extends org.apache.thrift.scheme.TupleScheme<Dictamen> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Dictamen struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetFolioUnico()) {
        optionals.set(0);
      }
      if (struct.isSetDictamen()) {
        optionals.set(1);
      }
      if (struct.isSetFechaHora()) {
        optionals.set(2);
      }
      if (struct.isSetIdFuncionario()) {
        optionals.set(3);
      }
      if (struct.isSetIdReporte()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetFolioUnico()) {
        oprot.writeI32(struct.folioUnico);
      }
      if (struct.isSetDictamen()) {
        oprot.writeString(struct.dictamen);
      }
      if (struct.isSetFechaHora()) {
        oprot.writeString(struct.fechaHora);
      }
      if (struct.isSetIdFuncionario()) {
        oprot.writeI32(struct.idFuncionario);
      }
      if (struct.isSetIdReporte()) {
        oprot.writeI32(struct.idReporte);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Dictamen struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.folioUnico = iprot.readI32();
        struct.setFolioUnicoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.dictamen = iprot.readString();
        struct.setDictamenIsSet(true);
      }
      if (incoming.get(2)) {
        struct.fechaHora = iprot.readString();
        struct.setFechaHoraIsSet(true);
      }
      if (incoming.get(3)) {
        struct.idFuncionario = iprot.readI32();
        struct.setIdFuncionarioIsSet(true);
      }
      if (incoming.get(4)) {
        struct.idReporte = iprot.readI32();
        struct.setIdReporteIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

