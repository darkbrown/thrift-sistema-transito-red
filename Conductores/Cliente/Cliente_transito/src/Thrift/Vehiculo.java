/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package Thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
//@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-06-27")
public class Vehiculo implements org.apache.thrift.TBase<Vehiculo, Vehiculo._Fields>, java.io.Serializable, Cloneable, Comparable<Vehiculo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Vehiculo");

  private static final org.apache.thrift.protocol.TField ANO_FIELD_DESC = new org.apache.thrift.protocol.TField("ano", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField COLOR_FIELD_DESC = new org.apache.thrift.protocol.TField("color", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField MARCA_FIELD_DESC = new org.apache.thrift.protocol.TField("marca", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField MODELO_FIELD_DESC = new org.apache.thrift.protocol.TField("modelo", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField NOM_ASEGURADORA_FIELD_DESC = new org.apache.thrift.protocol.TField("nomAseguradora", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField NUM_PLACA_FIELD_DESC = new org.apache.thrift.protocol.TField("numPlaca", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField NUM_POLIZA_FIELD_DESC = new org.apache.thrift.protocol.TField("numPoliza", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField ESTATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("estatus", org.apache.thrift.protocol.TType.I32, (short)8);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new VehiculoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new VehiculoTupleSchemeFactory();

  public int ano; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String color; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String marca; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String modelo; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String nomAseguradora; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String numPlaca; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String numPoliza; // required
  public int estatus; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ANO((short)1, "ano"),
    COLOR((short)2, "color"),
    MARCA((short)3, "marca"),
    MODELO((short)4, "modelo"),
    NOM_ASEGURADORA((short)5, "nomAseguradora"),
    NUM_PLACA((short)6, "numPlaca"),
    NUM_POLIZA((short)7, "numPoliza"),
    ESTATUS((short)8, "estatus");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ANO
          return ANO;
        case 2: // COLOR
          return COLOR;
        case 3: // MARCA
          return MARCA;
        case 4: // MODELO
          return MODELO;
        case 5: // NOM_ASEGURADORA
          return NOM_ASEGURADORA;
        case 6: // NUM_PLACA
          return NUM_PLACA;
        case 7: // NUM_POLIZA
          return NUM_POLIZA;
        case 8: // ESTATUS
          return ESTATUS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ANO_ISSET_ID = 0;
  private static final int __ESTATUS_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ANO, new org.apache.thrift.meta_data.FieldMetaData("ano", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COLOR, new org.apache.thrift.meta_data.FieldMetaData("color", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MARCA, new org.apache.thrift.meta_data.FieldMetaData("marca", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MODELO, new org.apache.thrift.meta_data.FieldMetaData("modelo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NOM_ASEGURADORA, new org.apache.thrift.meta_data.FieldMetaData("nomAseguradora", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUM_PLACA, new org.apache.thrift.meta_data.FieldMetaData("numPlaca", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUM_POLIZA, new org.apache.thrift.meta_data.FieldMetaData("numPoliza", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ESTATUS, new org.apache.thrift.meta_data.FieldMetaData("estatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Vehiculo.class, metaDataMap);
  }

  public Vehiculo() {
  }

  public Vehiculo(
    int ano,
    java.lang.String color,
    java.lang.String marca,
    java.lang.String modelo,
    java.lang.String nomAseguradora,
    java.lang.String numPlaca,
    java.lang.String numPoliza,
    int estatus)
  {
    this();
    this.ano = ano;
    setAnoIsSet(true);
    this.color = color;
    this.marca = marca;
    this.modelo = modelo;
    this.nomAseguradora = nomAseguradora;
    this.numPlaca = numPlaca;
    this.numPoliza = numPoliza;
    this.estatus = estatus;
    setEstatusIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Vehiculo(Vehiculo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.ano = other.ano;
    if (other.isSetColor()) {
      this.color = other.color;
    }
    if (other.isSetMarca()) {
      this.marca = other.marca;
    }
    if (other.isSetModelo()) {
      this.modelo = other.modelo;
    }
    if (other.isSetNomAseguradora()) {
      this.nomAseguradora = other.nomAseguradora;
    }
    if (other.isSetNumPlaca()) {
      this.numPlaca = other.numPlaca;
    }
    if (other.isSetNumPoliza()) {
      this.numPoliza = other.numPoliza;
    }
    this.estatus = other.estatus;
  }

  public Vehiculo deepCopy() {
    return new Vehiculo(this);
  }

  @Override
  public void clear() {
    setAnoIsSet(false);
    this.ano = 0;
    this.color = null;
    this.marca = null;
    this.modelo = null;
    this.nomAseguradora = null;
    this.numPlaca = null;
    this.numPoliza = null;
    setEstatusIsSet(false);
    this.estatus = 0;
  }

  public int getAno() {
    return this.ano;
  }

  public Vehiculo setAno(int ano) {
    this.ano = ano;
    setAnoIsSet(true);
    return this;
  }

  public void unsetAno() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ANO_ISSET_ID);
  }

  /** Returns true if field ano is set (has been assigned a value) and false otherwise */
  public boolean isSetAno() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ANO_ISSET_ID);
  }

  public void setAnoIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ANO_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getColor() {
    return this.color;
  }

  public Vehiculo setColor(@org.apache.thrift.annotation.Nullable java.lang.String color) {
    this.color = color;
    return this;
  }

  public void unsetColor() {
    this.color = null;
  }

  /** Returns true if field color is set (has been assigned a value) and false otherwise */
  public boolean isSetColor() {
    return this.color != null;
  }

  public void setColorIsSet(boolean value) {
    if (!value) {
      this.color = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getMarca() {
    return this.marca;
  }

  public Vehiculo setMarca(@org.apache.thrift.annotation.Nullable java.lang.String marca) {
    this.marca = marca;
    return this;
  }

  public void unsetMarca() {
    this.marca = null;
  }

  /** Returns true if field marca is set (has been assigned a value) and false otherwise */
  public boolean isSetMarca() {
    return this.marca != null;
  }

  public void setMarcaIsSet(boolean value) {
    if (!value) {
      this.marca = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getModelo() {
    return this.modelo;
  }

  public Vehiculo setModelo(@org.apache.thrift.annotation.Nullable java.lang.String modelo) {
    this.modelo = modelo;
    return this;
  }

  public void unsetModelo() {
    this.modelo = null;
  }

  /** Returns true if field modelo is set (has been assigned a value) and false otherwise */
  public boolean isSetModelo() {
    return this.modelo != null;
  }

  public void setModeloIsSet(boolean value) {
    if (!value) {
      this.modelo = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getNomAseguradora() {
    return this.nomAseguradora;
  }

  public Vehiculo setNomAseguradora(@org.apache.thrift.annotation.Nullable java.lang.String nomAseguradora) {
    this.nomAseguradora = nomAseguradora;
    return this;
  }

  public void unsetNomAseguradora() {
    this.nomAseguradora = null;
  }

  /** Returns true if field nomAseguradora is set (has been assigned a value) and false otherwise */
  public boolean isSetNomAseguradora() {
    return this.nomAseguradora != null;
  }

  public void setNomAseguradoraIsSet(boolean value) {
    if (!value) {
      this.nomAseguradora = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getNumPlaca() {
    return this.numPlaca;
  }

  public Vehiculo setNumPlaca(@org.apache.thrift.annotation.Nullable java.lang.String numPlaca) {
    this.numPlaca = numPlaca;
    return this;
  }

  public void unsetNumPlaca() {
    this.numPlaca = null;
  }

  /** Returns true if field numPlaca is set (has been assigned a value) and false otherwise */
  public boolean isSetNumPlaca() {
    return this.numPlaca != null;
  }

  public void setNumPlacaIsSet(boolean value) {
    if (!value) {
      this.numPlaca = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getNumPoliza() {
    return this.numPoliza;
  }

  public Vehiculo setNumPoliza(@org.apache.thrift.annotation.Nullable java.lang.String numPoliza) {
    this.numPoliza = numPoliza;
    return this;
  }

  public void unsetNumPoliza() {
    this.numPoliza = null;
  }

  /** Returns true if field numPoliza is set (has been assigned a value) and false otherwise */
  public boolean isSetNumPoliza() {
    return this.numPoliza != null;
  }

  public void setNumPolizaIsSet(boolean value) {
    if (!value) {
      this.numPoliza = null;
    }
  }

  public int getEstatus() {
    return this.estatus;
  }

  public Vehiculo setEstatus(int estatus) {
    this.estatus = estatus;
    setEstatusIsSet(true);
    return this;
  }

  public void unsetEstatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ESTATUS_ISSET_ID);
  }

  /** Returns true if field estatus is set (has been assigned a value) and false otherwise */
  public boolean isSetEstatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ESTATUS_ISSET_ID);
  }

  public void setEstatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ESTATUS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case ANO:
      if (value == null) {
        unsetAno();
      } else {
        setAno((java.lang.Integer)value);
      }
      break;

    case COLOR:
      if (value == null) {
        unsetColor();
      } else {
        setColor((java.lang.String)value);
      }
      break;

    case MARCA:
      if (value == null) {
        unsetMarca();
      } else {
        setMarca((java.lang.String)value);
      }
      break;

    case MODELO:
      if (value == null) {
        unsetModelo();
      } else {
        setModelo((java.lang.String)value);
      }
      break;

    case NOM_ASEGURADORA:
      if (value == null) {
        unsetNomAseguradora();
      } else {
        setNomAseguradora((java.lang.String)value);
      }
      break;

    case NUM_PLACA:
      if (value == null) {
        unsetNumPlaca();
      } else {
        setNumPlaca((java.lang.String)value);
      }
      break;

    case NUM_POLIZA:
      if (value == null) {
        unsetNumPoliza();
      } else {
        setNumPoliza((java.lang.String)value);
      }
      break;

    case ESTATUS:
      if (value == null) {
        unsetEstatus();
      } else {
        setEstatus((java.lang.Integer)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ANO:
      return getAno();

    case COLOR:
      return getColor();

    case MARCA:
      return getMarca();

    case MODELO:
      return getModelo();

    case NOM_ASEGURADORA:
      return getNomAseguradora();

    case NUM_PLACA:
      return getNumPlaca();

    case NUM_POLIZA:
      return getNumPoliza();

    case ESTATUS:
      return getEstatus();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ANO:
      return isSetAno();
    case COLOR:
      return isSetColor();
    case MARCA:
      return isSetMarca();
    case MODELO:
      return isSetModelo();
    case NOM_ASEGURADORA:
      return isSetNomAseguradora();
    case NUM_PLACA:
      return isSetNumPlaca();
    case NUM_POLIZA:
      return isSetNumPoliza();
    case ESTATUS:
      return isSetEstatus();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Vehiculo)
      return this.equals((Vehiculo)that);
    return false;
  }

  public boolean equals(Vehiculo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_ano = true;
    boolean that_present_ano = true;
    if (this_present_ano || that_present_ano) {
      if (!(this_present_ano && that_present_ano))
        return false;
      if (this.ano != that.ano)
        return false;
    }

    boolean this_present_color = true && this.isSetColor();
    boolean that_present_color = true && that.isSetColor();
    if (this_present_color || that_present_color) {
      if (!(this_present_color && that_present_color))
        return false;
      if (!this.color.equals(that.color))
        return false;
    }

    boolean this_present_marca = true && this.isSetMarca();
    boolean that_present_marca = true && that.isSetMarca();
    if (this_present_marca || that_present_marca) {
      if (!(this_present_marca && that_present_marca))
        return false;
      if (!this.marca.equals(that.marca))
        return false;
    }

    boolean this_present_modelo = true && this.isSetModelo();
    boolean that_present_modelo = true && that.isSetModelo();
    if (this_present_modelo || that_present_modelo) {
      if (!(this_present_modelo && that_present_modelo))
        return false;
      if (!this.modelo.equals(that.modelo))
        return false;
    }

    boolean this_present_nomAseguradora = true && this.isSetNomAseguradora();
    boolean that_present_nomAseguradora = true && that.isSetNomAseguradora();
    if (this_present_nomAseguradora || that_present_nomAseguradora) {
      if (!(this_present_nomAseguradora && that_present_nomAseguradora))
        return false;
      if (!this.nomAseguradora.equals(that.nomAseguradora))
        return false;
    }

    boolean this_present_numPlaca = true && this.isSetNumPlaca();
    boolean that_present_numPlaca = true && that.isSetNumPlaca();
    if (this_present_numPlaca || that_present_numPlaca) {
      if (!(this_present_numPlaca && that_present_numPlaca))
        return false;
      if (!this.numPlaca.equals(that.numPlaca))
        return false;
    }

    boolean this_present_numPoliza = true && this.isSetNumPoliza();
    boolean that_present_numPoliza = true && that.isSetNumPoliza();
    if (this_present_numPoliza || that_present_numPoliza) {
      if (!(this_present_numPoliza && that_present_numPoliza))
        return false;
      if (!this.numPoliza.equals(that.numPoliza))
        return false;
    }

    boolean this_present_estatus = true;
    boolean that_present_estatus = true;
    if (this_present_estatus || that_present_estatus) {
      if (!(this_present_estatus && that_present_estatus))
        return false;
      if (this.estatus != that.estatus)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ano;

    hashCode = hashCode * 8191 + ((isSetColor()) ? 131071 : 524287);
    if (isSetColor())
      hashCode = hashCode * 8191 + color.hashCode();

    hashCode = hashCode * 8191 + ((isSetMarca()) ? 131071 : 524287);
    if (isSetMarca())
      hashCode = hashCode * 8191 + marca.hashCode();

    hashCode = hashCode * 8191 + ((isSetModelo()) ? 131071 : 524287);
    if (isSetModelo())
      hashCode = hashCode * 8191 + modelo.hashCode();

    hashCode = hashCode * 8191 + ((isSetNomAseguradora()) ? 131071 : 524287);
    if (isSetNomAseguradora())
      hashCode = hashCode * 8191 + nomAseguradora.hashCode();

    hashCode = hashCode * 8191 + ((isSetNumPlaca()) ? 131071 : 524287);
    if (isSetNumPlaca())
      hashCode = hashCode * 8191 + numPlaca.hashCode();

    hashCode = hashCode * 8191 + ((isSetNumPoliza()) ? 131071 : 524287);
    if (isSetNumPoliza())
      hashCode = hashCode * 8191 + numPoliza.hashCode();

    hashCode = hashCode * 8191 + estatus;

    return hashCode;
  }

  @Override
  public int compareTo(Vehiculo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetAno()).compareTo(other.isSetAno());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAno()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ano, other.ano);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetColor()).compareTo(other.isSetColor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetColor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.color, other.color);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMarca()).compareTo(other.isSetMarca());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMarca()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.marca, other.marca);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetModelo()).compareTo(other.isSetModelo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModelo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.modelo, other.modelo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNomAseguradora()).compareTo(other.isSetNomAseguradora());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomAseguradora()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomAseguradora, other.nomAseguradora);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNumPlaca()).compareTo(other.isSetNumPlaca());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumPlaca()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numPlaca, other.numPlaca);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNumPoliza()).compareTo(other.isSetNumPoliza());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumPoliza()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numPoliza, other.numPoliza);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEstatus()).compareTo(other.isSetEstatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEstatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.estatus, other.estatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Vehiculo(");
    boolean first = true;

    sb.append("ano:");
    sb.append(this.ano);
    first = false;
    if (!first) sb.append(", ");
    sb.append("color:");
    if (this.color == null) {
      sb.append("null");
    } else {
      sb.append(this.color);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("marca:");
    if (this.marca == null) {
      sb.append("null");
    } else {
      sb.append(this.marca);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("modelo:");
    if (this.modelo == null) {
      sb.append("null");
    } else {
      sb.append(this.modelo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("nomAseguradora:");
    if (this.nomAseguradora == null) {
      sb.append("null");
    } else {
      sb.append(this.nomAseguradora);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("numPlaca:");
    if (this.numPlaca == null) {
      sb.append("null");
    } else {
      sb.append(this.numPlaca);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("numPoliza:");
    if (this.numPoliza == null) {
      sb.append("null");
    } else {
      sb.append(this.numPoliza);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("estatus:");
    sb.append(this.estatus);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class VehiculoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public VehiculoStandardScheme getScheme() {
      return new VehiculoStandardScheme();
    }
  }

  private static class VehiculoStandardScheme extends org.apache.thrift.scheme.StandardScheme<Vehiculo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Vehiculo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ANO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ano = iprot.readI32();
              struct.setAnoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COLOR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.color = iprot.readString();
              struct.setColorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MARCA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.marca = iprot.readString();
              struct.setMarcaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MODELO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.modelo = iprot.readString();
              struct.setModeloIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // NOM_ASEGURADORA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomAseguradora = iprot.readString();
              struct.setNomAseguradoraIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // NUM_PLACA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numPlaca = iprot.readString();
              struct.setNumPlacaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // NUM_POLIZA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numPoliza = iprot.readString();
              struct.setNumPolizaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ESTATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.estatus = iprot.readI32();
              struct.setEstatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Vehiculo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ANO_FIELD_DESC);
      oprot.writeI32(struct.ano);
      oprot.writeFieldEnd();
      if (struct.color != null) {
        oprot.writeFieldBegin(COLOR_FIELD_DESC);
        oprot.writeString(struct.color);
        oprot.writeFieldEnd();
      }
      if (struct.marca != null) {
        oprot.writeFieldBegin(MARCA_FIELD_DESC);
        oprot.writeString(struct.marca);
        oprot.writeFieldEnd();
      }
      if (struct.modelo != null) {
        oprot.writeFieldBegin(MODELO_FIELD_DESC);
        oprot.writeString(struct.modelo);
        oprot.writeFieldEnd();
      }
      if (struct.nomAseguradora != null) {
        oprot.writeFieldBegin(NOM_ASEGURADORA_FIELD_DESC);
        oprot.writeString(struct.nomAseguradora);
        oprot.writeFieldEnd();
      }
      if (struct.numPlaca != null) {
        oprot.writeFieldBegin(NUM_PLACA_FIELD_DESC);
        oprot.writeString(struct.numPlaca);
        oprot.writeFieldEnd();
      }
      if (struct.numPoliza != null) {
        oprot.writeFieldBegin(NUM_POLIZA_FIELD_DESC);
        oprot.writeString(struct.numPoliza);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ESTATUS_FIELD_DESC);
      oprot.writeI32(struct.estatus);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class VehiculoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public VehiculoTupleScheme getScheme() {
      return new VehiculoTupleScheme();
    }
  }

  private static class VehiculoTupleScheme extends org.apache.thrift.scheme.TupleScheme<Vehiculo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Vehiculo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetAno()) {
        optionals.set(0);
      }
      if (struct.isSetColor()) {
        optionals.set(1);
      }
      if (struct.isSetMarca()) {
        optionals.set(2);
      }
      if (struct.isSetModelo()) {
        optionals.set(3);
      }
      if (struct.isSetNomAseguradora()) {
        optionals.set(4);
      }
      if (struct.isSetNumPlaca()) {
        optionals.set(5);
      }
      if (struct.isSetNumPoliza()) {
        optionals.set(6);
      }
      if (struct.isSetEstatus()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetAno()) {
        oprot.writeI32(struct.ano);
      }
      if (struct.isSetColor()) {
        oprot.writeString(struct.color);
      }
      if (struct.isSetMarca()) {
        oprot.writeString(struct.marca);
      }
      if (struct.isSetModelo()) {
        oprot.writeString(struct.modelo);
      }
      if (struct.isSetNomAseguradora()) {
        oprot.writeString(struct.nomAseguradora);
      }
      if (struct.isSetNumPlaca()) {
        oprot.writeString(struct.numPlaca);
      }
      if (struct.isSetNumPoliza()) {
        oprot.writeString(struct.numPoliza);
      }
      if (struct.isSetEstatus()) {
        oprot.writeI32(struct.estatus);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Vehiculo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.ano = iprot.readI32();
        struct.setAnoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.color = iprot.readString();
        struct.setColorIsSet(true);
      }
      if (incoming.get(2)) {
        struct.marca = iprot.readString();
        struct.setMarcaIsSet(true);
      }
      if (incoming.get(3)) {
        struct.modelo = iprot.readString();
        struct.setModeloIsSet(true);
      }
      if (incoming.get(4)) {
        struct.nomAseguradora = iprot.readString();
        struct.setNomAseguradoraIsSet(true);
      }
      if (incoming.get(5)) {
        struct.numPlaca = iprot.readString();
        struct.setNumPlacaIsSet(true);
      }
      if (incoming.get(6)) {
        struct.numPoliza = iprot.readString();
        struct.setNumPolizaIsSet(true);
      }
      if (incoming.get(7)) {
        struct.estatus = iprot.readI32();
        struct.setEstatusIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

