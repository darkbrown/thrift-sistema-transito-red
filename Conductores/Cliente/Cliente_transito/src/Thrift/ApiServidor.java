/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package Thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
//@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-06-27")
public class ApiServidor {

  public interface Iface {

    public boolean confirmarConductor(long telefono, java.lang.String contrasena) throws ErrorBD, org.apache.thrift.TException;

    public boolean registrarConductor(Conductor conductor) throws ErrorBD, org.apache.thrift.TException;

    public boolean registrarVehiculo(Vehiculo vehiculo, long telefono) throws ErrorBD, org.apache.thrift.TException;

    public boolean modificarVehiculo(Vehiculo vehiculo, java.lang.String numPLacaAnt) throws ErrorBD, org.apache.thrift.TException;

    public boolean deshabilitarVehiculo(java.lang.String numPlaca) throws ErrorBD, org.apache.thrift.TException;

    public java.util.List<Vehiculo> consultarVehiculoPropio(long telefono) throws ErrorBD, org.apache.thrift.TException;

    public Vehiculo consultarVehiculoInfo(java.lang.String numPlaca) throws ErrorBD, org.apache.thrift.TException;

    public boolean registrarReporte(Reporte reporte, long telefono) throws ErrorBD, org.apache.thrift.TException;

    public boolean registrarFotografia(java.util.List<java.lang.String> fotografias, long telefono) throws ErrorBD, org.apache.thrift.TException;

    public java.util.List<java.lang.String> consultarFotografia(int folioUnico_dictamen) throws ErrorBD, org.apache.thrift.TException;

    public java.lang.String registrarVehiculoReporte(Vehiculo vehiculo) throws ErrorBD, org.apache.thrift.TException;

    public java.util.List<Reporte> consultarReporte(long telefono) throws ErrorBD, org.apache.thrift.TException;

    public java.util.List<Dictamen> consultarDictamen(java.util.List<java.lang.Integer> folioUnico) throws ErrorBD, org.apache.thrift.TException;

    public Conductor consultarConductorPropio(long telefono) throws ErrorBD, org.apache.thrift.TException;

    public java.lang.String recuperarNFuncionario(int folioUnico) throws ErrorBD, org.apache.thrift.TException;

    public java.util.List<Vehiculo> recuperarVehiculoReporte(int folioUnico_dictamen) throws ErrorBD, org.apache.thrift.TException;

    public boolean asociarVehiculoReporte(java.util.List<java.lang.String> numPLacas, long telefono) throws ErrorBD, org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void confirmarConductor(long telefono, java.lang.String contrasena, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException;

    public void registrarConductor(Conductor conductor, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException;

    public void registrarVehiculo(Vehiculo vehiculo, long telefono, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException;

    public void modificarVehiculo(Vehiculo vehiculo, java.lang.String numPLacaAnt, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException;

    public void deshabilitarVehiculo(java.lang.String numPlaca, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException;

    public void consultarVehiculoPropio(long telefono, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Vehiculo>> resultHandler) throws org.apache.thrift.TException;

    public void consultarVehiculoInfo(java.lang.String numPlaca, org.apache.thrift.async.AsyncMethodCallback<Vehiculo> resultHandler) throws org.apache.thrift.TException;

    public void registrarReporte(Reporte reporte, long telefono, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException;

    public void registrarFotografia(java.util.List<java.lang.String> fotografias, long telefono, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException;

    public void consultarFotografia(int folioUnico_dictamen, org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.String>> resultHandler) throws org.apache.thrift.TException;

    public void registrarVehiculoReporte(Vehiculo vehiculo, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException;

    public void consultarReporte(long telefono, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Reporte>> resultHandler) throws org.apache.thrift.TException;

    public void consultarDictamen(java.util.List<java.lang.Integer> folioUnico, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Dictamen>> resultHandler) throws org.apache.thrift.TException;

    public void consultarConductorPropio(long telefono, org.apache.thrift.async.AsyncMethodCallback<Conductor> resultHandler) throws org.apache.thrift.TException;

    public void recuperarNFuncionario(int folioUnico, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException;

    public void recuperarVehiculoReporte(int folioUnico_dictamen, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Vehiculo>> resultHandler) throws org.apache.thrift.TException;

    public void asociarVehiculoReporte(java.util.List<java.lang.String> numPLacas, long telefono, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public boolean confirmarConductor(long telefono, java.lang.String contrasena) throws ErrorBD, org.apache.thrift.TException
    {
      send_confirmarConductor(telefono, contrasena);
      return recv_confirmarConductor();
    }

    public void send_confirmarConductor(long telefono, java.lang.String contrasena) throws org.apache.thrift.TException
    {
      confirmarConductor_args args = new confirmarConductor_args();
      args.setTelefono(telefono);
      args.setContrasena(contrasena);
      sendBase("confirmarConductor", args);
    }

    public boolean recv_confirmarConductor() throws ErrorBD, org.apache.thrift.TException
    {
      confirmarConductor_result result = new confirmarConductor_result();
      receiveBase(result, "confirmarConductor");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.ebd != null) {
        throw result.ebd;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "confirmarConductor failed: unknown result");
    }

    public boolean registrarConductor(Conductor conductor) throws ErrorBD, org.apache.thrift.TException
    {
      send_registrarConductor(conductor);
      return recv_registrarConductor();
    }

    public void send_registrarConductor(Conductor conductor) throws org.apache.thrift.TException
    {
      registrarConductor_args args = new registrarConductor_args();
      args.setConductor(conductor);
      sendBase("registrarConductor", args);
    }

    public boolean recv_registrarConductor() throws ErrorBD, org.apache.thrift.TException
    {
      registrarConductor_result result = new registrarConductor_result();
      receiveBase(result, "registrarConductor");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.ebd != null) {
        throw result.ebd;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "registrarConductor failed: unknown result");
    }

    public boolean registrarVehiculo(Vehiculo vehiculo, long telefono) throws ErrorBD, org.apache.thrift.TException
    {
      send_registrarVehiculo(vehiculo, telefono);
      return recv_registrarVehiculo();
    }

    public void send_registrarVehiculo(Vehiculo vehiculo, long telefono) throws org.apache.thrift.TException
    {
      registrarVehiculo_args args = new registrarVehiculo_args();
      args.setVehiculo(vehiculo);
      args.setTelefono(telefono);
      sendBase("registrarVehiculo", args);
    }

    public boolean recv_registrarVehiculo() throws ErrorBD, org.apache.thrift.TException
    {
      registrarVehiculo_result result = new registrarVehiculo_result();
      receiveBase(result, "registrarVehiculo");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.ebd != null) {
        throw result.ebd;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "registrarVehiculo failed: unknown result");
    }

    public boolean modificarVehiculo(Vehiculo vehiculo, java.lang.String numPLacaAnt) throws ErrorBD, org.apache.thrift.TException
    {
      send_modificarVehiculo(vehiculo, numPLacaAnt);
      return recv_modificarVehiculo();
    }

    public void send_modificarVehiculo(Vehiculo vehiculo, java.lang.String numPLacaAnt) throws org.apache.thrift.TException
    {
      modificarVehiculo_args args = new modificarVehiculo_args();
      args.setVehiculo(vehiculo);
      args.setNumPLacaAnt(numPLacaAnt);
      sendBase("modificarVehiculo", args);
    }

    public boolean recv_modificarVehiculo() throws ErrorBD, org.apache.thrift.TException
    {
      modificarVehiculo_result result = new modificarVehiculo_result();
      receiveBase(result, "modificarVehiculo");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.ebd != null) {
        throw result.ebd;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "modificarVehiculo failed: unknown result");
    }

    public boolean deshabilitarVehiculo(java.lang.String numPlaca) throws ErrorBD, org.apache.thrift.TException
    {
      send_deshabilitarVehiculo(numPlaca);
      return recv_deshabilitarVehiculo();
    }

    public void send_deshabilitarVehiculo(java.lang.String numPlaca) throws org.apache.thrift.TException
    {
      deshabilitarVehiculo_args args = new deshabilitarVehiculo_args();
      args.setNumPlaca(numPlaca);
      sendBase("deshabilitarVehiculo", args);
    }

    public boolean recv_deshabilitarVehiculo() throws ErrorBD, org.apache.thrift.TException
    {
      deshabilitarVehiculo_result result = new deshabilitarVehiculo_result();
      receiveBase(result, "deshabilitarVehiculo");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.ebd != null) {
        throw result.ebd;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "deshabilitarVehiculo failed: unknown result");
    }

    public java.util.List<Vehiculo> consultarVehiculoPropio(long telefono) throws ErrorBD, org.apache.thrift.TException
    {
      send_consultarVehiculoPropio(telefono);
      return recv_consultarVehiculoPropio();
    }

    public void send_consultarVehiculoPropio(long telefono) throws org.apache.thrift.TException
    {
      consultarVehiculoPropio_args args = new consultarVehiculoPropio_args();
      args.setTelefono(telefono);
      sendBase("consultarVehiculoPropio", args);
    }

    public java.util.List<Vehiculo> recv_consultarVehiculoPropio() throws ErrorBD, org.apache.thrift.TException
    {
      consultarVehiculoPropio_result result = new consultarVehiculoPropio_result();
      receiveBase(result, "consultarVehiculoPropio");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.ebd != null) {
        throw result.ebd;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "consultarVehiculoPropio failed: unknown result");
    }

    public Vehiculo consultarVehiculoInfo(java.lang.String numPlaca) throws ErrorBD, org.apache.thrift.TException
    {
      send_consultarVehiculoInfo(numPlaca);
      return recv_consultarVehiculoInfo();
    }

    public void send_consultarVehiculoInfo(java.lang.String numPlaca) throws org.apache.thrift.TException
    {
      consultarVehiculoInfo_args args = new consultarVehiculoInfo_args();
      args.setNumPlaca(numPlaca);
      sendBase("consultarVehiculoInfo", args);
    }

    public Vehiculo recv_consultarVehiculoInfo() throws ErrorBD, org.apache.thrift.TException
    {
      consultarVehiculoInfo_result result = new consultarVehiculoInfo_result();
      receiveBase(result, "consultarVehiculoInfo");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.ebd != null) {
        throw result.ebd;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "consultarVehiculoInfo failed: unknown result");
    }

    public boolean registrarReporte(Reporte reporte, long telefono) throws ErrorBD, org.apache.thrift.TException
    {
      send_registrarReporte(reporte, telefono);
      return recv_registrarReporte();
    }

    public void send_registrarReporte(Reporte reporte, long telefono) throws org.apache.thrift.TException
    {
      registrarReporte_args args = new registrarReporte_args();
      args.setReporte(reporte);
      args.setTelefono(telefono);
      sendBase("registrarReporte", args);
    }

    public boolean recv_registrarReporte() throws ErrorBD, org.apache.thrift.TException
    {
      registrarReporte_result result = new registrarReporte_result();
      receiveBase(result, "registrarReporte");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.ebd != null) {
        throw result.ebd;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "registrarReporte failed: unknown result");
    }

    public boolean registrarFotografia(java.util.List<java.lang.String> fotografias, long telefono) throws ErrorBD, org.apache.thrift.TException
    {
      send_registrarFotografia(fotografias, telefono);
      return recv_registrarFotografia();
    }

    public void send_registrarFotografia(java.util.List<java.lang.String> fotografias, long telefono) throws org.apache.thrift.TException
    {
      registrarFotografia_args args = new registrarFotografia_args();
      args.setFotografias(fotografias);
      args.setTelefono(telefono);
      sendBase("registrarFotografia", args);
    }

    public boolean recv_registrarFotografia() throws ErrorBD, org.apache.thrift.TException
    {
      registrarFotografia_result result = new registrarFotografia_result();
      receiveBase(result, "registrarFotografia");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.ebd != null) {
        throw result.ebd;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "registrarFotografia failed: unknown result");
    }

    public java.util.List<java.lang.String> consultarFotografia(int folioUnico_dictamen) throws ErrorBD, org.apache.thrift.TException
    {
      send_consultarFotografia(folioUnico_dictamen);
      return recv_consultarFotografia();
    }

    public void send_consultarFotografia(int folioUnico_dictamen) throws org.apache.thrift.TException
    {
      consultarFotografia_args args = new consultarFotografia_args();
      args.setFolioUnico_dictamen(folioUnico_dictamen);
      sendBase("consultarFotografia", args);
    }

    public java.util.List<java.lang.String> recv_consultarFotografia() throws ErrorBD, org.apache.thrift.TException
    {
      consultarFotografia_result result = new consultarFotografia_result();
      receiveBase(result, "consultarFotografia");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.ebd != null) {
        throw result.ebd;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "consultarFotografia failed: unknown result");
    }

    public java.lang.String registrarVehiculoReporte(Vehiculo vehiculo) throws ErrorBD, org.apache.thrift.TException
    {
      send_registrarVehiculoReporte(vehiculo);
      return recv_registrarVehiculoReporte();
    }

    public void send_registrarVehiculoReporte(Vehiculo vehiculo) throws org.apache.thrift.TException
    {
      registrarVehiculoReporte_args args = new registrarVehiculoReporte_args();
      args.setVehiculo(vehiculo);
      sendBase("registrarVehiculoReporte", args);
    }

    public java.lang.String recv_registrarVehiculoReporte() throws ErrorBD, org.apache.thrift.TException
    {
      registrarVehiculoReporte_result result = new registrarVehiculoReporte_result();
      receiveBase(result, "registrarVehiculoReporte");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.ebd != null) {
        throw result.ebd;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "registrarVehiculoReporte failed: unknown result");
    }

    public java.util.List<Reporte> consultarReporte(long telefono) throws ErrorBD, org.apache.thrift.TException
    {
      send_consultarReporte(telefono);
      return recv_consultarReporte();
    }

    public void send_consultarReporte(long telefono) throws org.apache.thrift.TException
    {
      consultarReporte_args args = new consultarReporte_args();
      args.setTelefono(telefono);
      sendBase("consultarReporte", args);
    }

    public java.util.List<Reporte> recv_consultarReporte() throws ErrorBD, org.apache.thrift.TException
    {
      consultarReporte_result result = new consultarReporte_result();
      receiveBase(result, "consultarReporte");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.ebd != null) {
        throw result.ebd;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "consultarReporte failed: unknown result");
    }

    public java.util.List<Dictamen> consultarDictamen(java.util.List<java.lang.Integer> folioUnico) throws ErrorBD, org.apache.thrift.TException
    {
      send_consultarDictamen(folioUnico);
      return recv_consultarDictamen();
    }

    public void send_consultarDictamen(java.util.List<java.lang.Integer> folioUnico) throws org.apache.thrift.TException
    {
      consultarDictamen_args args = new consultarDictamen_args();
      args.setFolioUnico(folioUnico);
      sendBase("consultarDictamen", args);
    }

    public java.util.List<Dictamen> recv_consultarDictamen() throws ErrorBD, org.apache.thrift.TException
    {
      consultarDictamen_result result = new consultarDictamen_result();
      receiveBase(result, "consultarDictamen");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.ebd != null) {
        throw result.ebd;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "consultarDictamen failed: unknown result");
    }

    public Conductor consultarConductorPropio(long telefono) throws ErrorBD, org.apache.thrift.TException
    {
      send_consultarConductorPropio(telefono);
      return recv_consultarConductorPropio();
    }

    public void send_consultarConductorPropio(long telefono) throws org.apache.thrift.TException
    {
      consultarConductorPropio_args args = new consultarConductorPropio_args();
      args.setTelefono(telefono);
      sendBase("consultarConductorPropio", args);
    }

    public Conductor recv_consultarConductorPropio() throws ErrorBD, org.apache.thrift.TException
    {
      consultarConductorPropio_result result = new consultarConductorPropio_result();
      receiveBase(result, "consultarConductorPropio");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.ebd != null) {
        throw result.ebd;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "consultarConductorPropio failed: unknown result");
    }

    public java.lang.String recuperarNFuncionario(int folioUnico) throws ErrorBD, org.apache.thrift.TException
    {
      send_recuperarNFuncionario(folioUnico);
      return recv_recuperarNFuncionario();
    }

    public void send_recuperarNFuncionario(int folioUnico) throws org.apache.thrift.TException
    {
      recuperarNFuncionario_args args = new recuperarNFuncionario_args();
      args.setFolioUnico(folioUnico);
      sendBase("recuperarNFuncionario", args);
    }

    public java.lang.String recv_recuperarNFuncionario() throws ErrorBD, org.apache.thrift.TException
    {
      recuperarNFuncionario_result result = new recuperarNFuncionario_result();
      receiveBase(result, "recuperarNFuncionario");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.ebd != null) {
        throw result.ebd;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "recuperarNFuncionario failed: unknown result");
    }

    public java.util.List<Vehiculo> recuperarVehiculoReporte(int folioUnico_dictamen) throws ErrorBD, org.apache.thrift.TException
    {
      send_recuperarVehiculoReporte(folioUnico_dictamen);
      return recv_recuperarVehiculoReporte();
    }

    public void send_recuperarVehiculoReporte(int folioUnico_dictamen) throws org.apache.thrift.TException
    {
      recuperarVehiculoReporte_args args = new recuperarVehiculoReporte_args();
      args.setFolioUnico_dictamen(folioUnico_dictamen);
      sendBase("recuperarVehiculoReporte", args);
    }

    public java.util.List<Vehiculo> recv_recuperarVehiculoReporte() throws ErrorBD, org.apache.thrift.TException
    {
      recuperarVehiculoReporte_result result = new recuperarVehiculoReporte_result();
      receiveBase(result, "recuperarVehiculoReporte");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.ebd != null) {
        throw result.ebd;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "recuperarVehiculoReporte failed: unknown result");
    }

    public boolean asociarVehiculoReporte(java.util.List<java.lang.String> numPLacas, long telefono) throws ErrorBD, org.apache.thrift.TException
    {
      send_asociarVehiculoReporte(numPLacas, telefono);
      return recv_asociarVehiculoReporte();
    }

    public void send_asociarVehiculoReporte(java.util.List<java.lang.String> numPLacas, long telefono) throws org.apache.thrift.TException
    {
      asociarVehiculoReporte_args args = new asociarVehiculoReporte_args();
      args.setNumPLacas(numPLacas);
      args.setTelefono(telefono);
      sendBase("asociarVehiculoReporte", args);
    }

    public boolean recv_asociarVehiculoReporte() throws ErrorBD, org.apache.thrift.TException
    {
      asociarVehiculoReporte_result result = new asociarVehiculoReporte_result();
      receiveBase(result, "asociarVehiculoReporte");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.ebd != null) {
        throw result.ebd;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "asociarVehiculoReporte failed: unknown result");
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void confirmarConductor(long telefono, java.lang.String contrasena, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      confirmarConductor_call method_call = new confirmarConductor_call(telefono, contrasena, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class confirmarConductor_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.Boolean> {
      private long telefono;
      private java.lang.String contrasena;
      public confirmarConductor_call(long telefono, java.lang.String contrasena, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.telefono = telefono;
        this.contrasena = contrasena;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("confirmarConductor", org.apache.thrift.protocol.TMessageType.CALL, 0));
        confirmarConductor_args args = new confirmarConductor_args();
        args.setTelefono(telefono);
        args.setContrasena(contrasena);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.Boolean getResult() throws ErrorBD, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_confirmarConductor();
      }
    }

    public void registrarConductor(Conductor conductor, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      registrarConductor_call method_call = new registrarConductor_call(conductor, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class registrarConductor_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.Boolean> {
      private Conductor conductor;
      public registrarConductor_call(Conductor conductor, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.conductor = conductor;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("registrarConductor", org.apache.thrift.protocol.TMessageType.CALL, 0));
        registrarConductor_args args = new registrarConductor_args();
        args.setConductor(conductor);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.Boolean getResult() throws ErrorBD, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_registrarConductor();
      }
    }

    public void registrarVehiculo(Vehiculo vehiculo, long telefono, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      registrarVehiculo_call method_call = new registrarVehiculo_call(vehiculo, telefono, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class registrarVehiculo_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.Boolean> {
      private Vehiculo vehiculo;
      private long telefono;
      public registrarVehiculo_call(Vehiculo vehiculo, long telefono, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.vehiculo = vehiculo;
        this.telefono = telefono;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("registrarVehiculo", org.apache.thrift.protocol.TMessageType.CALL, 0));
        registrarVehiculo_args args = new registrarVehiculo_args();
        args.setVehiculo(vehiculo);
        args.setTelefono(telefono);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.Boolean getResult() throws ErrorBD, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_registrarVehiculo();
      }
    }

    public void modificarVehiculo(Vehiculo vehiculo, java.lang.String numPLacaAnt, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      modificarVehiculo_call method_call = new modificarVehiculo_call(vehiculo, numPLacaAnt, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class modificarVehiculo_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.Boolean> {
      private Vehiculo vehiculo;
      private java.lang.String numPLacaAnt;
      public modificarVehiculo_call(Vehiculo vehiculo, java.lang.String numPLacaAnt, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.vehiculo = vehiculo;
        this.numPLacaAnt = numPLacaAnt;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("modificarVehiculo", org.apache.thrift.protocol.TMessageType.CALL, 0));
        modificarVehiculo_args args = new modificarVehiculo_args();
        args.setVehiculo(vehiculo);
        args.setNumPLacaAnt(numPLacaAnt);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.Boolean getResult() throws ErrorBD, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_modificarVehiculo();
      }
    }

    public void deshabilitarVehiculo(java.lang.String numPlaca, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      deshabilitarVehiculo_call method_call = new deshabilitarVehiculo_call(numPlaca, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class deshabilitarVehiculo_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.Boolean> {
      private java.lang.String numPlaca;
      public deshabilitarVehiculo_call(java.lang.String numPlaca, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.numPlaca = numPlaca;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("deshabilitarVehiculo", org.apache.thrift.protocol.TMessageType.CALL, 0));
        deshabilitarVehiculo_args args = new deshabilitarVehiculo_args();
        args.setNumPlaca(numPlaca);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.Boolean getResult() throws ErrorBD, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_deshabilitarVehiculo();
      }
    }

    public void consultarVehiculoPropio(long telefono, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Vehiculo>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      consultarVehiculoPropio_call method_call = new consultarVehiculoPropio_call(telefono, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class consultarVehiculoPropio_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<Vehiculo>> {
      private long telefono;
      public consultarVehiculoPropio_call(long telefono, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Vehiculo>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.telefono = telefono;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("consultarVehiculoPropio", org.apache.thrift.protocol.TMessageType.CALL, 0));
        consultarVehiculoPropio_args args = new consultarVehiculoPropio_args();
        args.setTelefono(telefono);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<Vehiculo> getResult() throws ErrorBD, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_consultarVehiculoPropio();
      }
    }

    public void consultarVehiculoInfo(java.lang.String numPlaca, org.apache.thrift.async.AsyncMethodCallback<Vehiculo> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      consultarVehiculoInfo_call method_call = new consultarVehiculoInfo_call(numPlaca, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class consultarVehiculoInfo_call extends org.apache.thrift.async.TAsyncMethodCall<Vehiculo> {
      private java.lang.String numPlaca;
      public consultarVehiculoInfo_call(java.lang.String numPlaca, org.apache.thrift.async.AsyncMethodCallback<Vehiculo> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.numPlaca = numPlaca;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("consultarVehiculoInfo", org.apache.thrift.protocol.TMessageType.CALL, 0));
        consultarVehiculoInfo_args args = new consultarVehiculoInfo_args();
        args.setNumPlaca(numPlaca);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Vehiculo getResult() throws ErrorBD, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_consultarVehiculoInfo();
      }
    }

    public void registrarReporte(Reporte reporte, long telefono, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      registrarReporte_call method_call = new registrarReporte_call(reporte, telefono, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class registrarReporte_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.Boolean> {
      private Reporte reporte;
      private long telefono;
      public registrarReporte_call(Reporte reporte, long telefono, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.reporte = reporte;
        this.telefono = telefono;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("registrarReporte", org.apache.thrift.protocol.TMessageType.CALL, 0));
        registrarReporte_args args = new registrarReporte_args();
        args.setReporte(reporte);
        args.setTelefono(telefono);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.Boolean getResult() throws ErrorBD, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_registrarReporte();
      }
    }

    public void registrarFotografia(java.util.List<java.lang.String> fotografias, long telefono, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      registrarFotografia_call method_call = new registrarFotografia_call(fotografias, telefono, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class registrarFotografia_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.Boolean> {
      private java.util.List<java.lang.String> fotografias;
      private long telefono;
      public registrarFotografia_call(java.util.List<java.lang.String> fotografias, long telefono, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.fotografias = fotografias;
        this.telefono = telefono;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("registrarFotografia", org.apache.thrift.protocol.TMessageType.CALL, 0));
        registrarFotografia_args args = new registrarFotografia_args();
        args.setFotografias(fotografias);
        args.setTelefono(telefono);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.Boolean getResult() throws ErrorBD, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_registrarFotografia();
      }
    }

    public void consultarFotografia(int folioUnico_dictamen, org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.String>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      consultarFotografia_call method_call = new consultarFotografia_call(folioUnico_dictamen, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class consultarFotografia_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<java.lang.String>> {
      private int folioUnico_dictamen;
      public consultarFotografia_call(int folioUnico_dictamen, org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.String>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.folioUnico_dictamen = folioUnico_dictamen;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("consultarFotografia", org.apache.thrift.protocol.TMessageType.CALL, 0));
        consultarFotografia_args args = new consultarFotografia_args();
        args.setFolioUnico_dictamen(folioUnico_dictamen);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<java.lang.String> getResult() throws ErrorBD, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_consultarFotografia();
      }
    }

    public void registrarVehiculoReporte(Vehiculo vehiculo, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      registrarVehiculoReporte_call method_call = new registrarVehiculoReporte_call(vehiculo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class registrarVehiculoReporte_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.String> {
      private Vehiculo vehiculo;
      public registrarVehiculoReporte_call(Vehiculo vehiculo, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.vehiculo = vehiculo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("registrarVehiculoReporte", org.apache.thrift.protocol.TMessageType.CALL, 0));
        registrarVehiculoReporte_args args = new registrarVehiculoReporte_args();
        args.setVehiculo(vehiculo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.String getResult() throws ErrorBD, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_registrarVehiculoReporte();
      }
    }

    public void consultarReporte(long telefono, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Reporte>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      consultarReporte_call method_call = new consultarReporte_call(telefono, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class consultarReporte_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<Reporte>> {
      private long telefono;
      public consultarReporte_call(long telefono, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Reporte>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.telefono = telefono;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("consultarReporte", org.apache.thrift.protocol.TMessageType.CALL, 0));
        consultarReporte_args args = new consultarReporte_args();
        args.setTelefono(telefono);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<Reporte> getResult() throws ErrorBD, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_consultarReporte();
      }
    }

    public void consultarDictamen(java.util.List<java.lang.Integer> folioUnico, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Dictamen>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      consultarDictamen_call method_call = new consultarDictamen_call(folioUnico, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class consultarDictamen_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<Dictamen>> {
      private java.util.List<java.lang.Integer> folioUnico;
      public consultarDictamen_call(java.util.List<java.lang.Integer> folioUnico, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Dictamen>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.folioUnico = folioUnico;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("consultarDictamen", org.apache.thrift.protocol.TMessageType.CALL, 0));
        consultarDictamen_args args = new consultarDictamen_args();
        args.setFolioUnico(folioUnico);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<Dictamen> getResult() throws ErrorBD, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_consultarDictamen();
      }
    }

    public void consultarConductorPropio(long telefono, org.apache.thrift.async.AsyncMethodCallback<Conductor> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      consultarConductorPropio_call method_call = new consultarConductorPropio_call(telefono, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class consultarConductorPropio_call extends org.apache.thrift.async.TAsyncMethodCall<Conductor> {
      private long telefono;
      public consultarConductorPropio_call(long telefono, org.apache.thrift.async.AsyncMethodCallback<Conductor> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.telefono = telefono;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("consultarConductorPropio", org.apache.thrift.protocol.TMessageType.CALL, 0));
        consultarConductorPropio_args args = new consultarConductorPropio_args();
        args.setTelefono(telefono);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Conductor getResult() throws ErrorBD, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_consultarConductorPropio();
      }
    }

    public void recuperarNFuncionario(int folioUnico, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      recuperarNFuncionario_call method_call = new recuperarNFuncionario_call(folioUnico, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class recuperarNFuncionario_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.String> {
      private int folioUnico;
      public recuperarNFuncionario_call(int folioUnico, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.folioUnico = folioUnico;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("recuperarNFuncionario", org.apache.thrift.protocol.TMessageType.CALL, 0));
        recuperarNFuncionario_args args = new recuperarNFuncionario_args();
        args.setFolioUnico(folioUnico);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.String getResult() throws ErrorBD, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_recuperarNFuncionario();
      }
    }

    public void recuperarVehiculoReporte(int folioUnico_dictamen, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Vehiculo>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      recuperarVehiculoReporte_call method_call = new recuperarVehiculoReporte_call(folioUnico_dictamen, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class recuperarVehiculoReporte_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<Vehiculo>> {
      private int folioUnico_dictamen;
      public recuperarVehiculoReporte_call(int folioUnico_dictamen, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Vehiculo>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.folioUnico_dictamen = folioUnico_dictamen;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("recuperarVehiculoReporte", org.apache.thrift.protocol.TMessageType.CALL, 0));
        recuperarVehiculoReporte_args args = new recuperarVehiculoReporte_args();
        args.setFolioUnico_dictamen(folioUnico_dictamen);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<Vehiculo> getResult() throws ErrorBD, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_recuperarVehiculoReporte();
      }
    }

    public void asociarVehiculoReporte(java.util.List<java.lang.String> numPLacas, long telefono, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      asociarVehiculoReporte_call method_call = new asociarVehiculoReporte_call(numPLacas, telefono, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class asociarVehiculoReporte_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.Boolean> {
      private java.util.List<java.lang.String> numPLacas;
      private long telefono;
      public asociarVehiculoReporte_call(java.util.List<java.lang.String> numPLacas, long telefono, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.numPLacas = numPLacas;
        this.telefono = telefono;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("asociarVehiculoReporte", org.apache.thrift.protocol.TMessageType.CALL, 0));
        asociarVehiculoReporte_args args = new asociarVehiculoReporte_args();
        args.setNumPLacas(numPLacas);
        args.setTelefono(telefono);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.Boolean getResult() throws ErrorBD, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_asociarVehiculoReporte();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> java.util.Map<java.lang.String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("confirmarConductor", new confirmarConductor());
      processMap.put("registrarConductor", new registrarConductor());
      processMap.put("registrarVehiculo", new registrarVehiculo());
      processMap.put("modificarVehiculo", new modificarVehiculo());
      processMap.put("deshabilitarVehiculo", new deshabilitarVehiculo());
      processMap.put("consultarVehiculoPropio", new consultarVehiculoPropio());
      processMap.put("consultarVehiculoInfo", new consultarVehiculoInfo());
      processMap.put("registrarReporte", new registrarReporte());
      processMap.put("registrarFotografia", new registrarFotografia());
      processMap.put("consultarFotografia", new consultarFotografia());
      processMap.put("registrarVehiculoReporte", new registrarVehiculoReporte());
      processMap.put("consultarReporte", new consultarReporte());
      processMap.put("consultarDictamen", new consultarDictamen());
      processMap.put("consultarConductorPropio", new consultarConductorPropio());
      processMap.put("recuperarNFuncionario", new recuperarNFuncionario());
      processMap.put("recuperarVehiculoReporte", new recuperarVehiculoReporte());
      processMap.put("asociarVehiculoReporte", new asociarVehiculoReporte());
      return processMap;
    }

    public static class confirmarConductor<I extends Iface> extends org.apache.thrift.ProcessFunction<I, confirmarConductor_args> {
      public confirmarConductor() {
        super("confirmarConductor");
      }

      public confirmarConductor_args getEmptyArgsInstance() {
        return new confirmarConductor_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public confirmarConductor_result getResult(I iface, confirmarConductor_args args) throws org.apache.thrift.TException {
        confirmarConductor_result result = new confirmarConductor_result();
        try {
          result.success = iface.confirmarConductor(args.telefono, args.contrasena);
          result.setSuccessIsSet(true);
        } catch (ErrorBD ebd) {
          result.ebd = ebd;
        }
        return result;
      }
    }

    public static class registrarConductor<I extends Iface> extends org.apache.thrift.ProcessFunction<I, registrarConductor_args> {
      public registrarConductor() {
        super("registrarConductor");
      }

      public registrarConductor_args getEmptyArgsInstance() {
        return new registrarConductor_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public registrarConductor_result getResult(I iface, registrarConductor_args args) throws org.apache.thrift.TException {
        registrarConductor_result result = new registrarConductor_result();
        try {
          result.success = iface.registrarConductor(args.conductor);
          result.setSuccessIsSet(true);
        } catch (ErrorBD ebd) {
          result.ebd = ebd;
        }
        return result;
      }
    }

    public static class registrarVehiculo<I extends Iface> extends org.apache.thrift.ProcessFunction<I, registrarVehiculo_args> {
      public registrarVehiculo() {
        super("registrarVehiculo");
      }

      public registrarVehiculo_args getEmptyArgsInstance() {
        return new registrarVehiculo_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public registrarVehiculo_result getResult(I iface, registrarVehiculo_args args) throws org.apache.thrift.TException {
        registrarVehiculo_result result = new registrarVehiculo_result();
        try {
          result.success = iface.registrarVehiculo(args.vehiculo, args.telefono);
          result.setSuccessIsSet(true);
        } catch (ErrorBD ebd) {
          result.ebd = ebd;
        }
        return result;
      }
    }

    public static class modificarVehiculo<I extends Iface> extends org.apache.thrift.ProcessFunction<I, modificarVehiculo_args> {
      public modificarVehiculo() {
        super("modificarVehiculo");
      }

      public modificarVehiculo_args getEmptyArgsInstance() {
        return new modificarVehiculo_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public modificarVehiculo_result getResult(I iface, modificarVehiculo_args args) throws org.apache.thrift.TException {
        modificarVehiculo_result result = new modificarVehiculo_result();
        try {
          result.success = iface.modificarVehiculo(args.vehiculo, args.numPLacaAnt);
          result.setSuccessIsSet(true);
        } catch (ErrorBD ebd) {
          result.ebd = ebd;
        }
        return result;
      }
    }

    public static class deshabilitarVehiculo<I extends Iface> extends org.apache.thrift.ProcessFunction<I, deshabilitarVehiculo_args> {
      public deshabilitarVehiculo() {
        super("deshabilitarVehiculo");
      }

      public deshabilitarVehiculo_args getEmptyArgsInstance() {
        return new deshabilitarVehiculo_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public deshabilitarVehiculo_result getResult(I iface, deshabilitarVehiculo_args args) throws org.apache.thrift.TException {
        deshabilitarVehiculo_result result = new deshabilitarVehiculo_result();
        try {
          result.success = iface.deshabilitarVehiculo(args.numPlaca);
          result.setSuccessIsSet(true);
        } catch (ErrorBD ebd) {
          result.ebd = ebd;
        }
        return result;
      }
    }

    public static class consultarVehiculoPropio<I extends Iface> extends org.apache.thrift.ProcessFunction<I, consultarVehiculoPropio_args> {
      public consultarVehiculoPropio() {
        super("consultarVehiculoPropio");
      }

      public consultarVehiculoPropio_args getEmptyArgsInstance() {
        return new consultarVehiculoPropio_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public consultarVehiculoPropio_result getResult(I iface, consultarVehiculoPropio_args args) throws org.apache.thrift.TException {
        consultarVehiculoPropio_result result = new consultarVehiculoPropio_result();
        try {
          result.success = iface.consultarVehiculoPropio(args.telefono);
        } catch (ErrorBD ebd) {
          result.ebd = ebd;
        }
        return result;
      }
    }

    public static class consultarVehiculoInfo<I extends Iface> extends org.apache.thrift.ProcessFunction<I, consultarVehiculoInfo_args> {
      public consultarVehiculoInfo() {
        super("consultarVehiculoInfo");
      }

      public consultarVehiculoInfo_args getEmptyArgsInstance() {
        return new consultarVehiculoInfo_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public consultarVehiculoInfo_result getResult(I iface, consultarVehiculoInfo_args args) throws org.apache.thrift.TException {
        consultarVehiculoInfo_result result = new consultarVehiculoInfo_result();
        try {
          result.success = iface.consultarVehiculoInfo(args.numPlaca);
        } catch (ErrorBD ebd) {
          result.ebd = ebd;
        }
        return result;
      }
    }

    public static class registrarReporte<I extends Iface> extends org.apache.thrift.ProcessFunction<I, registrarReporte_args> {
      public registrarReporte() {
        super("registrarReporte");
      }

      public registrarReporte_args getEmptyArgsInstance() {
        return new registrarReporte_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public registrarReporte_result getResult(I iface, registrarReporte_args args) throws org.apache.thrift.TException {
        registrarReporte_result result = new registrarReporte_result();
        try {
          result.success = iface.registrarReporte(args.reporte, args.telefono);
          result.setSuccessIsSet(true);
        } catch (ErrorBD ebd) {
          result.ebd = ebd;
        }
        return result;
      }
    }

    public static class registrarFotografia<I extends Iface> extends org.apache.thrift.ProcessFunction<I, registrarFotografia_args> {
      public registrarFotografia() {
        super("registrarFotografia");
      }

      public registrarFotografia_args getEmptyArgsInstance() {
        return new registrarFotografia_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public registrarFotografia_result getResult(I iface, registrarFotografia_args args) throws org.apache.thrift.TException {
        registrarFotografia_result result = new registrarFotografia_result();
        try {
          result.success = iface.registrarFotografia(args.fotografias, args.telefono);
          result.setSuccessIsSet(true);
        } catch (ErrorBD ebd) {
          result.ebd = ebd;
        }
        return result;
      }
    }

    public static class consultarFotografia<I extends Iface> extends org.apache.thrift.ProcessFunction<I, consultarFotografia_args> {
      public consultarFotografia() {
        super("consultarFotografia");
      }

      public consultarFotografia_args getEmptyArgsInstance() {
        return new consultarFotografia_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public consultarFotografia_result getResult(I iface, consultarFotografia_args args) throws org.apache.thrift.TException {
        consultarFotografia_result result = new consultarFotografia_result();
        try {
          result.success = iface.consultarFotografia(args.folioUnico_dictamen);
        } catch (ErrorBD ebd) {
          result.ebd = ebd;
        }
        return result;
      }
    }

    public static class registrarVehiculoReporte<I extends Iface> extends org.apache.thrift.ProcessFunction<I, registrarVehiculoReporte_args> {
      public registrarVehiculoReporte() {
        super("registrarVehiculoReporte");
      }

      public registrarVehiculoReporte_args getEmptyArgsInstance() {
        return new registrarVehiculoReporte_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public registrarVehiculoReporte_result getResult(I iface, registrarVehiculoReporte_args args) throws org.apache.thrift.TException {
        registrarVehiculoReporte_result result = new registrarVehiculoReporte_result();
        try {
          result.success = iface.registrarVehiculoReporte(args.vehiculo);
        } catch (ErrorBD ebd) {
          result.ebd = ebd;
        }
        return result;
      }
    }

    public static class consultarReporte<I extends Iface> extends org.apache.thrift.ProcessFunction<I, consultarReporte_args> {
      public consultarReporte() {
        super("consultarReporte");
      }

      public consultarReporte_args getEmptyArgsInstance() {
        return new consultarReporte_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public consultarReporte_result getResult(I iface, consultarReporte_args args) throws org.apache.thrift.TException {
        consultarReporte_result result = new consultarReporte_result();
        try {
          result.success = iface.consultarReporte(args.telefono);
        } catch (ErrorBD ebd) {
          result.ebd = ebd;
        }
        return result;
      }
    }

    public static class consultarDictamen<I extends Iface> extends org.apache.thrift.ProcessFunction<I, consultarDictamen_args> {
      public consultarDictamen() {
        super("consultarDictamen");
      }

      public consultarDictamen_args getEmptyArgsInstance() {
        return new consultarDictamen_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public consultarDictamen_result getResult(I iface, consultarDictamen_args args) throws org.apache.thrift.TException {
        consultarDictamen_result result = new consultarDictamen_result();
        try {
          result.success = iface.consultarDictamen(args.folioUnico);
        } catch (ErrorBD ebd) {
          result.ebd = ebd;
        }
        return result;
      }
    }

    public static class consultarConductorPropio<I extends Iface> extends org.apache.thrift.ProcessFunction<I, consultarConductorPropio_args> {
      public consultarConductorPropio() {
        super("consultarConductorPropio");
      }

      public consultarConductorPropio_args getEmptyArgsInstance() {
        return new consultarConductorPropio_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public consultarConductorPropio_result getResult(I iface, consultarConductorPropio_args args) throws org.apache.thrift.TException {
        consultarConductorPropio_result result = new consultarConductorPropio_result();
        try {
          result.success = iface.consultarConductorPropio(args.telefono);
        } catch (ErrorBD ebd) {
          result.ebd = ebd;
        }
        return result;
      }
    }

    public static class recuperarNFuncionario<I extends Iface> extends org.apache.thrift.ProcessFunction<I, recuperarNFuncionario_args> {
      public recuperarNFuncionario() {
        super("recuperarNFuncionario");
      }

      public recuperarNFuncionario_args getEmptyArgsInstance() {
        return new recuperarNFuncionario_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public recuperarNFuncionario_result getResult(I iface, recuperarNFuncionario_args args) throws org.apache.thrift.TException {
        recuperarNFuncionario_result result = new recuperarNFuncionario_result();
        try {
          result.success = iface.recuperarNFuncionario(args.folioUnico);
        } catch (ErrorBD ebd) {
          result.ebd = ebd;
        }
        return result;
      }
    }

    public static class recuperarVehiculoReporte<I extends Iface> extends org.apache.thrift.ProcessFunction<I, recuperarVehiculoReporte_args> {
      public recuperarVehiculoReporte() {
        super("recuperarVehiculoReporte");
      }

      public recuperarVehiculoReporte_args getEmptyArgsInstance() {
        return new recuperarVehiculoReporte_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public recuperarVehiculoReporte_result getResult(I iface, recuperarVehiculoReporte_args args) throws org.apache.thrift.TException {
        recuperarVehiculoReporte_result result = new recuperarVehiculoReporte_result();
        try {
          result.success = iface.recuperarVehiculoReporte(args.folioUnico_dictamen);
        } catch (ErrorBD ebd) {
          result.ebd = ebd;
        }
        return result;
      }
    }

    public static class asociarVehiculoReporte<I extends Iface> extends org.apache.thrift.ProcessFunction<I, asociarVehiculoReporte_args> {
      public asociarVehiculoReporte() {
        super("asociarVehiculoReporte");
      }

      public asociarVehiculoReporte_args getEmptyArgsInstance() {
        return new asociarVehiculoReporte_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public asociarVehiculoReporte_result getResult(I iface, asociarVehiculoReporte_args args) throws org.apache.thrift.TException {
        asociarVehiculoReporte_result result = new asociarVehiculoReporte_result();
        try {
          result.success = iface.asociarVehiculoReporte(args.numPLacas, args.telefono);
          result.setSuccessIsSet(true);
        } catch (ErrorBD ebd) {
          result.ebd = ebd;
        }
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("confirmarConductor", new confirmarConductor());
      processMap.put("registrarConductor", new registrarConductor());
      processMap.put("registrarVehiculo", new registrarVehiculo());
      processMap.put("modificarVehiculo", new modificarVehiculo());
      processMap.put("deshabilitarVehiculo", new deshabilitarVehiculo());
      processMap.put("consultarVehiculoPropio", new consultarVehiculoPropio());
      processMap.put("consultarVehiculoInfo", new consultarVehiculoInfo());
      processMap.put("registrarReporte", new registrarReporte());
      processMap.put("registrarFotografia", new registrarFotografia());
      processMap.put("consultarFotografia", new consultarFotografia());
      processMap.put("registrarVehiculoReporte", new registrarVehiculoReporte());
      processMap.put("consultarReporte", new consultarReporte());
      processMap.put("consultarDictamen", new consultarDictamen());
      processMap.put("consultarConductorPropio", new consultarConductorPropio());
      processMap.put("recuperarNFuncionario", new recuperarNFuncionario());
      processMap.put("recuperarVehiculoReporte", new recuperarVehiculoReporte());
      processMap.put("asociarVehiculoReporte", new asociarVehiculoReporte());
      return processMap;
    }

    public static class confirmarConductor<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, confirmarConductor_args, java.lang.Boolean> {
      public confirmarConductor() {
        super("confirmarConductor");
      }

      public confirmarConductor_args getEmptyArgsInstance() {
        return new confirmarConductor_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean>() { 
          public void onComplete(java.lang.Boolean o) {
            confirmarConductor_result result = new confirmarConductor_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            confirmarConductor_result result = new confirmarConductor_result();
            if (e instanceof ErrorBD) {
              result.ebd = (ErrorBD) e;
              result.setEbdIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, confirmarConductor_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
        iface.confirmarConductor(args.telefono, args.contrasena,resultHandler);
      }
    }

    public static class registrarConductor<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, registrarConductor_args, java.lang.Boolean> {
      public registrarConductor() {
        super("registrarConductor");
      }

      public registrarConductor_args getEmptyArgsInstance() {
        return new registrarConductor_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean>() { 
          public void onComplete(java.lang.Boolean o) {
            registrarConductor_result result = new registrarConductor_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            registrarConductor_result result = new registrarConductor_result();
            if (e instanceof ErrorBD) {
              result.ebd = (ErrorBD) e;
              result.setEbdIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, registrarConductor_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
        iface.registrarConductor(args.conductor,resultHandler);
      }
    }

    public static class registrarVehiculo<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, registrarVehiculo_args, java.lang.Boolean> {
      public registrarVehiculo() {
        super("registrarVehiculo");
      }

      public registrarVehiculo_args getEmptyArgsInstance() {
        return new registrarVehiculo_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean>() { 
          public void onComplete(java.lang.Boolean o) {
            registrarVehiculo_result result = new registrarVehiculo_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            registrarVehiculo_result result = new registrarVehiculo_result();
            if (e instanceof ErrorBD) {
              result.ebd = (ErrorBD) e;
              result.setEbdIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, registrarVehiculo_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
        iface.registrarVehiculo(args.vehiculo, args.telefono,resultHandler);
      }
    }

    public static class modificarVehiculo<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, modificarVehiculo_args, java.lang.Boolean> {
      public modificarVehiculo() {
        super("modificarVehiculo");
      }

      public modificarVehiculo_args getEmptyArgsInstance() {
        return new modificarVehiculo_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean>() { 
          public void onComplete(java.lang.Boolean o) {
            modificarVehiculo_result result = new modificarVehiculo_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            modificarVehiculo_result result = new modificarVehiculo_result();
            if (e instanceof ErrorBD) {
              result.ebd = (ErrorBD) e;
              result.setEbdIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, modificarVehiculo_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
        iface.modificarVehiculo(args.vehiculo, args.numPLacaAnt,resultHandler);
      }
    }

    public static class deshabilitarVehiculo<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, deshabilitarVehiculo_args, java.lang.Boolean> {
      public deshabilitarVehiculo() {
        super("deshabilitarVehiculo");
      }

      public deshabilitarVehiculo_args getEmptyArgsInstance() {
        return new deshabilitarVehiculo_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean>() { 
          public void onComplete(java.lang.Boolean o) {
            deshabilitarVehiculo_result result = new deshabilitarVehiculo_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            deshabilitarVehiculo_result result = new deshabilitarVehiculo_result();
            if (e instanceof ErrorBD) {
              result.ebd = (ErrorBD) e;
              result.setEbdIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, deshabilitarVehiculo_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
        iface.deshabilitarVehiculo(args.numPlaca,resultHandler);
      }
    }

    public static class consultarVehiculoPropio<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, consultarVehiculoPropio_args, java.util.List<Vehiculo>> {
      public consultarVehiculoPropio() {
        super("consultarVehiculoPropio");
      }

      public consultarVehiculoPropio_args getEmptyArgsInstance() {
        return new consultarVehiculoPropio_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<Vehiculo>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<Vehiculo>>() { 
          public void onComplete(java.util.List<Vehiculo> o) {
            consultarVehiculoPropio_result result = new consultarVehiculoPropio_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            consultarVehiculoPropio_result result = new consultarVehiculoPropio_result();
            if (e instanceof ErrorBD) {
              result.ebd = (ErrorBD) e;
              result.setEbdIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, consultarVehiculoPropio_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Vehiculo>> resultHandler) throws org.apache.thrift.TException {
        iface.consultarVehiculoPropio(args.telefono,resultHandler);
      }
    }

    public static class consultarVehiculoInfo<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, consultarVehiculoInfo_args, Vehiculo> {
      public consultarVehiculoInfo() {
        super("consultarVehiculoInfo");
      }

      public consultarVehiculoInfo_args getEmptyArgsInstance() {
        return new consultarVehiculoInfo_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Vehiculo> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Vehiculo>() { 
          public void onComplete(Vehiculo o) {
            consultarVehiculoInfo_result result = new consultarVehiculoInfo_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            consultarVehiculoInfo_result result = new consultarVehiculoInfo_result();
            if (e instanceof ErrorBD) {
              result.ebd = (ErrorBD) e;
              result.setEbdIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, consultarVehiculoInfo_args args, org.apache.thrift.async.AsyncMethodCallback<Vehiculo> resultHandler) throws org.apache.thrift.TException {
        iface.consultarVehiculoInfo(args.numPlaca,resultHandler);
      }
    }

    public static class registrarReporte<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, registrarReporte_args, java.lang.Boolean> {
      public registrarReporte() {
        super("registrarReporte");
      }

      public registrarReporte_args getEmptyArgsInstance() {
        return new registrarReporte_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean>() { 
          public void onComplete(java.lang.Boolean o) {
            registrarReporte_result result = new registrarReporte_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            registrarReporte_result result = new registrarReporte_result();
            if (e instanceof ErrorBD) {
              result.ebd = (ErrorBD) e;
              result.setEbdIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, registrarReporte_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
        iface.registrarReporte(args.reporte, args.telefono,resultHandler);
      }
    }

    public static class registrarFotografia<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, registrarFotografia_args, java.lang.Boolean> {
      public registrarFotografia() {
        super("registrarFotografia");
      }

      public registrarFotografia_args getEmptyArgsInstance() {
        return new registrarFotografia_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean>() { 
          public void onComplete(java.lang.Boolean o) {
            registrarFotografia_result result = new registrarFotografia_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            registrarFotografia_result result = new registrarFotografia_result();
            if (e instanceof ErrorBD) {
              result.ebd = (ErrorBD) e;
              result.setEbdIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, registrarFotografia_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
        iface.registrarFotografia(args.fotografias, args.telefono,resultHandler);
      }
    }

    public static class consultarFotografia<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, consultarFotografia_args, java.util.List<java.lang.String>> {
      public consultarFotografia() {
        super("consultarFotografia");
      }

      public consultarFotografia_args getEmptyArgsInstance() {
        return new consultarFotografia_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.String>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.String>>() { 
          public void onComplete(java.util.List<java.lang.String> o) {
            consultarFotografia_result result = new consultarFotografia_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            consultarFotografia_result result = new consultarFotografia_result();
            if (e instanceof ErrorBD) {
              result.ebd = (ErrorBD) e;
              result.setEbdIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, consultarFotografia_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.String>> resultHandler) throws org.apache.thrift.TException {
        iface.consultarFotografia(args.folioUnico_dictamen,resultHandler);
      }
    }

    public static class registrarVehiculoReporte<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, registrarVehiculoReporte_args, java.lang.String> {
      public registrarVehiculoReporte() {
        super("registrarVehiculoReporte");
      }

      public registrarVehiculoReporte_args getEmptyArgsInstance() {
        return new registrarVehiculoReporte_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.String> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.String>() { 
          public void onComplete(java.lang.String o) {
            registrarVehiculoReporte_result result = new registrarVehiculoReporte_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            registrarVehiculoReporte_result result = new registrarVehiculoReporte_result();
            if (e instanceof ErrorBD) {
              result.ebd = (ErrorBD) e;
              result.setEbdIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, registrarVehiculoReporte_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
        iface.registrarVehiculoReporte(args.vehiculo,resultHandler);
      }
    }

    public static class consultarReporte<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, consultarReporte_args, java.util.List<Reporte>> {
      public consultarReporte() {
        super("consultarReporte");
      }

      public consultarReporte_args getEmptyArgsInstance() {
        return new consultarReporte_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<Reporte>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<Reporte>>() { 
          public void onComplete(java.util.List<Reporte> o) {
            consultarReporte_result result = new consultarReporte_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            consultarReporte_result result = new consultarReporte_result();
            if (e instanceof ErrorBD) {
              result.ebd = (ErrorBD) e;
              result.setEbdIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, consultarReporte_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Reporte>> resultHandler) throws org.apache.thrift.TException {
        iface.consultarReporte(args.telefono,resultHandler);
      }
    }

    public static class consultarDictamen<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, consultarDictamen_args, java.util.List<Dictamen>> {
      public consultarDictamen() {
        super("consultarDictamen");
      }

      public consultarDictamen_args getEmptyArgsInstance() {
        return new consultarDictamen_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<Dictamen>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<Dictamen>>() { 
          public void onComplete(java.util.List<Dictamen> o) {
            consultarDictamen_result result = new consultarDictamen_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            consultarDictamen_result result = new consultarDictamen_result();
            if (e instanceof ErrorBD) {
              result.ebd = (ErrorBD) e;
              result.setEbdIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, consultarDictamen_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Dictamen>> resultHandler) throws org.apache.thrift.TException {
        iface.consultarDictamen(args.folioUnico,resultHandler);
      }
    }

    public static class consultarConductorPropio<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, consultarConductorPropio_args, Conductor> {
      public consultarConductorPropio() {
        super("consultarConductorPropio");
      }

      public consultarConductorPropio_args getEmptyArgsInstance() {
        return new consultarConductorPropio_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Conductor> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Conductor>() { 
          public void onComplete(Conductor o) {
            consultarConductorPropio_result result = new consultarConductorPropio_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            consultarConductorPropio_result result = new consultarConductorPropio_result();
            if (e instanceof ErrorBD) {
              result.ebd = (ErrorBD) e;
              result.setEbdIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, consultarConductorPropio_args args, org.apache.thrift.async.AsyncMethodCallback<Conductor> resultHandler) throws org.apache.thrift.TException {
        iface.consultarConductorPropio(args.telefono,resultHandler);
      }
    }

    public static class recuperarNFuncionario<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, recuperarNFuncionario_args, java.lang.String> {
      public recuperarNFuncionario() {
        super("recuperarNFuncionario");
      }

      public recuperarNFuncionario_args getEmptyArgsInstance() {
        return new recuperarNFuncionario_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.String> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.String>() { 
          public void onComplete(java.lang.String o) {
            recuperarNFuncionario_result result = new recuperarNFuncionario_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            recuperarNFuncionario_result result = new recuperarNFuncionario_result();
            if (e instanceof ErrorBD) {
              result.ebd = (ErrorBD) e;
              result.setEbdIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, recuperarNFuncionario_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
        iface.recuperarNFuncionario(args.folioUnico,resultHandler);
      }
    }

    public static class recuperarVehiculoReporte<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, recuperarVehiculoReporte_args, java.util.List<Vehiculo>> {
      public recuperarVehiculoReporte() {
        super("recuperarVehiculoReporte");
      }

      public recuperarVehiculoReporte_args getEmptyArgsInstance() {
        return new recuperarVehiculoReporte_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<Vehiculo>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<Vehiculo>>() { 
          public void onComplete(java.util.List<Vehiculo> o) {
            recuperarVehiculoReporte_result result = new recuperarVehiculoReporte_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            recuperarVehiculoReporte_result result = new recuperarVehiculoReporte_result();
            if (e instanceof ErrorBD) {
              result.ebd = (ErrorBD) e;
              result.setEbdIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, recuperarVehiculoReporte_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Vehiculo>> resultHandler) throws org.apache.thrift.TException {
        iface.recuperarVehiculoReporte(args.folioUnico_dictamen,resultHandler);
      }
    }

    public static class asociarVehiculoReporte<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, asociarVehiculoReporte_args, java.lang.Boolean> {
      public asociarVehiculoReporte() {
        super("asociarVehiculoReporte");
      }

      public asociarVehiculoReporte_args getEmptyArgsInstance() {
        return new asociarVehiculoReporte_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean>() { 
          public void onComplete(java.lang.Boolean o) {
            asociarVehiculoReporte_result result = new asociarVehiculoReporte_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            asociarVehiculoReporte_result result = new asociarVehiculoReporte_result();
            if (e instanceof ErrorBD) {
              result.ebd = (ErrorBD) e;
              result.setEbdIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, asociarVehiculoReporte_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
        iface.asociarVehiculoReporte(args.numPLacas, args.telefono,resultHandler);
      }
    }

  }

  public static class confirmarConductor_args implements org.apache.thrift.TBase<confirmarConductor_args, confirmarConductor_args._Fields>, java.io.Serializable, Cloneable, Comparable<confirmarConductor_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("confirmarConductor_args");

    private static final org.apache.thrift.protocol.TField TELEFONO_FIELD_DESC = new org.apache.thrift.protocol.TField("telefono", org.apache.thrift.protocol.TType.I64, (short)1);
    private static final org.apache.thrift.protocol.TField CONTRASENA_FIELD_DESC = new org.apache.thrift.protocol.TField("contrasena", org.apache.thrift.protocol.TType.STRING, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new confirmarConductor_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new confirmarConductor_argsTupleSchemeFactory();

    public long telefono; // required
    public @org.apache.thrift.annotation.Nullable java.lang.String contrasena; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      TELEFONO((short)1, "telefono"),
      CONTRASENA((short)2, "contrasena");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // TELEFONO
            return TELEFONO;
          case 2: // CONTRASENA
            return CONTRASENA;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __TELEFONO_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.TELEFONO, new org.apache.thrift.meta_data.FieldMetaData("telefono", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      tmpMap.put(_Fields.CONTRASENA, new org.apache.thrift.meta_data.FieldMetaData("contrasena", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(confirmarConductor_args.class, metaDataMap);
    }

    public confirmarConductor_args() {
    }

    public confirmarConductor_args(
      long telefono,
      java.lang.String contrasena)
    {
      this();
      this.telefono = telefono;
      setTelefonoIsSet(true);
      this.contrasena = contrasena;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public confirmarConductor_args(confirmarConductor_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.telefono = other.telefono;
      if (other.isSetContrasena()) {
        this.contrasena = other.contrasena;
      }
    }

    public confirmarConductor_args deepCopy() {
      return new confirmarConductor_args(this);
    }

    @Override
    public void clear() {
      setTelefonoIsSet(false);
      this.telefono = 0;
      this.contrasena = null;
    }

    public long getTelefono() {
      return this.telefono;
    }

    public confirmarConductor_args setTelefono(long telefono) {
      this.telefono = telefono;
      setTelefonoIsSet(true);
      return this;
    }

    public void unsetTelefono() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TELEFONO_ISSET_ID);
    }

    /** Returns true if field telefono is set (has been assigned a value) and false otherwise */
    public boolean isSetTelefono() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TELEFONO_ISSET_ID);
    }

    public void setTelefonoIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TELEFONO_ISSET_ID, value);
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getContrasena() {
      return this.contrasena;
    }

    public confirmarConductor_args setContrasena(@org.apache.thrift.annotation.Nullable java.lang.String contrasena) {
      this.contrasena = contrasena;
      return this;
    }

    public void unsetContrasena() {
      this.contrasena = null;
    }

    /** Returns true if field contrasena is set (has been assigned a value) and false otherwise */
    public boolean isSetContrasena() {
      return this.contrasena != null;
    }

    public void setContrasenaIsSet(boolean value) {
      if (!value) {
        this.contrasena = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case TELEFONO:
        if (value == null) {
          unsetTelefono();
        } else {
          setTelefono((java.lang.Long)value);
        }
        break;

      case CONTRASENA:
        if (value == null) {
          unsetContrasena();
        } else {
          setContrasena((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case TELEFONO:
        return getTelefono();

      case CONTRASENA:
        return getContrasena();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case TELEFONO:
        return isSetTelefono();
      case CONTRASENA:
        return isSetContrasena();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof confirmarConductor_args)
        return this.equals((confirmarConductor_args)that);
      return false;
    }

    public boolean equals(confirmarConductor_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_telefono = true;
      boolean that_present_telefono = true;
      if (this_present_telefono || that_present_telefono) {
        if (!(this_present_telefono && that_present_telefono))
          return false;
        if (this.telefono != that.telefono)
          return false;
      }

      boolean this_present_contrasena = true && this.isSetContrasena();
      boolean that_present_contrasena = true && that.isSetContrasena();
      if (this_present_contrasena || that_present_contrasena) {
        if (!(this_present_contrasena && that_present_contrasena))
          return false;
        if (!this.contrasena.equals(that.contrasena))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(telefono);

      hashCode = hashCode * 8191 + ((isSetContrasena()) ? 131071 : 524287);
      if (isSetContrasena())
        hashCode = hashCode * 8191 + contrasena.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(confirmarConductor_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetTelefono()).compareTo(other.isSetTelefono());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTelefono()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telefono, other.telefono);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetContrasena()).compareTo(other.isSetContrasena());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetContrasena()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contrasena, other.contrasena);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("confirmarConductor_args(");
      boolean first = true;

      sb.append("telefono:");
      sb.append(this.telefono);
      first = false;
      if (!first) sb.append(", ");
      sb.append("contrasena:");
      if (this.contrasena == null) {
        sb.append("null");
      } else {
        sb.append(this.contrasena);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class confirmarConductor_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public confirmarConductor_argsStandardScheme getScheme() {
        return new confirmarConductor_argsStandardScheme();
      }
    }

    private static class confirmarConductor_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<confirmarConductor_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, confirmarConductor_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // TELEFONO
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.telefono = iprot.readI64();
                struct.setTelefonoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // CONTRASENA
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.contrasena = iprot.readString();
                struct.setContrasenaIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, confirmarConductor_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(TELEFONO_FIELD_DESC);
        oprot.writeI64(struct.telefono);
        oprot.writeFieldEnd();
        if (struct.contrasena != null) {
          oprot.writeFieldBegin(CONTRASENA_FIELD_DESC);
          oprot.writeString(struct.contrasena);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class confirmarConductor_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public confirmarConductor_argsTupleScheme getScheme() {
        return new confirmarConductor_argsTupleScheme();
      }
    }

    private static class confirmarConductor_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<confirmarConductor_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, confirmarConductor_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetTelefono()) {
          optionals.set(0);
        }
        if (struct.isSetContrasena()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetTelefono()) {
          oprot.writeI64(struct.telefono);
        }
        if (struct.isSetContrasena()) {
          oprot.writeString(struct.contrasena);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, confirmarConductor_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.telefono = iprot.readI64();
          struct.setTelefonoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.contrasena = iprot.readString();
          struct.setContrasenaIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class confirmarConductor_result implements org.apache.thrift.TBase<confirmarConductor_result, confirmarConductor_result._Fields>, java.io.Serializable, Cloneable, Comparable<confirmarConductor_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("confirmarConductor_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.BOOL, (short)0);
    private static final org.apache.thrift.protocol.TField EBD_FIELD_DESC = new org.apache.thrift.protocol.TField("ebd", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new confirmarConductor_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new confirmarConductor_resultTupleSchemeFactory();

    public boolean success; // required
    public @org.apache.thrift.annotation.Nullable ErrorBD ebd; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      EBD((short)1, "ebd");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // EBD
            return EBD;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      tmpMap.put(_Fields.EBD, new org.apache.thrift.meta_data.FieldMetaData("ebd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ErrorBD.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(confirmarConductor_result.class, metaDataMap);
    }

    public confirmarConductor_result() {
    }

    public confirmarConductor_result(
      boolean success,
      ErrorBD ebd)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
      this.ebd = ebd;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public confirmarConductor_result(confirmarConductor_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
      if (other.isSetEbd()) {
        this.ebd = new ErrorBD(other.ebd);
      }
    }

    public confirmarConductor_result deepCopy() {
      return new confirmarConductor_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = false;
      this.ebd = null;
    }

    public boolean isSuccess() {
      return this.success;
    }

    public confirmarConductor_result setSuccess(boolean success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    @org.apache.thrift.annotation.Nullable
    public ErrorBD getEbd() {
      return this.ebd;
    }

    public confirmarConductor_result setEbd(@org.apache.thrift.annotation.Nullable ErrorBD ebd) {
      this.ebd = ebd;
      return this;
    }

    public void unsetEbd() {
      this.ebd = null;
    }

    /** Returns true if field ebd is set (has been assigned a value) and false otherwise */
    public boolean isSetEbd() {
      return this.ebd != null;
    }

    public void setEbdIsSet(boolean value) {
      if (!value) {
        this.ebd = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.Boolean)value);
        }
        break;

      case EBD:
        if (value == null) {
          unsetEbd();
        } else {
          setEbd((ErrorBD)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return isSuccess();

      case EBD:
        return getEbd();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case EBD:
        return isSetEbd();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof confirmarConductor_result)
        return this.equals((confirmarConductor_result)that);
      return false;
    }

    public boolean equals(confirmarConductor_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      boolean this_present_ebd = true && this.isSetEbd();
      boolean that_present_ebd = true && that.isSetEbd();
      if (this_present_ebd || that_present_ebd) {
        if (!(this_present_ebd && that_present_ebd))
          return false;
        if (!this.ebd.equals(that.ebd))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((success) ? 131071 : 524287);

      hashCode = hashCode * 8191 + ((isSetEbd()) ? 131071 : 524287);
      if (isSetEbd())
        hashCode = hashCode * 8191 + ebd.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(confirmarConductor_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEbd()).compareTo(other.isSetEbd());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEbd()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ebd, other.ebd);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("confirmarConductor_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      if (!first) sb.append(", ");
      sb.append("ebd:");
      if (this.ebd == null) {
        sb.append("null");
      } else {
        sb.append(this.ebd);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class confirmarConductor_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public confirmarConductor_resultStandardScheme getScheme() {
        return new confirmarConductor_resultStandardScheme();
      }
    }

    private static class confirmarConductor_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<confirmarConductor_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, confirmarConductor_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.success = iprot.readBool();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // EBD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ebd = new ErrorBD();
                struct.ebd.read(iprot);
                struct.setEbdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, confirmarConductor_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeBool(struct.success);
          oprot.writeFieldEnd();
        }
        if (struct.ebd != null) {
          oprot.writeFieldBegin(EBD_FIELD_DESC);
          struct.ebd.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class confirmarConductor_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public confirmarConductor_resultTupleScheme getScheme() {
        return new confirmarConductor_resultTupleScheme();
      }
    }

    private static class confirmarConductor_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<confirmarConductor_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, confirmarConductor_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetEbd()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          oprot.writeBool(struct.success);
        }
        if (struct.isSetEbd()) {
          struct.ebd.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, confirmarConductor_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = iprot.readBool();
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ebd = new ErrorBD();
          struct.ebd.read(iprot);
          struct.setEbdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class registrarConductor_args implements org.apache.thrift.TBase<registrarConductor_args, registrarConductor_args._Fields>, java.io.Serializable, Cloneable, Comparable<registrarConductor_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("registrarConductor_args");

    private static final org.apache.thrift.protocol.TField CONDUCTOR_FIELD_DESC = new org.apache.thrift.protocol.TField("conductor", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new registrarConductor_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new registrarConductor_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable Conductor conductor; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      CONDUCTOR((short)1, "conductor");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // CONDUCTOR
            return CONDUCTOR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.CONDUCTOR, new org.apache.thrift.meta_data.FieldMetaData("conductor", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Conductor.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(registrarConductor_args.class, metaDataMap);
    }

    public registrarConductor_args() {
    }

    public registrarConductor_args(
      Conductor conductor)
    {
      this();
      this.conductor = conductor;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public registrarConductor_args(registrarConductor_args other) {
      if (other.isSetConductor()) {
        this.conductor = new Conductor(other.conductor);
      }
    }

    public registrarConductor_args deepCopy() {
      return new registrarConductor_args(this);
    }

    @Override
    public void clear() {
      this.conductor = null;
    }

    @org.apache.thrift.annotation.Nullable
    public Conductor getConductor() {
      return this.conductor;
    }

    public registrarConductor_args setConductor(@org.apache.thrift.annotation.Nullable Conductor conductor) {
      this.conductor = conductor;
      return this;
    }

    public void unsetConductor() {
      this.conductor = null;
    }

    /** Returns true if field conductor is set (has been assigned a value) and false otherwise */
    public boolean isSetConductor() {
      return this.conductor != null;
    }

    public void setConductorIsSet(boolean value) {
      if (!value) {
        this.conductor = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case CONDUCTOR:
        if (value == null) {
          unsetConductor();
        } else {
          setConductor((Conductor)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case CONDUCTOR:
        return getConductor();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case CONDUCTOR:
        return isSetConductor();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof registrarConductor_args)
        return this.equals((registrarConductor_args)that);
      return false;
    }

    public boolean equals(registrarConductor_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_conductor = true && this.isSetConductor();
      boolean that_present_conductor = true && that.isSetConductor();
      if (this_present_conductor || that_present_conductor) {
        if (!(this_present_conductor && that_present_conductor))
          return false;
        if (!this.conductor.equals(that.conductor))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetConductor()) ? 131071 : 524287);
      if (isSetConductor())
        hashCode = hashCode * 8191 + conductor.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(registrarConductor_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetConductor()).compareTo(other.isSetConductor());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetConductor()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.conductor, other.conductor);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("registrarConductor_args(");
      boolean first = true;

      sb.append("conductor:");
      if (this.conductor == null) {
        sb.append("null");
      } else {
        sb.append(this.conductor);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (conductor != null) {
        conductor.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class registrarConductor_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarConductor_argsStandardScheme getScheme() {
        return new registrarConductor_argsStandardScheme();
      }
    }

    private static class registrarConductor_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<registrarConductor_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, registrarConductor_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // CONDUCTOR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.conductor = new Conductor();
                struct.conductor.read(iprot);
                struct.setConductorIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, registrarConductor_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.conductor != null) {
          oprot.writeFieldBegin(CONDUCTOR_FIELD_DESC);
          struct.conductor.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class registrarConductor_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarConductor_argsTupleScheme getScheme() {
        return new registrarConductor_argsTupleScheme();
      }
    }

    private static class registrarConductor_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<registrarConductor_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, registrarConductor_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetConductor()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetConductor()) {
          struct.conductor.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, registrarConductor_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.conductor = new Conductor();
          struct.conductor.read(iprot);
          struct.setConductorIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class registrarConductor_result implements org.apache.thrift.TBase<registrarConductor_result, registrarConductor_result._Fields>, java.io.Serializable, Cloneable, Comparable<registrarConductor_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("registrarConductor_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.BOOL, (short)0);
    private static final org.apache.thrift.protocol.TField EBD_FIELD_DESC = new org.apache.thrift.protocol.TField("ebd", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new registrarConductor_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new registrarConductor_resultTupleSchemeFactory();

    public boolean success; // required
    public @org.apache.thrift.annotation.Nullable ErrorBD ebd; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      EBD((short)1, "ebd");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // EBD
            return EBD;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      tmpMap.put(_Fields.EBD, new org.apache.thrift.meta_data.FieldMetaData("ebd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ErrorBD.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(registrarConductor_result.class, metaDataMap);
    }

    public registrarConductor_result() {
    }

    public registrarConductor_result(
      boolean success,
      ErrorBD ebd)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
      this.ebd = ebd;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public registrarConductor_result(registrarConductor_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
      if (other.isSetEbd()) {
        this.ebd = new ErrorBD(other.ebd);
      }
    }

    public registrarConductor_result deepCopy() {
      return new registrarConductor_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = false;
      this.ebd = null;
    }

    public boolean isSuccess() {
      return this.success;
    }

    public registrarConductor_result setSuccess(boolean success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    @org.apache.thrift.annotation.Nullable
    public ErrorBD getEbd() {
      return this.ebd;
    }

    public registrarConductor_result setEbd(@org.apache.thrift.annotation.Nullable ErrorBD ebd) {
      this.ebd = ebd;
      return this;
    }

    public void unsetEbd() {
      this.ebd = null;
    }

    /** Returns true if field ebd is set (has been assigned a value) and false otherwise */
    public boolean isSetEbd() {
      return this.ebd != null;
    }

    public void setEbdIsSet(boolean value) {
      if (!value) {
        this.ebd = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.Boolean)value);
        }
        break;

      case EBD:
        if (value == null) {
          unsetEbd();
        } else {
          setEbd((ErrorBD)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return isSuccess();

      case EBD:
        return getEbd();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case EBD:
        return isSetEbd();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof registrarConductor_result)
        return this.equals((registrarConductor_result)that);
      return false;
    }

    public boolean equals(registrarConductor_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      boolean this_present_ebd = true && this.isSetEbd();
      boolean that_present_ebd = true && that.isSetEbd();
      if (this_present_ebd || that_present_ebd) {
        if (!(this_present_ebd && that_present_ebd))
          return false;
        if (!this.ebd.equals(that.ebd))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((success) ? 131071 : 524287);

      hashCode = hashCode * 8191 + ((isSetEbd()) ? 131071 : 524287);
      if (isSetEbd())
        hashCode = hashCode * 8191 + ebd.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(registrarConductor_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEbd()).compareTo(other.isSetEbd());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEbd()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ebd, other.ebd);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("registrarConductor_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      if (!first) sb.append(", ");
      sb.append("ebd:");
      if (this.ebd == null) {
        sb.append("null");
      } else {
        sb.append(this.ebd);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class registrarConductor_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarConductor_resultStandardScheme getScheme() {
        return new registrarConductor_resultStandardScheme();
      }
    }

    private static class registrarConductor_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<registrarConductor_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, registrarConductor_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.success = iprot.readBool();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // EBD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ebd = new ErrorBD();
                struct.ebd.read(iprot);
                struct.setEbdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, registrarConductor_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeBool(struct.success);
          oprot.writeFieldEnd();
        }
        if (struct.ebd != null) {
          oprot.writeFieldBegin(EBD_FIELD_DESC);
          struct.ebd.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class registrarConductor_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarConductor_resultTupleScheme getScheme() {
        return new registrarConductor_resultTupleScheme();
      }
    }

    private static class registrarConductor_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<registrarConductor_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, registrarConductor_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetEbd()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          oprot.writeBool(struct.success);
        }
        if (struct.isSetEbd()) {
          struct.ebd.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, registrarConductor_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = iprot.readBool();
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ebd = new ErrorBD();
          struct.ebd.read(iprot);
          struct.setEbdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class registrarVehiculo_args implements org.apache.thrift.TBase<registrarVehiculo_args, registrarVehiculo_args._Fields>, java.io.Serializable, Cloneable, Comparable<registrarVehiculo_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("registrarVehiculo_args");

    private static final org.apache.thrift.protocol.TField VEHICULO_FIELD_DESC = new org.apache.thrift.protocol.TField("vehiculo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField TELEFONO_FIELD_DESC = new org.apache.thrift.protocol.TField("telefono", org.apache.thrift.protocol.TType.I64, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new registrarVehiculo_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new registrarVehiculo_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable Vehiculo vehiculo; // required
    public long telefono; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      VEHICULO((short)1, "vehiculo"),
      TELEFONO((short)2, "telefono");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // VEHICULO
            return VEHICULO;
          case 2: // TELEFONO
            return TELEFONO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __TELEFONO_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.VEHICULO, new org.apache.thrift.meta_data.FieldMetaData("vehiculo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Vehiculo.class)));
      tmpMap.put(_Fields.TELEFONO, new org.apache.thrift.meta_data.FieldMetaData("telefono", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(registrarVehiculo_args.class, metaDataMap);
    }

    public registrarVehiculo_args() {
    }

    public registrarVehiculo_args(
      Vehiculo vehiculo,
      long telefono)
    {
      this();
      this.vehiculo = vehiculo;
      this.telefono = telefono;
      setTelefonoIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public registrarVehiculo_args(registrarVehiculo_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetVehiculo()) {
        this.vehiculo = new Vehiculo(other.vehiculo);
      }
      this.telefono = other.telefono;
    }

    public registrarVehiculo_args deepCopy() {
      return new registrarVehiculo_args(this);
    }

    @Override
    public void clear() {
      this.vehiculo = null;
      setTelefonoIsSet(false);
      this.telefono = 0;
    }

    @org.apache.thrift.annotation.Nullable
    public Vehiculo getVehiculo() {
      return this.vehiculo;
    }

    public registrarVehiculo_args setVehiculo(@org.apache.thrift.annotation.Nullable Vehiculo vehiculo) {
      this.vehiculo = vehiculo;
      return this;
    }

    public void unsetVehiculo() {
      this.vehiculo = null;
    }

    /** Returns true if field vehiculo is set (has been assigned a value) and false otherwise */
    public boolean isSetVehiculo() {
      return this.vehiculo != null;
    }

    public void setVehiculoIsSet(boolean value) {
      if (!value) {
        this.vehiculo = null;
      }
    }

    public long getTelefono() {
      return this.telefono;
    }

    public registrarVehiculo_args setTelefono(long telefono) {
      this.telefono = telefono;
      setTelefonoIsSet(true);
      return this;
    }

    public void unsetTelefono() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TELEFONO_ISSET_ID);
    }

    /** Returns true if field telefono is set (has been assigned a value) and false otherwise */
    public boolean isSetTelefono() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TELEFONO_ISSET_ID);
    }

    public void setTelefonoIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TELEFONO_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case VEHICULO:
        if (value == null) {
          unsetVehiculo();
        } else {
          setVehiculo((Vehiculo)value);
        }
        break;

      case TELEFONO:
        if (value == null) {
          unsetTelefono();
        } else {
          setTelefono((java.lang.Long)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case VEHICULO:
        return getVehiculo();

      case TELEFONO:
        return getTelefono();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case VEHICULO:
        return isSetVehiculo();
      case TELEFONO:
        return isSetTelefono();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof registrarVehiculo_args)
        return this.equals((registrarVehiculo_args)that);
      return false;
    }

    public boolean equals(registrarVehiculo_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_vehiculo = true && this.isSetVehiculo();
      boolean that_present_vehiculo = true && that.isSetVehiculo();
      if (this_present_vehiculo || that_present_vehiculo) {
        if (!(this_present_vehiculo && that_present_vehiculo))
          return false;
        if (!this.vehiculo.equals(that.vehiculo))
          return false;
      }

      boolean this_present_telefono = true;
      boolean that_present_telefono = true;
      if (this_present_telefono || that_present_telefono) {
        if (!(this_present_telefono && that_present_telefono))
          return false;
        if (this.telefono != that.telefono)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetVehiculo()) ? 131071 : 524287);
      if (isSetVehiculo())
        hashCode = hashCode * 8191 + vehiculo.hashCode();

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(telefono);

      return hashCode;
    }

    @Override
    public int compareTo(registrarVehiculo_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetVehiculo()).compareTo(other.isSetVehiculo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetVehiculo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vehiculo, other.vehiculo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetTelefono()).compareTo(other.isSetTelefono());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTelefono()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telefono, other.telefono);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("registrarVehiculo_args(");
      boolean first = true;

      sb.append("vehiculo:");
      if (this.vehiculo == null) {
        sb.append("null");
      } else {
        sb.append(this.vehiculo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("telefono:");
      sb.append(this.telefono);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (vehiculo != null) {
        vehiculo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class registrarVehiculo_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarVehiculo_argsStandardScheme getScheme() {
        return new registrarVehiculo_argsStandardScheme();
      }
    }

    private static class registrarVehiculo_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<registrarVehiculo_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, registrarVehiculo_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // VEHICULO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.vehiculo = new Vehiculo();
                struct.vehiculo.read(iprot);
                struct.setVehiculoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // TELEFONO
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.telefono = iprot.readI64();
                struct.setTelefonoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, registrarVehiculo_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.vehiculo != null) {
          oprot.writeFieldBegin(VEHICULO_FIELD_DESC);
          struct.vehiculo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(TELEFONO_FIELD_DESC);
        oprot.writeI64(struct.telefono);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class registrarVehiculo_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarVehiculo_argsTupleScheme getScheme() {
        return new registrarVehiculo_argsTupleScheme();
      }
    }

    private static class registrarVehiculo_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<registrarVehiculo_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, registrarVehiculo_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetVehiculo()) {
          optionals.set(0);
        }
        if (struct.isSetTelefono()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetVehiculo()) {
          struct.vehiculo.write(oprot);
        }
        if (struct.isSetTelefono()) {
          oprot.writeI64(struct.telefono);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, registrarVehiculo_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.vehiculo = new Vehiculo();
          struct.vehiculo.read(iprot);
          struct.setVehiculoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.telefono = iprot.readI64();
          struct.setTelefonoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class registrarVehiculo_result implements org.apache.thrift.TBase<registrarVehiculo_result, registrarVehiculo_result._Fields>, java.io.Serializable, Cloneable, Comparable<registrarVehiculo_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("registrarVehiculo_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.BOOL, (short)0);
    private static final org.apache.thrift.protocol.TField EBD_FIELD_DESC = new org.apache.thrift.protocol.TField("ebd", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new registrarVehiculo_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new registrarVehiculo_resultTupleSchemeFactory();

    public boolean success; // required
    public @org.apache.thrift.annotation.Nullable ErrorBD ebd; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      EBD((short)1, "ebd");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // EBD
            return EBD;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      tmpMap.put(_Fields.EBD, new org.apache.thrift.meta_data.FieldMetaData("ebd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ErrorBD.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(registrarVehiculo_result.class, metaDataMap);
    }

    public registrarVehiculo_result() {
    }

    public registrarVehiculo_result(
      boolean success,
      ErrorBD ebd)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
      this.ebd = ebd;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public registrarVehiculo_result(registrarVehiculo_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
      if (other.isSetEbd()) {
        this.ebd = new ErrorBD(other.ebd);
      }
    }

    public registrarVehiculo_result deepCopy() {
      return new registrarVehiculo_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = false;
      this.ebd = null;
    }

    public boolean isSuccess() {
      return this.success;
    }

    public registrarVehiculo_result setSuccess(boolean success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    @org.apache.thrift.annotation.Nullable
    public ErrorBD getEbd() {
      return this.ebd;
    }

    public registrarVehiculo_result setEbd(@org.apache.thrift.annotation.Nullable ErrorBD ebd) {
      this.ebd = ebd;
      return this;
    }

    public void unsetEbd() {
      this.ebd = null;
    }

    /** Returns true if field ebd is set (has been assigned a value) and false otherwise */
    public boolean isSetEbd() {
      return this.ebd != null;
    }

    public void setEbdIsSet(boolean value) {
      if (!value) {
        this.ebd = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.Boolean)value);
        }
        break;

      case EBD:
        if (value == null) {
          unsetEbd();
        } else {
          setEbd((ErrorBD)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return isSuccess();

      case EBD:
        return getEbd();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case EBD:
        return isSetEbd();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof registrarVehiculo_result)
        return this.equals((registrarVehiculo_result)that);
      return false;
    }

    public boolean equals(registrarVehiculo_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      boolean this_present_ebd = true && this.isSetEbd();
      boolean that_present_ebd = true && that.isSetEbd();
      if (this_present_ebd || that_present_ebd) {
        if (!(this_present_ebd && that_present_ebd))
          return false;
        if (!this.ebd.equals(that.ebd))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((success) ? 131071 : 524287);

      hashCode = hashCode * 8191 + ((isSetEbd()) ? 131071 : 524287);
      if (isSetEbd())
        hashCode = hashCode * 8191 + ebd.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(registrarVehiculo_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEbd()).compareTo(other.isSetEbd());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEbd()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ebd, other.ebd);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("registrarVehiculo_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      if (!first) sb.append(", ");
      sb.append("ebd:");
      if (this.ebd == null) {
        sb.append("null");
      } else {
        sb.append(this.ebd);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class registrarVehiculo_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarVehiculo_resultStandardScheme getScheme() {
        return new registrarVehiculo_resultStandardScheme();
      }
    }

    private static class registrarVehiculo_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<registrarVehiculo_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, registrarVehiculo_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.success = iprot.readBool();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // EBD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ebd = new ErrorBD();
                struct.ebd.read(iprot);
                struct.setEbdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, registrarVehiculo_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeBool(struct.success);
          oprot.writeFieldEnd();
        }
        if (struct.ebd != null) {
          oprot.writeFieldBegin(EBD_FIELD_DESC);
          struct.ebd.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class registrarVehiculo_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarVehiculo_resultTupleScheme getScheme() {
        return new registrarVehiculo_resultTupleScheme();
      }
    }

    private static class registrarVehiculo_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<registrarVehiculo_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, registrarVehiculo_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetEbd()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          oprot.writeBool(struct.success);
        }
        if (struct.isSetEbd()) {
          struct.ebd.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, registrarVehiculo_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = iprot.readBool();
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ebd = new ErrorBD();
          struct.ebd.read(iprot);
          struct.setEbdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class modificarVehiculo_args implements org.apache.thrift.TBase<modificarVehiculo_args, modificarVehiculo_args._Fields>, java.io.Serializable, Cloneable, Comparable<modificarVehiculo_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("modificarVehiculo_args");

    private static final org.apache.thrift.protocol.TField VEHICULO_FIELD_DESC = new org.apache.thrift.protocol.TField("vehiculo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField NUM_PLACA_ANT_FIELD_DESC = new org.apache.thrift.protocol.TField("numPLacaAnt", org.apache.thrift.protocol.TType.STRING, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new modificarVehiculo_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new modificarVehiculo_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable Vehiculo vehiculo; // required
    public @org.apache.thrift.annotation.Nullable java.lang.String numPLacaAnt; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      VEHICULO((short)1, "vehiculo"),
      NUM_PLACA_ANT((short)2, "numPLacaAnt");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // VEHICULO
            return VEHICULO;
          case 2: // NUM_PLACA_ANT
            return NUM_PLACA_ANT;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.VEHICULO, new org.apache.thrift.meta_data.FieldMetaData("vehiculo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Vehiculo.class)));
      tmpMap.put(_Fields.NUM_PLACA_ANT, new org.apache.thrift.meta_data.FieldMetaData("numPLacaAnt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(modificarVehiculo_args.class, metaDataMap);
    }

    public modificarVehiculo_args() {
    }

    public modificarVehiculo_args(
      Vehiculo vehiculo,
      java.lang.String numPLacaAnt)
    {
      this();
      this.vehiculo = vehiculo;
      this.numPLacaAnt = numPLacaAnt;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public modificarVehiculo_args(modificarVehiculo_args other) {
      if (other.isSetVehiculo()) {
        this.vehiculo = new Vehiculo(other.vehiculo);
      }
      if (other.isSetNumPLacaAnt()) {
        this.numPLacaAnt = other.numPLacaAnt;
      }
    }

    public modificarVehiculo_args deepCopy() {
      return new modificarVehiculo_args(this);
    }

    @Override
    public void clear() {
      this.vehiculo = null;
      this.numPLacaAnt = null;
    }

    @org.apache.thrift.annotation.Nullable
    public Vehiculo getVehiculo() {
      return this.vehiculo;
    }

    public modificarVehiculo_args setVehiculo(@org.apache.thrift.annotation.Nullable Vehiculo vehiculo) {
      this.vehiculo = vehiculo;
      return this;
    }

    public void unsetVehiculo() {
      this.vehiculo = null;
    }

    /** Returns true if field vehiculo is set (has been assigned a value) and false otherwise */
    public boolean isSetVehiculo() {
      return this.vehiculo != null;
    }

    public void setVehiculoIsSet(boolean value) {
      if (!value) {
        this.vehiculo = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getNumPLacaAnt() {
      return this.numPLacaAnt;
    }

    public modificarVehiculo_args setNumPLacaAnt(@org.apache.thrift.annotation.Nullable java.lang.String numPLacaAnt) {
      this.numPLacaAnt = numPLacaAnt;
      return this;
    }

    public void unsetNumPLacaAnt() {
      this.numPLacaAnt = null;
    }

    /** Returns true if field numPLacaAnt is set (has been assigned a value) and false otherwise */
    public boolean isSetNumPLacaAnt() {
      return this.numPLacaAnt != null;
    }

    public void setNumPLacaAntIsSet(boolean value) {
      if (!value) {
        this.numPLacaAnt = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case VEHICULO:
        if (value == null) {
          unsetVehiculo();
        } else {
          setVehiculo((Vehiculo)value);
        }
        break;

      case NUM_PLACA_ANT:
        if (value == null) {
          unsetNumPLacaAnt();
        } else {
          setNumPLacaAnt((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case VEHICULO:
        return getVehiculo();

      case NUM_PLACA_ANT:
        return getNumPLacaAnt();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case VEHICULO:
        return isSetVehiculo();
      case NUM_PLACA_ANT:
        return isSetNumPLacaAnt();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof modificarVehiculo_args)
        return this.equals((modificarVehiculo_args)that);
      return false;
    }

    public boolean equals(modificarVehiculo_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_vehiculo = true && this.isSetVehiculo();
      boolean that_present_vehiculo = true && that.isSetVehiculo();
      if (this_present_vehiculo || that_present_vehiculo) {
        if (!(this_present_vehiculo && that_present_vehiculo))
          return false;
        if (!this.vehiculo.equals(that.vehiculo))
          return false;
      }

      boolean this_present_numPLacaAnt = true && this.isSetNumPLacaAnt();
      boolean that_present_numPLacaAnt = true && that.isSetNumPLacaAnt();
      if (this_present_numPLacaAnt || that_present_numPLacaAnt) {
        if (!(this_present_numPLacaAnt && that_present_numPLacaAnt))
          return false;
        if (!this.numPLacaAnt.equals(that.numPLacaAnt))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetVehiculo()) ? 131071 : 524287);
      if (isSetVehiculo())
        hashCode = hashCode * 8191 + vehiculo.hashCode();

      hashCode = hashCode * 8191 + ((isSetNumPLacaAnt()) ? 131071 : 524287);
      if (isSetNumPLacaAnt())
        hashCode = hashCode * 8191 + numPLacaAnt.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(modificarVehiculo_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetVehiculo()).compareTo(other.isSetVehiculo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetVehiculo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vehiculo, other.vehiculo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetNumPLacaAnt()).compareTo(other.isSetNumPLacaAnt());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetNumPLacaAnt()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numPLacaAnt, other.numPLacaAnt);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("modificarVehiculo_args(");
      boolean first = true;

      sb.append("vehiculo:");
      if (this.vehiculo == null) {
        sb.append("null");
      } else {
        sb.append(this.vehiculo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("numPLacaAnt:");
      if (this.numPLacaAnt == null) {
        sb.append("null");
      } else {
        sb.append(this.numPLacaAnt);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (vehiculo != null) {
        vehiculo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class modificarVehiculo_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public modificarVehiculo_argsStandardScheme getScheme() {
        return new modificarVehiculo_argsStandardScheme();
      }
    }

    private static class modificarVehiculo_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<modificarVehiculo_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, modificarVehiculo_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // VEHICULO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.vehiculo = new Vehiculo();
                struct.vehiculo.read(iprot);
                struct.setVehiculoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // NUM_PLACA_ANT
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.numPLacaAnt = iprot.readString();
                struct.setNumPLacaAntIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, modificarVehiculo_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.vehiculo != null) {
          oprot.writeFieldBegin(VEHICULO_FIELD_DESC);
          struct.vehiculo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.numPLacaAnt != null) {
          oprot.writeFieldBegin(NUM_PLACA_ANT_FIELD_DESC);
          oprot.writeString(struct.numPLacaAnt);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class modificarVehiculo_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public modificarVehiculo_argsTupleScheme getScheme() {
        return new modificarVehiculo_argsTupleScheme();
      }
    }

    private static class modificarVehiculo_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<modificarVehiculo_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, modificarVehiculo_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetVehiculo()) {
          optionals.set(0);
        }
        if (struct.isSetNumPLacaAnt()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetVehiculo()) {
          struct.vehiculo.write(oprot);
        }
        if (struct.isSetNumPLacaAnt()) {
          oprot.writeString(struct.numPLacaAnt);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, modificarVehiculo_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.vehiculo = new Vehiculo();
          struct.vehiculo.read(iprot);
          struct.setVehiculoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.numPLacaAnt = iprot.readString();
          struct.setNumPLacaAntIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class modificarVehiculo_result implements org.apache.thrift.TBase<modificarVehiculo_result, modificarVehiculo_result._Fields>, java.io.Serializable, Cloneable, Comparable<modificarVehiculo_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("modificarVehiculo_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.BOOL, (short)0);
    private static final org.apache.thrift.protocol.TField EBD_FIELD_DESC = new org.apache.thrift.protocol.TField("ebd", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new modificarVehiculo_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new modificarVehiculo_resultTupleSchemeFactory();

    public boolean success; // required
    public @org.apache.thrift.annotation.Nullable ErrorBD ebd; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      EBD((short)1, "ebd");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // EBD
            return EBD;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      tmpMap.put(_Fields.EBD, new org.apache.thrift.meta_data.FieldMetaData("ebd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ErrorBD.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(modificarVehiculo_result.class, metaDataMap);
    }

    public modificarVehiculo_result() {
    }

    public modificarVehiculo_result(
      boolean success,
      ErrorBD ebd)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
      this.ebd = ebd;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public modificarVehiculo_result(modificarVehiculo_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
      if (other.isSetEbd()) {
        this.ebd = new ErrorBD(other.ebd);
      }
    }

    public modificarVehiculo_result deepCopy() {
      return new modificarVehiculo_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = false;
      this.ebd = null;
    }

    public boolean isSuccess() {
      return this.success;
    }

    public modificarVehiculo_result setSuccess(boolean success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    @org.apache.thrift.annotation.Nullable
    public ErrorBD getEbd() {
      return this.ebd;
    }

    public modificarVehiculo_result setEbd(@org.apache.thrift.annotation.Nullable ErrorBD ebd) {
      this.ebd = ebd;
      return this;
    }

    public void unsetEbd() {
      this.ebd = null;
    }

    /** Returns true if field ebd is set (has been assigned a value) and false otherwise */
    public boolean isSetEbd() {
      return this.ebd != null;
    }

    public void setEbdIsSet(boolean value) {
      if (!value) {
        this.ebd = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.Boolean)value);
        }
        break;

      case EBD:
        if (value == null) {
          unsetEbd();
        } else {
          setEbd((ErrorBD)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return isSuccess();

      case EBD:
        return getEbd();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case EBD:
        return isSetEbd();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof modificarVehiculo_result)
        return this.equals((modificarVehiculo_result)that);
      return false;
    }

    public boolean equals(modificarVehiculo_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      boolean this_present_ebd = true && this.isSetEbd();
      boolean that_present_ebd = true && that.isSetEbd();
      if (this_present_ebd || that_present_ebd) {
        if (!(this_present_ebd && that_present_ebd))
          return false;
        if (!this.ebd.equals(that.ebd))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((success) ? 131071 : 524287);

      hashCode = hashCode * 8191 + ((isSetEbd()) ? 131071 : 524287);
      if (isSetEbd())
        hashCode = hashCode * 8191 + ebd.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(modificarVehiculo_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEbd()).compareTo(other.isSetEbd());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEbd()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ebd, other.ebd);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("modificarVehiculo_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      if (!first) sb.append(", ");
      sb.append("ebd:");
      if (this.ebd == null) {
        sb.append("null");
      } else {
        sb.append(this.ebd);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class modificarVehiculo_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public modificarVehiculo_resultStandardScheme getScheme() {
        return new modificarVehiculo_resultStandardScheme();
      }
    }

    private static class modificarVehiculo_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<modificarVehiculo_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, modificarVehiculo_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.success = iprot.readBool();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // EBD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ebd = new ErrorBD();
                struct.ebd.read(iprot);
                struct.setEbdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, modificarVehiculo_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeBool(struct.success);
          oprot.writeFieldEnd();
        }
        if (struct.ebd != null) {
          oprot.writeFieldBegin(EBD_FIELD_DESC);
          struct.ebd.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class modificarVehiculo_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public modificarVehiculo_resultTupleScheme getScheme() {
        return new modificarVehiculo_resultTupleScheme();
      }
    }

    private static class modificarVehiculo_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<modificarVehiculo_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, modificarVehiculo_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetEbd()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          oprot.writeBool(struct.success);
        }
        if (struct.isSetEbd()) {
          struct.ebd.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, modificarVehiculo_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = iprot.readBool();
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ebd = new ErrorBD();
          struct.ebd.read(iprot);
          struct.setEbdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class deshabilitarVehiculo_args implements org.apache.thrift.TBase<deshabilitarVehiculo_args, deshabilitarVehiculo_args._Fields>, java.io.Serializable, Cloneable, Comparable<deshabilitarVehiculo_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deshabilitarVehiculo_args");

    private static final org.apache.thrift.protocol.TField NUM_PLACA_FIELD_DESC = new org.apache.thrift.protocol.TField("numPlaca", org.apache.thrift.protocol.TType.STRING, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new deshabilitarVehiculo_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new deshabilitarVehiculo_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String numPlaca; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      NUM_PLACA((short)1, "numPlaca");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // NUM_PLACA
            return NUM_PLACA;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.NUM_PLACA, new org.apache.thrift.meta_data.FieldMetaData("numPlaca", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deshabilitarVehiculo_args.class, metaDataMap);
    }

    public deshabilitarVehiculo_args() {
    }

    public deshabilitarVehiculo_args(
      java.lang.String numPlaca)
    {
      this();
      this.numPlaca = numPlaca;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deshabilitarVehiculo_args(deshabilitarVehiculo_args other) {
      if (other.isSetNumPlaca()) {
        this.numPlaca = other.numPlaca;
      }
    }

    public deshabilitarVehiculo_args deepCopy() {
      return new deshabilitarVehiculo_args(this);
    }

    @Override
    public void clear() {
      this.numPlaca = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getNumPlaca() {
      return this.numPlaca;
    }

    public deshabilitarVehiculo_args setNumPlaca(@org.apache.thrift.annotation.Nullable java.lang.String numPlaca) {
      this.numPlaca = numPlaca;
      return this;
    }

    public void unsetNumPlaca() {
      this.numPlaca = null;
    }

    /** Returns true if field numPlaca is set (has been assigned a value) and false otherwise */
    public boolean isSetNumPlaca() {
      return this.numPlaca != null;
    }

    public void setNumPlacaIsSet(boolean value) {
      if (!value) {
        this.numPlaca = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case NUM_PLACA:
        if (value == null) {
          unsetNumPlaca();
        } else {
          setNumPlaca((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case NUM_PLACA:
        return getNumPlaca();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case NUM_PLACA:
        return isSetNumPlaca();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof deshabilitarVehiculo_args)
        return this.equals((deshabilitarVehiculo_args)that);
      return false;
    }

    public boolean equals(deshabilitarVehiculo_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_numPlaca = true && this.isSetNumPlaca();
      boolean that_present_numPlaca = true && that.isSetNumPlaca();
      if (this_present_numPlaca || that_present_numPlaca) {
        if (!(this_present_numPlaca && that_present_numPlaca))
          return false;
        if (!this.numPlaca.equals(that.numPlaca))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetNumPlaca()) ? 131071 : 524287);
      if (isSetNumPlaca())
        hashCode = hashCode * 8191 + numPlaca.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(deshabilitarVehiculo_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetNumPlaca()).compareTo(other.isSetNumPlaca());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetNumPlaca()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numPlaca, other.numPlaca);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("deshabilitarVehiculo_args(");
      boolean first = true;

      sb.append("numPlaca:");
      if (this.numPlaca == null) {
        sb.append("null");
      } else {
        sb.append(this.numPlaca);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deshabilitarVehiculo_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public deshabilitarVehiculo_argsStandardScheme getScheme() {
        return new deshabilitarVehiculo_argsStandardScheme();
      }
    }

    private static class deshabilitarVehiculo_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<deshabilitarVehiculo_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deshabilitarVehiculo_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // NUM_PLACA
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.numPlaca = iprot.readString();
                struct.setNumPlacaIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deshabilitarVehiculo_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.numPlaca != null) {
          oprot.writeFieldBegin(NUM_PLACA_FIELD_DESC);
          oprot.writeString(struct.numPlaca);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deshabilitarVehiculo_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public deshabilitarVehiculo_argsTupleScheme getScheme() {
        return new deshabilitarVehiculo_argsTupleScheme();
      }
    }

    private static class deshabilitarVehiculo_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<deshabilitarVehiculo_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deshabilitarVehiculo_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetNumPlaca()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetNumPlaca()) {
          oprot.writeString(struct.numPlaca);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deshabilitarVehiculo_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.numPlaca = iprot.readString();
          struct.setNumPlacaIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class deshabilitarVehiculo_result implements org.apache.thrift.TBase<deshabilitarVehiculo_result, deshabilitarVehiculo_result._Fields>, java.io.Serializable, Cloneable, Comparable<deshabilitarVehiculo_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deshabilitarVehiculo_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.BOOL, (short)0);
    private static final org.apache.thrift.protocol.TField EBD_FIELD_DESC = new org.apache.thrift.protocol.TField("ebd", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new deshabilitarVehiculo_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new deshabilitarVehiculo_resultTupleSchemeFactory();

    public boolean success; // required
    public @org.apache.thrift.annotation.Nullable ErrorBD ebd; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      EBD((short)1, "ebd");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // EBD
            return EBD;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      tmpMap.put(_Fields.EBD, new org.apache.thrift.meta_data.FieldMetaData("ebd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ErrorBD.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deshabilitarVehiculo_result.class, metaDataMap);
    }

    public deshabilitarVehiculo_result() {
    }

    public deshabilitarVehiculo_result(
      boolean success,
      ErrorBD ebd)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
      this.ebd = ebd;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deshabilitarVehiculo_result(deshabilitarVehiculo_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
      if (other.isSetEbd()) {
        this.ebd = new ErrorBD(other.ebd);
      }
    }

    public deshabilitarVehiculo_result deepCopy() {
      return new deshabilitarVehiculo_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = false;
      this.ebd = null;
    }

    public boolean isSuccess() {
      return this.success;
    }

    public deshabilitarVehiculo_result setSuccess(boolean success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    @org.apache.thrift.annotation.Nullable
    public ErrorBD getEbd() {
      return this.ebd;
    }

    public deshabilitarVehiculo_result setEbd(@org.apache.thrift.annotation.Nullable ErrorBD ebd) {
      this.ebd = ebd;
      return this;
    }

    public void unsetEbd() {
      this.ebd = null;
    }

    /** Returns true if field ebd is set (has been assigned a value) and false otherwise */
    public boolean isSetEbd() {
      return this.ebd != null;
    }

    public void setEbdIsSet(boolean value) {
      if (!value) {
        this.ebd = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.Boolean)value);
        }
        break;

      case EBD:
        if (value == null) {
          unsetEbd();
        } else {
          setEbd((ErrorBD)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return isSuccess();

      case EBD:
        return getEbd();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case EBD:
        return isSetEbd();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof deshabilitarVehiculo_result)
        return this.equals((deshabilitarVehiculo_result)that);
      return false;
    }

    public boolean equals(deshabilitarVehiculo_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      boolean this_present_ebd = true && this.isSetEbd();
      boolean that_present_ebd = true && that.isSetEbd();
      if (this_present_ebd || that_present_ebd) {
        if (!(this_present_ebd && that_present_ebd))
          return false;
        if (!this.ebd.equals(that.ebd))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((success) ? 131071 : 524287);

      hashCode = hashCode * 8191 + ((isSetEbd()) ? 131071 : 524287);
      if (isSetEbd())
        hashCode = hashCode * 8191 + ebd.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(deshabilitarVehiculo_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEbd()).compareTo(other.isSetEbd());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEbd()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ebd, other.ebd);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("deshabilitarVehiculo_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      if (!first) sb.append(", ");
      sb.append("ebd:");
      if (this.ebd == null) {
        sb.append("null");
      } else {
        sb.append(this.ebd);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deshabilitarVehiculo_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public deshabilitarVehiculo_resultStandardScheme getScheme() {
        return new deshabilitarVehiculo_resultStandardScheme();
      }
    }

    private static class deshabilitarVehiculo_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<deshabilitarVehiculo_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deshabilitarVehiculo_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.success = iprot.readBool();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // EBD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ebd = new ErrorBD();
                struct.ebd.read(iprot);
                struct.setEbdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deshabilitarVehiculo_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeBool(struct.success);
          oprot.writeFieldEnd();
        }
        if (struct.ebd != null) {
          oprot.writeFieldBegin(EBD_FIELD_DESC);
          struct.ebd.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deshabilitarVehiculo_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public deshabilitarVehiculo_resultTupleScheme getScheme() {
        return new deshabilitarVehiculo_resultTupleScheme();
      }
    }

    private static class deshabilitarVehiculo_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<deshabilitarVehiculo_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deshabilitarVehiculo_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetEbd()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          oprot.writeBool(struct.success);
        }
        if (struct.isSetEbd()) {
          struct.ebd.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deshabilitarVehiculo_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = iprot.readBool();
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ebd = new ErrorBD();
          struct.ebd.read(iprot);
          struct.setEbdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class consultarVehiculoPropio_args implements org.apache.thrift.TBase<consultarVehiculoPropio_args, consultarVehiculoPropio_args._Fields>, java.io.Serializable, Cloneable, Comparable<consultarVehiculoPropio_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("consultarVehiculoPropio_args");

    private static final org.apache.thrift.protocol.TField TELEFONO_FIELD_DESC = new org.apache.thrift.protocol.TField("telefono", org.apache.thrift.protocol.TType.I64, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new consultarVehiculoPropio_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new consultarVehiculoPropio_argsTupleSchemeFactory();

    public long telefono; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      TELEFONO((short)1, "telefono");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // TELEFONO
            return TELEFONO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __TELEFONO_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.TELEFONO, new org.apache.thrift.meta_data.FieldMetaData("telefono", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(consultarVehiculoPropio_args.class, metaDataMap);
    }

    public consultarVehiculoPropio_args() {
    }

    public consultarVehiculoPropio_args(
      long telefono)
    {
      this();
      this.telefono = telefono;
      setTelefonoIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public consultarVehiculoPropio_args(consultarVehiculoPropio_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.telefono = other.telefono;
    }

    public consultarVehiculoPropio_args deepCopy() {
      return new consultarVehiculoPropio_args(this);
    }

    @Override
    public void clear() {
      setTelefonoIsSet(false);
      this.telefono = 0;
    }

    public long getTelefono() {
      return this.telefono;
    }

    public consultarVehiculoPropio_args setTelefono(long telefono) {
      this.telefono = telefono;
      setTelefonoIsSet(true);
      return this;
    }

    public void unsetTelefono() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TELEFONO_ISSET_ID);
    }

    /** Returns true if field telefono is set (has been assigned a value) and false otherwise */
    public boolean isSetTelefono() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TELEFONO_ISSET_ID);
    }

    public void setTelefonoIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TELEFONO_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case TELEFONO:
        if (value == null) {
          unsetTelefono();
        } else {
          setTelefono((java.lang.Long)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case TELEFONO:
        return getTelefono();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case TELEFONO:
        return isSetTelefono();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof consultarVehiculoPropio_args)
        return this.equals((consultarVehiculoPropio_args)that);
      return false;
    }

    public boolean equals(consultarVehiculoPropio_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_telefono = true;
      boolean that_present_telefono = true;
      if (this_present_telefono || that_present_telefono) {
        if (!(this_present_telefono && that_present_telefono))
          return false;
        if (this.telefono != that.telefono)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(telefono);

      return hashCode;
    }

    @Override
    public int compareTo(consultarVehiculoPropio_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetTelefono()).compareTo(other.isSetTelefono());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTelefono()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telefono, other.telefono);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("consultarVehiculoPropio_args(");
      boolean first = true;

      sb.append("telefono:");
      sb.append(this.telefono);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class consultarVehiculoPropio_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarVehiculoPropio_argsStandardScheme getScheme() {
        return new consultarVehiculoPropio_argsStandardScheme();
      }
    }

    private static class consultarVehiculoPropio_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<consultarVehiculoPropio_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, consultarVehiculoPropio_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // TELEFONO
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.telefono = iprot.readI64();
                struct.setTelefonoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, consultarVehiculoPropio_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(TELEFONO_FIELD_DESC);
        oprot.writeI64(struct.telefono);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class consultarVehiculoPropio_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarVehiculoPropio_argsTupleScheme getScheme() {
        return new consultarVehiculoPropio_argsTupleScheme();
      }
    }

    private static class consultarVehiculoPropio_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<consultarVehiculoPropio_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, consultarVehiculoPropio_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetTelefono()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetTelefono()) {
          oprot.writeI64(struct.telefono);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, consultarVehiculoPropio_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.telefono = iprot.readI64();
          struct.setTelefonoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class consultarVehiculoPropio_result implements org.apache.thrift.TBase<consultarVehiculoPropio_result, consultarVehiculoPropio_result._Fields>, java.io.Serializable, Cloneable, Comparable<consultarVehiculoPropio_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("consultarVehiculoPropio_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
    private static final org.apache.thrift.protocol.TField EBD_FIELD_DESC = new org.apache.thrift.protocol.TField("ebd", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new consultarVehiculoPropio_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new consultarVehiculoPropio_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.util.List<Vehiculo> success; // required
    public @org.apache.thrift.annotation.Nullable ErrorBD ebd; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      EBD((short)1, "ebd");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // EBD
            return EBD;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Vehiculo.class))));
      tmpMap.put(_Fields.EBD, new org.apache.thrift.meta_data.FieldMetaData("ebd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ErrorBD.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(consultarVehiculoPropio_result.class, metaDataMap);
    }

    public consultarVehiculoPropio_result() {
    }

    public consultarVehiculoPropio_result(
      java.util.List<Vehiculo> success,
      ErrorBD ebd)
    {
      this();
      this.success = success;
      this.ebd = ebd;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public consultarVehiculoPropio_result(consultarVehiculoPropio_result other) {
      if (other.isSetSuccess()) {
        java.util.List<Vehiculo> __this__success = new java.util.ArrayList<Vehiculo>(other.success.size());
        for (Vehiculo other_element : other.success) {
          __this__success.add(new Vehiculo(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetEbd()) {
        this.ebd = new ErrorBD(other.ebd);
      }
    }

    public consultarVehiculoPropio_result deepCopy() {
      return new consultarVehiculoPropio_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.ebd = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<Vehiculo> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(Vehiculo elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<Vehiculo>();
      }
      this.success.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.List<Vehiculo> getSuccess() {
      return this.success;
    }

    public consultarVehiculoPropio_result setSuccess(@org.apache.thrift.annotation.Nullable java.util.List<Vehiculo> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public ErrorBD getEbd() {
      return this.ebd;
    }

    public consultarVehiculoPropio_result setEbd(@org.apache.thrift.annotation.Nullable ErrorBD ebd) {
      this.ebd = ebd;
      return this;
    }

    public void unsetEbd() {
      this.ebd = null;
    }

    /** Returns true if field ebd is set (has been assigned a value) and false otherwise */
    public boolean isSetEbd() {
      return this.ebd != null;
    }

    public void setEbdIsSet(boolean value) {
      if (!value) {
        this.ebd = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<Vehiculo>)value);
        }
        break;

      case EBD:
        if (value == null) {
          unsetEbd();
        } else {
          setEbd((ErrorBD)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case EBD:
        return getEbd();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case EBD:
        return isSetEbd();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof consultarVehiculoPropio_result)
        return this.equals((consultarVehiculoPropio_result)that);
      return false;
    }

    public boolean equals(consultarVehiculoPropio_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_ebd = true && this.isSetEbd();
      boolean that_present_ebd = true && that.isSetEbd();
      if (this_present_ebd || that_present_ebd) {
        if (!(this_present_ebd && that_present_ebd))
          return false;
        if (!this.ebd.equals(that.ebd))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetEbd()) ? 131071 : 524287);
      if (isSetEbd())
        hashCode = hashCode * 8191 + ebd.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(consultarVehiculoPropio_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEbd()).compareTo(other.isSetEbd());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEbd()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ebd, other.ebd);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("consultarVehiculoPropio_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("ebd:");
      if (this.ebd == null) {
        sb.append("null");
      } else {
        sb.append(this.ebd);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class consultarVehiculoPropio_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarVehiculoPropio_resultStandardScheme getScheme() {
        return new consultarVehiculoPropio_resultStandardScheme();
      }
    }

    private static class consultarVehiculoPropio_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<consultarVehiculoPropio_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, consultarVehiculoPropio_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<Vehiculo>(_list0.size);
                  @org.apache.thrift.annotation.Nullable Vehiculo _elem1;
                  for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                  {
                    _elem1 = new Vehiculo();
                    _elem1.read(iprot);
                    struct.success.add(_elem1);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // EBD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ebd = new ErrorBD();
                struct.ebd.read(iprot);
                struct.setEbdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, consultarVehiculoPropio_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (Vehiculo _iter3 : struct.success)
            {
              _iter3.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.ebd != null) {
          oprot.writeFieldBegin(EBD_FIELD_DESC);
          struct.ebd.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class consultarVehiculoPropio_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarVehiculoPropio_resultTupleScheme getScheme() {
        return new consultarVehiculoPropio_resultTupleScheme();
      }
    }

    private static class consultarVehiculoPropio_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<consultarVehiculoPropio_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, consultarVehiculoPropio_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetEbd()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (Vehiculo _iter4 : struct.success)
            {
              _iter4.write(oprot);
            }
          }
        }
        if (struct.isSetEbd()) {
          struct.ebd.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, consultarVehiculoPropio_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.ArrayList<Vehiculo>(_list5.size);
            @org.apache.thrift.annotation.Nullable Vehiculo _elem6;
            for (int _i7 = 0; _i7 < _list5.size; ++_i7)
            {
              _elem6 = new Vehiculo();
              _elem6.read(iprot);
              struct.success.add(_elem6);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ebd = new ErrorBD();
          struct.ebd.read(iprot);
          struct.setEbdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class consultarVehiculoInfo_args implements org.apache.thrift.TBase<consultarVehiculoInfo_args, consultarVehiculoInfo_args._Fields>, java.io.Serializable, Cloneable, Comparable<consultarVehiculoInfo_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("consultarVehiculoInfo_args");

    private static final org.apache.thrift.protocol.TField NUM_PLACA_FIELD_DESC = new org.apache.thrift.protocol.TField("numPlaca", org.apache.thrift.protocol.TType.STRING, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new consultarVehiculoInfo_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new consultarVehiculoInfo_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String numPlaca; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      NUM_PLACA((short)1, "numPlaca");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // NUM_PLACA
            return NUM_PLACA;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.NUM_PLACA, new org.apache.thrift.meta_data.FieldMetaData("numPlaca", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(consultarVehiculoInfo_args.class, metaDataMap);
    }

    public consultarVehiculoInfo_args() {
    }

    public consultarVehiculoInfo_args(
      java.lang.String numPlaca)
    {
      this();
      this.numPlaca = numPlaca;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public consultarVehiculoInfo_args(consultarVehiculoInfo_args other) {
      if (other.isSetNumPlaca()) {
        this.numPlaca = other.numPlaca;
      }
    }

    public consultarVehiculoInfo_args deepCopy() {
      return new consultarVehiculoInfo_args(this);
    }

    @Override
    public void clear() {
      this.numPlaca = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getNumPlaca() {
      return this.numPlaca;
    }

    public consultarVehiculoInfo_args setNumPlaca(@org.apache.thrift.annotation.Nullable java.lang.String numPlaca) {
      this.numPlaca = numPlaca;
      return this;
    }

    public void unsetNumPlaca() {
      this.numPlaca = null;
    }

    /** Returns true if field numPlaca is set (has been assigned a value) and false otherwise */
    public boolean isSetNumPlaca() {
      return this.numPlaca != null;
    }

    public void setNumPlacaIsSet(boolean value) {
      if (!value) {
        this.numPlaca = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case NUM_PLACA:
        if (value == null) {
          unsetNumPlaca();
        } else {
          setNumPlaca((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case NUM_PLACA:
        return getNumPlaca();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case NUM_PLACA:
        return isSetNumPlaca();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof consultarVehiculoInfo_args)
        return this.equals((consultarVehiculoInfo_args)that);
      return false;
    }

    public boolean equals(consultarVehiculoInfo_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_numPlaca = true && this.isSetNumPlaca();
      boolean that_present_numPlaca = true && that.isSetNumPlaca();
      if (this_present_numPlaca || that_present_numPlaca) {
        if (!(this_present_numPlaca && that_present_numPlaca))
          return false;
        if (!this.numPlaca.equals(that.numPlaca))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetNumPlaca()) ? 131071 : 524287);
      if (isSetNumPlaca())
        hashCode = hashCode * 8191 + numPlaca.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(consultarVehiculoInfo_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetNumPlaca()).compareTo(other.isSetNumPlaca());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetNumPlaca()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numPlaca, other.numPlaca);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("consultarVehiculoInfo_args(");
      boolean first = true;

      sb.append("numPlaca:");
      if (this.numPlaca == null) {
        sb.append("null");
      } else {
        sb.append(this.numPlaca);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class consultarVehiculoInfo_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarVehiculoInfo_argsStandardScheme getScheme() {
        return new consultarVehiculoInfo_argsStandardScheme();
      }
    }

    private static class consultarVehiculoInfo_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<consultarVehiculoInfo_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, consultarVehiculoInfo_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // NUM_PLACA
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.numPlaca = iprot.readString();
                struct.setNumPlacaIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, consultarVehiculoInfo_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.numPlaca != null) {
          oprot.writeFieldBegin(NUM_PLACA_FIELD_DESC);
          oprot.writeString(struct.numPlaca);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class consultarVehiculoInfo_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarVehiculoInfo_argsTupleScheme getScheme() {
        return new consultarVehiculoInfo_argsTupleScheme();
      }
    }

    private static class consultarVehiculoInfo_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<consultarVehiculoInfo_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, consultarVehiculoInfo_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetNumPlaca()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetNumPlaca()) {
          oprot.writeString(struct.numPlaca);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, consultarVehiculoInfo_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.numPlaca = iprot.readString();
          struct.setNumPlacaIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class consultarVehiculoInfo_result implements org.apache.thrift.TBase<consultarVehiculoInfo_result, consultarVehiculoInfo_result._Fields>, java.io.Serializable, Cloneable, Comparable<consultarVehiculoInfo_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("consultarVehiculoInfo_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
    private static final org.apache.thrift.protocol.TField EBD_FIELD_DESC = new org.apache.thrift.protocol.TField("ebd", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new consultarVehiculoInfo_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new consultarVehiculoInfo_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable Vehiculo success; // required
    public @org.apache.thrift.annotation.Nullable ErrorBD ebd; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      EBD((short)1, "ebd");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // EBD
            return EBD;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Vehiculo.class)));
      tmpMap.put(_Fields.EBD, new org.apache.thrift.meta_data.FieldMetaData("ebd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ErrorBD.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(consultarVehiculoInfo_result.class, metaDataMap);
    }

    public consultarVehiculoInfo_result() {
    }

    public consultarVehiculoInfo_result(
      Vehiculo success,
      ErrorBD ebd)
    {
      this();
      this.success = success;
      this.ebd = ebd;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public consultarVehiculoInfo_result(consultarVehiculoInfo_result other) {
      if (other.isSetSuccess()) {
        this.success = new Vehiculo(other.success);
      }
      if (other.isSetEbd()) {
        this.ebd = new ErrorBD(other.ebd);
      }
    }

    public consultarVehiculoInfo_result deepCopy() {
      return new consultarVehiculoInfo_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.ebd = null;
    }

    @org.apache.thrift.annotation.Nullable
    public Vehiculo getSuccess() {
      return this.success;
    }

    public consultarVehiculoInfo_result setSuccess(@org.apache.thrift.annotation.Nullable Vehiculo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public ErrorBD getEbd() {
      return this.ebd;
    }

    public consultarVehiculoInfo_result setEbd(@org.apache.thrift.annotation.Nullable ErrorBD ebd) {
      this.ebd = ebd;
      return this;
    }

    public void unsetEbd() {
      this.ebd = null;
    }

    /** Returns true if field ebd is set (has been assigned a value) and false otherwise */
    public boolean isSetEbd() {
      return this.ebd != null;
    }

    public void setEbdIsSet(boolean value) {
      if (!value) {
        this.ebd = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Vehiculo)value);
        }
        break;

      case EBD:
        if (value == null) {
          unsetEbd();
        } else {
          setEbd((ErrorBD)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case EBD:
        return getEbd();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case EBD:
        return isSetEbd();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof consultarVehiculoInfo_result)
        return this.equals((consultarVehiculoInfo_result)that);
      return false;
    }

    public boolean equals(consultarVehiculoInfo_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_ebd = true && this.isSetEbd();
      boolean that_present_ebd = true && that.isSetEbd();
      if (this_present_ebd || that_present_ebd) {
        if (!(this_present_ebd && that_present_ebd))
          return false;
        if (!this.ebd.equals(that.ebd))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetEbd()) ? 131071 : 524287);
      if (isSetEbd())
        hashCode = hashCode * 8191 + ebd.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(consultarVehiculoInfo_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEbd()).compareTo(other.isSetEbd());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEbd()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ebd, other.ebd);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("consultarVehiculoInfo_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("ebd:");
      if (this.ebd == null) {
        sb.append("null");
      } else {
        sb.append(this.ebd);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class consultarVehiculoInfo_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarVehiculoInfo_resultStandardScheme getScheme() {
        return new consultarVehiculoInfo_resultStandardScheme();
      }
    }

    private static class consultarVehiculoInfo_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<consultarVehiculoInfo_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, consultarVehiculoInfo_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new Vehiculo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // EBD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ebd = new ErrorBD();
                struct.ebd.read(iprot);
                struct.setEbdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, consultarVehiculoInfo_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.ebd != null) {
          oprot.writeFieldBegin(EBD_FIELD_DESC);
          struct.ebd.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class consultarVehiculoInfo_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarVehiculoInfo_resultTupleScheme getScheme() {
        return new consultarVehiculoInfo_resultTupleScheme();
      }
    }

    private static class consultarVehiculoInfo_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<consultarVehiculoInfo_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, consultarVehiculoInfo_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetEbd()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
        if (struct.isSetEbd()) {
          struct.ebd.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, consultarVehiculoInfo_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = new Vehiculo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ebd = new ErrorBD();
          struct.ebd.read(iprot);
          struct.setEbdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class registrarReporte_args implements org.apache.thrift.TBase<registrarReporte_args, registrarReporte_args._Fields>, java.io.Serializable, Cloneable, Comparable<registrarReporte_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("registrarReporte_args");

    private static final org.apache.thrift.protocol.TField REPORTE_FIELD_DESC = new org.apache.thrift.protocol.TField("reporte", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField TELEFONO_FIELD_DESC = new org.apache.thrift.protocol.TField("telefono", org.apache.thrift.protocol.TType.I64, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new registrarReporte_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new registrarReporte_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable Reporte reporte; // required
    public long telefono; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REPORTE((short)1, "reporte"),
      TELEFONO((short)2, "telefono");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REPORTE
            return REPORTE;
          case 2: // TELEFONO
            return TELEFONO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __TELEFONO_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REPORTE, new org.apache.thrift.meta_data.FieldMetaData("reporte", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Reporte.class)));
      tmpMap.put(_Fields.TELEFONO, new org.apache.thrift.meta_data.FieldMetaData("telefono", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(registrarReporte_args.class, metaDataMap);
    }

    public registrarReporte_args() {
    }

    public registrarReporte_args(
      Reporte reporte,
      long telefono)
    {
      this();
      this.reporte = reporte;
      this.telefono = telefono;
      setTelefonoIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public registrarReporte_args(registrarReporte_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetReporte()) {
        this.reporte = new Reporte(other.reporte);
      }
      this.telefono = other.telefono;
    }

    public registrarReporte_args deepCopy() {
      return new registrarReporte_args(this);
    }

    @Override
    public void clear() {
      this.reporte = null;
      setTelefonoIsSet(false);
      this.telefono = 0;
    }

    @org.apache.thrift.annotation.Nullable
    public Reporte getReporte() {
      return this.reporte;
    }

    public registrarReporte_args setReporte(@org.apache.thrift.annotation.Nullable Reporte reporte) {
      this.reporte = reporte;
      return this;
    }

    public void unsetReporte() {
      this.reporte = null;
    }

    /** Returns true if field reporte is set (has been assigned a value) and false otherwise */
    public boolean isSetReporte() {
      return this.reporte != null;
    }

    public void setReporteIsSet(boolean value) {
      if (!value) {
        this.reporte = null;
      }
    }

    public long getTelefono() {
      return this.telefono;
    }

    public registrarReporte_args setTelefono(long telefono) {
      this.telefono = telefono;
      setTelefonoIsSet(true);
      return this;
    }

    public void unsetTelefono() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TELEFONO_ISSET_ID);
    }

    /** Returns true if field telefono is set (has been assigned a value) and false otherwise */
    public boolean isSetTelefono() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TELEFONO_ISSET_ID);
    }

    public void setTelefonoIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TELEFONO_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case REPORTE:
        if (value == null) {
          unsetReporte();
        } else {
          setReporte((Reporte)value);
        }
        break;

      case TELEFONO:
        if (value == null) {
          unsetTelefono();
        } else {
          setTelefono((java.lang.Long)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case REPORTE:
        return getReporte();

      case TELEFONO:
        return getTelefono();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case REPORTE:
        return isSetReporte();
      case TELEFONO:
        return isSetTelefono();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof registrarReporte_args)
        return this.equals((registrarReporte_args)that);
      return false;
    }

    public boolean equals(registrarReporte_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_reporte = true && this.isSetReporte();
      boolean that_present_reporte = true && that.isSetReporte();
      if (this_present_reporte || that_present_reporte) {
        if (!(this_present_reporte && that_present_reporte))
          return false;
        if (!this.reporte.equals(that.reporte))
          return false;
      }

      boolean this_present_telefono = true;
      boolean that_present_telefono = true;
      if (this_present_telefono || that_present_telefono) {
        if (!(this_present_telefono && that_present_telefono))
          return false;
        if (this.telefono != that.telefono)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetReporte()) ? 131071 : 524287);
      if (isSetReporte())
        hashCode = hashCode * 8191 + reporte.hashCode();

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(telefono);

      return hashCode;
    }

    @Override
    public int compareTo(registrarReporte_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetReporte()).compareTo(other.isSetReporte());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetReporte()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reporte, other.reporte);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetTelefono()).compareTo(other.isSetTelefono());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTelefono()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telefono, other.telefono);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("registrarReporte_args(");
      boolean first = true;

      sb.append("reporte:");
      if (this.reporte == null) {
        sb.append("null");
      } else {
        sb.append(this.reporte);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("telefono:");
      sb.append(this.telefono);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (reporte != null) {
        reporte.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class registrarReporte_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarReporte_argsStandardScheme getScheme() {
        return new registrarReporte_argsStandardScheme();
      }
    }

    private static class registrarReporte_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<registrarReporte_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, registrarReporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REPORTE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.reporte = new Reporte();
                struct.reporte.read(iprot);
                struct.setReporteIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // TELEFONO
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.telefono = iprot.readI64();
                struct.setTelefonoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, registrarReporte_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.reporte != null) {
          oprot.writeFieldBegin(REPORTE_FIELD_DESC);
          struct.reporte.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(TELEFONO_FIELD_DESC);
        oprot.writeI64(struct.telefono);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class registrarReporte_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarReporte_argsTupleScheme getScheme() {
        return new registrarReporte_argsTupleScheme();
      }
    }

    private static class registrarReporte_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<registrarReporte_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, registrarReporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetReporte()) {
          optionals.set(0);
        }
        if (struct.isSetTelefono()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetReporte()) {
          struct.reporte.write(oprot);
        }
        if (struct.isSetTelefono()) {
          oprot.writeI64(struct.telefono);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, registrarReporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.reporte = new Reporte();
          struct.reporte.read(iprot);
          struct.setReporteIsSet(true);
        }
        if (incoming.get(1)) {
          struct.telefono = iprot.readI64();
          struct.setTelefonoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class registrarReporte_result implements org.apache.thrift.TBase<registrarReporte_result, registrarReporte_result._Fields>, java.io.Serializable, Cloneable, Comparable<registrarReporte_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("registrarReporte_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.BOOL, (short)0);
    private static final org.apache.thrift.protocol.TField EBD_FIELD_DESC = new org.apache.thrift.protocol.TField("ebd", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new registrarReporte_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new registrarReporte_resultTupleSchemeFactory();

    public boolean success; // required
    public @org.apache.thrift.annotation.Nullable ErrorBD ebd; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      EBD((short)1, "ebd");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // EBD
            return EBD;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      tmpMap.put(_Fields.EBD, new org.apache.thrift.meta_data.FieldMetaData("ebd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ErrorBD.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(registrarReporte_result.class, metaDataMap);
    }

    public registrarReporte_result() {
    }

    public registrarReporte_result(
      boolean success,
      ErrorBD ebd)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
      this.ebd = ebd;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public registrarReporte_result(registrarReporte_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
      if (other.isSetEbd()) {
        this.ebd = new ErrorBD(other.ebd);
      }
    }

    public registrarReporte_result deepCopy() {
      return new registrarReporte_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = false;
      this.ebd = null;
    }

    public boolean isSuccess() {
      return this.success;
    }

    public registrarReporte_result setSuccess(boolean success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    @org.apache.thrift.annotation.Nullable
    public ErrorBD getEbd() {
      return this.ebd;
    }

    public registrarReporte_result setEbd(@org.apache.thrift.annotation.Nullable ErrorBD ebd) {
      this.ebd = ebd;
      return this;
    }

    public void unsetEbd() {
      this.ebd = null;
    }

    /** Returns true if field ebd is set (has been assigned a value) and false otherwise */
    public boolean isSetEbd() {
      return this.ebd != null;
    }

    public void setEbdIsSet(boolean value) {
      if (!value) {
        this.ebd = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.Boolean)value);
        }
        break;

      case EBD:
        if (value == null) {
          unsetEbd();
        } else {
          setEbd((ErrorBD)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return isSuccess();

      case EBD:
        return getEbd();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case EBD:
        return isSetEbd();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof registrarReporte_result)
        return this.equals((registrarReporte_result)that);
      return false;
    }

    public boolean equals(registrarReporte_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      boolean this_present_ebd = true && this.isSetEbd();
      boolean that_present_ebd = true && that.isSetEbd();
      if (this_present_ebd || that_present_ebd) {
        if (!(this_present_ebd && that_present_ebd))
          return false;
        if (!this.ebd.equals(that.ebd))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((success) ? 131071 : 524287);

      hashCode = hashCode * 8191 + ((isSetEbd()) ? 131071 : 524287);
      if (isSetEbd())
        hashCode = hashCode * 8191 + ebd.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(registrarReporte_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEbd()).compareTo(other.isSetEbd());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEbd()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ebd, other.ebd);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("registrarReporte_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      if (!first) sb.append(", ");
      sb.append("ebd:");
      if (this.ebd == null) {
        sb.append("null");
      } else {
        sb.append(this.ebd);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class registrarReporte_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarReporte_resultStandardScheme getScheme() {
        return new registrarReporte_resultStandardScheme();
      }
    }

    private static class registrarReporte_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<registrarReporte_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, registrarReporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.success = iprot.readBool();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // EBD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ebd = new ErrorBD();
                struct.ebd.read(iprot);
                struct.setEbdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, registrarReporte_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeBool(struct.success);
          oprot.writeFieldEnd();
        }
        if (struct.ebd != null) {
          oprot.writeFieldBegin(EBD_FIELD_DESC);
          struct.ebd.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class registrarReporte_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarReporte_resultTupleScheme getScheme() {
        return new registrarReporte_resultTupleScheme();
      }
    }

    private static class registrarReporte_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<registrarReporte_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, registrarReporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetEbd()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          oprot.writeBool(struct.success);
        }
        if (struct.isSetEbd()) {
          struct.ebd.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, registrarReporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = iprot.readBool();
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ebd = new ErrorBD();
          struct.ebd.read(iprot);
          struct.setEbdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class registrarFotografia_args implements org.apache.thrift.TBase<registrarFotografia_args, registrarFotografia_args._Fields>, java.io.Serializable, Cloneable, Comparable<registrarFotografia_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("registrarFotografia_args");

    private static final org.apache.thrift.protocol.TField FOTOGRAFIAS_FIELD_DESC = new org.apache.thrift.protocol.TField("fotografias", org.apache.thrift.protocol.TType.LIST, (short)1);
    private static final org.apache.thrift.protocol.TField TELEFONO_FIELD_DESC = new org.apache.thrift.protocol.TField("telefono", org.apache.thrift.protocol.TType.I64, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new registrarFotografia_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new registrarFotografia_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> fotografias; // required
    public long telefono; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      FOTOGRAFIAS((short)1, "fotografias"),
      TELEFONO((short)2, "telefono");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // FOTOGRAFIAS
            return FOTOGRAFIAS;
          case 2: // TELEFONO
            return TELEFONO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __TELEFONO_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.FOTOGRAFIAS, new org.apache.thrift.meta_data.FieldMetaData("fotografias", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
      tmpMap.put(_Fields.TELEFONO, new org.apache.thrift.meta_data.FieldMetaData("telefono", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(registrarFotografia_args.class, metaDataMap);
    }

    public registrarFotografia_args() {
    }

    public registrarFotografia_args(
      java.util.List<java.lang.String> fotografias,
      long telefono)
    {
      this();
      this.fotografias = fotografias;
      this.telefono = telefono;
      setTelefonoIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public registrarFotografia_args(registrarFotografia_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetFotografias()) {
        java.util.List<java.lang.String> __this__fotografias = new java.util.ArrayList<java.lang.String>(other.fotografias);
        this.fotografias = __this__fotografias;
      }
      this.telefono = other.telefono;
    }

    public registrarFotografia_args deepCopy() {
      return new registrarFotografia_args(this);
    }

    @Override
    public void clear() {
      this.fotografias = null;
      setTelefonoIsSet(false);
      this.telefono = 0;
    }

    public int getFotografiasSize() {
      return (this.fotografias == null) ? 0 : this.fotografias.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<java.lang.String> getFotografiasIterator() {
      return (this.fotografias == null) ? null : this.fotografias.iterator();
    }

    public void addToFotografias(java.lang.String elem) {
      if (this.fotografias == null) {
        this.fotografias = new java.util.ArrayList<java.lang.String>();
      }
      this.fotografias.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.List<java.lang.String> getFotografias() {
      return this.fotografias;
    }

    public registrarFotografia_args setFotografias(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> fotografias) {
      this.fotografias = fotografias;
      return this;
    }

    public void unsetFotografias() {
      this.fotografias = null;
    }

    /** Returns true if field fotografias is set (has been assigned a value) and false otherwise */
    public boolean isSetFotografias() {
      return this.fotografias != null;
    }

    public void setFotografiasIsSet(boolean value) {
      if (!value) {
        this.fotografias = null;
      }
    }

    public long getTelefono() {
      return this.telefono;
    }

    public registrarFotografia_args setTelefono(long telefono) {
      this.telefono = telefono;
      setTelefonoIsSet(true);
      return this;
    }

    public void unsetTelefono() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TELEFONO_ISSET_ID);
    }

    /** Returns true if field telefono is set (has been assigned a value) and false otherwise */
    public boolean isSetTelefono() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TELEFONO_ISSET_ID);
    }

    public void setTelefonoIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TELEFONO_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case FOTOGRAFIAS:
        if (value == null) {
          unsetFotografias();
        } else {
          setFotografias((java.util.List<java.lang.String>)value);
        }
        break;

      case TELEFONO:
        if (value == null) {
          unsetTelefono();
        } else {
          setTelefono((java.lang.Long)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case FOTOGRAFIAS:
        return getFotografias();

      case TELEFONO:
        return getTelefono();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case FOTOGRAFIAS:
        return isSetFotografias();
      case TELEFONO:
        return isSetTelefono();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof registrarFotografia_args)
        return this.equals((registrarFotografia_args)that);
      return false;
    }

    public boolean equals(registrarFotografia_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_fotografias = true && this.isSetFotografias();
      boolean that_present_fotografias = true && that.isSetFotografias();
      if (this_present_fotografias || that_present_fotografias) {
        if (!(this_present_fotografias && that_present_fotografias))
          return false;
        if (!this.fotografias.equals(that.fotografias))
          return false;
      }

      boolean this_present_telefono = true;
      boolean that_present_telefono = true;
      if (this_present_telefono || that_present_telefono) {
        if (!(this_present_telefono && that_present_telefono))
          return false;
        if (this.telefono != that.telefono)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetFotografias()) ? 131071 : 524287);
      if (isSetFotografias())
        hashCode = hashCode * 8191 + fotografias.hashCode();

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(telefono);

      return hashCode;
    }

    @Override
    public int compareTo(registrarFotografia_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetFotografias()).compareTo(other.isSetFotografias());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFotografias()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fotografias, other.fotografias);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetTelefono()).compareTo(other.isSetTelefono());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTelefono()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telefono, other.telefono);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("registrarFotografia_args(");
      boolean first = true;

      sb.append("fotografias:");
      if (this.fotografias == null) {
        sb.append("null");
      } else {
        sb.append(this.fotografias);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("telefono:");
      sb.append(this.telefono);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class registrarFotografia_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarFotografia_argsStandardScheme getScheme() {
        return new registrarFotografia_argsStandardScheme();
      }
    }

    private static class registrarFotografia_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<registrarFotografia_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, registrarFotografia_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // FOTOGRAFIAS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                  struct.fotografias = new java.util.ArrayList<java.lang.String>(_list8.size);
                  @org.apache.thrift.annotation.Nullable java.lang.String _elem9;
                  for (int _i10 = 0; _i10 < _list8.size; ++_i10)
                  {
                    _elem9 = iprot.readString();
                    struct.fotografias.add(_elem9);
                  }
                  iprot.readListEnd();
                }
                struct.setFotografiasIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // TELEFONO
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.telefono = iprot.readI64();
                struct.setTelefonoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, registrarFotografia_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.fotografias != null) {
          oprot.writeFieldBegin(FOTOGRAFIAS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.fotografias.size()));
            for (java.lang.String _iter11 : struct.fotografias)
            {
              oprot.writeString(_iter11);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(TELEFONO_FIELD_DESC);
        oprot.writeI64(struct.telefono);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class registrarFotografia_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarFotografia_argsTupleScheme getScheme() {
        return new registrarFotografia_argsTupleScheme();
      }
    }

    private static class registrarFotografia_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<registrarFotografia_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, registrarFotografia_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetFotografias()) {
          optionals.set(0);
        }
        if (struct.isSetTelefono()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetFotografias()) {
          {
            oprot.writeI32(struct.fotografias.size());
            for (java.lang.String _iter12 : struct.fotografias)
            {
              oprot.writeString(_iter12);
            }
          }
        }
        if (struct.isSetTelefono()) {
          oprot.writeI64(struct.telefono);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, registrarFotografia_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
            struct.fotografias = new java.util.ArrayList<java.lang.String>(_list13.size);
            @org.apache.thrift.annotation.Nullable java.lang.String _elem14;
            for (int _i15 = 0; _i15 < _list13.size; ++_i15)
            {
              _elem14 = iprot.readString();
              struct.fotografias.add(_elem14);
            }
          }
          struct.setFotografiasIsSet(true);
        }
        if (incoming.get(1)) {
          struct.telefono = iprot.readI64();
          struct.setTelefonoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class registrarFotografia_result implements org.apache.thrift.TBase<registrarFotografia_result, registrarFotografia_result._Fields>, java.io.Serializable, Cloneable, Comparable<registrarFotografia_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("registrarFotografia_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.BOOL, (short)0);
    private static final org.apache.thrift.protocol.TField EBD_FIELD_DESC = new org.apache.thrift.protocol.TField("ebd", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new registrarFotografia_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new registrarFotografia_resultTupleSchemeFactory();

    public boolean success; // required
    public @org.apache.thrift.annotation.Nullable ErrorBD ebd; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      EBD((short)1, "ebd");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // EBD
            return EBD;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      tmpMap.put(_Fields.EBD, new org.apache.thrift.meta_data.FieldMetaData("ebd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ErrorBD.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(registrarFotografia_result.class, metaDataMap);
    }

    public registrarFotografia_result() {
    }

    public registrarFotografia_result(
      boolean success,
      ErrorBD ebd)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
      this.ebd = ebd;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public registrarFotografia_result(registrarFotografia_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
      if (other.isSetEbd()) {
        this.ebd = new ErrorBD(other.ebd);
      }
    }

    public registrarFotografia_result deepCopy() {
      return new registrarFotografia_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = false;
      this.ebd = null;
    }

    public boolean isSuccess() {
      return this.success;
    }

    public registrarFotografia_result setSuccess(boolean success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    @org.apache.thrift.annotation.Nullable
    public ErrorBD getEbd() {
      return this.ebd;
    }

    public registrarFotografia_result setEbd(@org.apache.thrift.annotation.Nullable ErrorBD ebd) {
      this.ebd = ebd;
      return this;
    }

    public void unsetEbd() {
      this.ebd = null;
    }

    /** Returns true if field ebd is set (has been assigned a value) and false otherwise */
    public boolean isSetEbd() {
      return this.ebd != null;
    }

    public void setEbdIsSet(boolean value) {
      if (!value) {
        this.ebd = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.Boolean)value);
        }
        break;

      case EBD:
        if (value == null) {
          unsetEbd();
        } else {
          setEbd((ErrorBD)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return isSuccess();

      case EBD:
        return getEbd();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case EBD:
        return isSetEbd();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof registrarFotografia_result)
        return this.equals((registrarFotografia_result)that);
      return false;
    }

    public boolean equals(registrarFotografia_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      boolean this_present_ebd = true && this.isSetEbd();
      boolean that_present_ebd = true && that.isSetEbd();
      if (this_present_ebd || that_present_ebd) {
        if (!(this_present_ebd && that_present_ebd))
          return false;
        if (!this.ebd.equals(that.ebd))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((success) ? 131071 : 524287);

      hashCode = hashCode * 8191 + ((isSetEbd()) ? 131071 : 524287);
      if (isSetEbd())
        hashCode = hashCode * 8191 + ebd.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(registrarFotografia_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEbd()).compareTo(other.isSetEbd());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEbd()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ebd, other.ebd);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("registrarFotografia_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      if (!first) sb.append(", ");
      sb.append("ebd:");
      if (this.ebd == null) {
        sb.append("null");
      } else {
        sb.append(this.ebd);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class registrarFotografia_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarFotografia_resultStandardScheme getScheme() {
        return new registrarFotografia_resultStandardScheme();
      }
    }

    private static class registrarFotografia_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<registrarFotografia_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, registrarFotografia_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.success = iprot.readBool();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // EBD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ebd = new ErrorBD();
                struct.ebd.read(iprot);
                struct.setEbdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, registrarFotografia_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeBool(struct.success);
          oprot.writeFieldEnd();
        }
        if (struct.ebd != null) {
          oprot.writeFieldBegin(EBD_FIELD_DESC);
          struct.ebd.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class registrarFotografia_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarFotografia_resultTupleScheme getScheme() {
        return new registrarFotografia_resultTupleScheme();
      }
    }

    private static class registrarFotografia_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<registrarFotografia_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, registrarFotografia_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetEbd()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          oprot.writeBool(struct.success);
        }
        if (struct.isSetEbd()) {
          struct.ebd.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, registrarFotografia_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = iprot.readBool();
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ebd = new ErrorBD();
          struct.ebd.read(iprot);
          struct.setEbdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class consultarFotografia_args implements org.apache.thrift.TBase<consultarFotografia_args, consultarFotografia_args._Fields>, java.io.Serializable, Cloneable, Comparable<consultarFotografia_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("consultarFotografia_args");

    private static final org.apache.thrift.protocol.TField FOLIO_UNICO_DICTAMEN_FIELD_DESC = new org.apache.thrift.protocol.TField("folioUnico_dictamen", org.apache.thrift.protocol.TType.I32, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new consultarFotografia_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new consultarFotografia_argsTupleSchemeFactory();

    public int folioUnico_dictamen; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      FOLIO_UNICO_DICTAMEN((short)1, "folioUnico_dictamen");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // FOLIO_UNICO_DICTAMEN
            return FOLIO_UNICO_DICTAMEN;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __FOLIOUNICO_DICTAMEN_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.FOLIO_UNICO_DICTAMEN, new org.apache.thrift.meta_data.FieldMetaData("folioUnico_dictamen", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(consultarFotografia_args.class, metaDataMap);
    }

    public consultarFotografia_args() {
    }

    public consultarFotografia_args(
      int folioUnico_dictamen)
    {
      this();
      this.folioUnico_dictamen = folioUnico_dictamen;
      setFolioUnico_dictamenIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public consultarFotografia_args(consultarFotografia_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.folioUnico_dictamen = other.folioUnico_dictamen;
    }

    public consultarFotografia_args deepCopy() {
      return new consultarFotografia_args(this);
    }

    @Override
    public void clear() {
      setFolioUnico_dictamenIsSet(false);
      this.folioUnico_dictamen = 0;
    }

    public int getFolioUnico_dictamen() {
      return this.folioUnico_dictamen;
    }

    public consultarFotografia_args setFolioUnico_dictamen(int folioUnico_dictamen) {
      this.folioUnico_dictamen = folioUnico_dictamen;
      setFolioUnico_dictamenIsSet(true);
      return this;
    }

    public void unsetFolioUnico_dictamen() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FOLIOUNICO_DICTAMEN_ISSET_ID);
    }

    /** Returns true if field folioUnico_dictamen is set (has been assigned a value) and false otherwise */
    public boolean isSetFolioUnico_dictamen() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FOLIOUNICO_DICTAMEN_ISSET_ID);
    }

    public void setFolioUnico_dictamenIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FOLIOUNICO_DICTAMEN_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case FOLIO_UNICO_DICTAMEN:
        if (value == null) {
          unsetFolioUnico_dictamen();
        } else {
          setFolioUnico_dictamen((java.lang.Integer)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case FOLIO_UNICO_DICTAMEN:
        return getFolioUnico_dictamen();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case FOLIO_UNICO_DICTAMEN:
        return isSetFolioUnico_dictamen();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof consultarFotografia_args)
        return this.equals((consultarFotografia_args)that);
      return false;
    }

    public boolean equals(consultarFotografia_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_folioUnico_dictamen = true;
      boolean that_present_folioUnico_dictamen = true;
      if (this_present_folioUnico_dictamen || that_present_folioUnico_dictamen) {
        if (!(this_present_folioUnico_dictamen && that_present_folioUnico_dictamen))
          return false;
        if (this.folioUnico_dictamen != that.folioUnico_dictamen)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + folioUnico_dictamen;

      return hashCode;
    }

    @Override
    public int compareTo(consultarFotografia_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetFolioUnico_dictamen()).compareTo(other.isSetFolioUnico_dictamen());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFolioUnico_dictamen()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.folioUnico_dictamen, other.folioUnico_dictamen);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("consultarFotografia_args(");
      boolean first = true;

      sb.append("folioUnico_dictamen:");
      sb.append(this.folioUnico_dictamen);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class consultarFotografia_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarFotografia_argsStandardScheme getScheme() {
        return new consultarFotografia_argsStandardScheme();
      }
    }

    private static class consultarFotografia_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<consultarFotografia_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, consultarFotografia_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // FOLIO_UNICO_DICTAMEN
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.folioUnico_dictamen = iprot.readI32();
                struct.setFolioUnico_dictamenIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, consultarFotografia_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(FOLIO_UNICO_DICTAMEN_FIELD_DESC);
        oprot.writeI32(struct.folioUnico_dictamen);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class consultarFotografia_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarFotografia_argsTupleScheme getScheme() {
        return new consultarFotografia_argsTupleScheme();
      }
    }

    private static class consultarFotografia_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<consultarFotografia_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, consultarFotografia_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetFolioUnico_dictamen()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetFolioUnico_dictamen()) {
          oprot.writeI32(struct.folioUnico_dictamen);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, consultarFotografia_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.folioUnico_dictamen = iprot.readI32();
          struct.setFolioUnico_dictamenIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class consultarFotografia_result implements org.apache.thrift.TBase<consultarFotografia_result, consultarFotografia_result._Fields>, java.io.Serializable, Cloneable, Comparable<consultarFotografia_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("consultarFotografia_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
    private static final org.apache.thrift.protocol.TField EBD_FIELD_DESC = new org.apache.thrift.protocol.TField("ebd", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new consultarFotografia_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new consultarFotografia_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> success; // required
    public @org.apache.thrift.annotation.Nullable ErrorBD ebd; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      EBD((short)1, "ebd");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // EBD
            return EBD;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
      tmpMap.put(_Fields.EBD, new org.apache.thrift.meta_data.FieldMetaData("ebd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ErrorBD.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(consultarFotografia_result.class, metaDataMap);
    }

    public consultarFotografia_result() {
    }

    public consultarFotografia_result(
      java.util.List<java.lang.String> success,
      ErrorBD ebd)
    {
      this();
      this.success = success;
      this.ebd = ebd;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public consultarFotografia_result(consultarFotografia_result other) {
      if (other.isSetSuccess()) {
        java.util.List<java.lang.String> __this__success = new java.util.ArrayList<java.lang.String>(other.success);
        this.success = __this__success;
      }
      if (other.isSetEbd()) {
        this.ebd = new ErrorBD(other.ebd);
      }
    }

    public consultarFotografia_result deepCopy() {
      return new consultarFotografia_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.ebd = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<java.lang.String> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(java.lang.String elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<java.lang.String>();
      }
      this.success.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.List<java.lang.String> getSuccess() {
      return this.success;
    }

    public consultarFotografia_result setSuccess(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public ErrorBD getEbd() {
      return this.ebd;
    }

    public consultarFotografia_result setEbd(@org.apache.thrift.annotation.Nullable ErrorBD ebd) {
      this.ebd = ebd;
      return this;
    }

    public void unsetEbd() {
      this.ebd = null;
    }

    /** Returns true if field ebd is set (has been assigned a value) and false otherwise */
    public boolean isSetEbd() {
      return this.ebd != null;
    }

    public void setEbdIsSet(boolean value) {
      if (!value) {
        this.ebd = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<java.lang.String>)value);
        }
        break;

      case EBD:
        if (value == null) {
          unsetEbd();
        } else {
          setEbd((ErrorBD)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case EBD:
        return getEbd();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case EBD:
        return isSetEbd();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof consultarFotografia_result)
        return this.equals((consultarFotografia_result)that);
      return false;
    }

    public boolean equals(consultarFotografia_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_ebd = true && this.isSetEbd();
      boolean that_present_ebd = true && that.isSetEbd();
      if (this_present_ebd || that_present_ebd) {
        if (!(this_present_ebd && that_present_ebd))
          return false;
        if (!this.ebd.equals(that.ebd))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetEbd()) ? 131071 : 524287);
      if (isSetEbd())
        hashCode = hashCode * 8191 + ebd.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(consultarFotografia_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEbd()).compareTo(other.isSetEbd());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEbd()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ebd, other.ebd);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("consultarFotografia_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("ebd:");
      if (this.ebd == null) {
        sb.append("null");
      } else {
        sb.append(this.ebd);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class consultarFotografia_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarFotografia_resultStandardScheme getScheme() {
        return new consultarFotografia_resultStandardScheme();
      }
    }

    private static class consultarFotografia_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<consultarFotografia_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, consultarFotografia_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list16 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<java.lang.String>(_list16.size);
                  @org.apache.thrift.annotation.Nullable java.lang.String _elem17;
                  for (int _i18 = 0; _i18 < _list16.size; ++_i18)
                  {
                    _elem17 = iprot.readString();
                    struct.success.add(_elem17);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // EBD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ebd = new ErrorBD();
                struct.ebd.read(iprot);
                struct.setEbdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, consultarFotografia_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.success.size()));
            for (java.lang.String _iter19 : struct.success)
            {
              oprot.writeString(_iter19);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.ebd != null) {
          oprot.writeFieldBegin(EBD_FIELD_DESC);
          struct.ebd.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class consultarFotografia_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarFotografia_resultTupleScheme getScheme() {
        return new consultarFotografia_resultTupleScheme();
      }
    }

    private static class consultarFotografia_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<consultarFotografia_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, consultarFotografia_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetEbd()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (java.lang.String _iter20 : struct.success)
            {
              oprot.writeString(_iter20);
            }
          }
        }
        if (struct.isSetEbd()) {
          struct.ebd.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, consultarFotografia_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list21 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
            struct.success = new java.util.ArrayList<java.lang.String>(_list21.size);
            @org.apache.thrift.annotation.Nullable java.lang.String _elem22;
            for (int _i23 = 0; _i23 < _list21.size; ++_i23)
            {
              _elem22 = iprot.readString();
              struct.success.add(_elem22);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ebd = new ErrorBD();
          struct.ebd.read(iprot);
          struct.setEbdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class registrarVehiculoReporte_args implements org.apache.thrift.TBase<registrarVehiculoReporte_args, registrarVehiculoReporte_args._Fields>, java.io.Serializable, Cloneable, Comparable<registrarVehiculoReporte_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("registrarVehiculoReporte_args");

    private static final org.apache.thrift.protocol.TField VEHICULO_FIELD_DESC = new org.apache.thrift.protocol.TField("vehiculo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new registrarVehiculoReporte_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new registrarVehiculoReporte_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable Vehiculo vehiculo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      VEHICULO((short)1, "vehiculo");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // VEHICULO
            return VEHICULO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.VEHICULO, new org.apache.thrift.meta_data.FieldMetaData("vehiculo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Vehiculo.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(registrarVehiculoReporte_args.class, metaDataMap);
    }

    public registrarVehiculoReporte_args() {
    }

    public registrarVehiculoReporte_args(
      Vehiculo vehiculo)
    {
      this();
      this.vehiculo = vehiculo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public registrarVehiculoReporte_args(registrarVehiculoReporte_args other) {
      if (other.isSetVehiculo()) {
        this.vehiculo = new Vehiculo(other.vehiculo);
      }
    }

    public registrarVehiculoReporte_args deepCopy() {
      return new registrarVehiculoReporte_args(this);
    }

    @Override
    public void clear() {
      this.vehiculo = null;
    }

    @org.apache.thrift.annotation.Nullable
    public Vehiculo getVehiculo() {
      return this.vehiculo;
    }

    public registrarVehiculoReporte_args setVehiculo(@org.apache.thrift.annotation.Nullable Vehiculo vehiculo) {
      this.vehiculo = vehiculo;
      return this;
    }

    public void unsetVehiculo() {
      this.vehiculo = null;
    }

    /** Returns true if field vehiculo is set (has been assigned a value) and false otherwise */
    public boolean isSetVehiculo() {
      return this.vehiculo != null;
    }

    public void setVehiculoIsSet(boolean value) {
      if (!value) {
        this.vehiculo = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case VEHICULO:
        if (value == null) {
          unsetVehiculo();
        } else {
          setVehiculo((Vehiculo)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case VEHICULO:
        return getVehiculo();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case VEHICULO:
        return isSetVehiculo();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof registrarVehiculoReporte_args)
        return this.equals((registrarVehiculoReporte_args)that);
      return false;
    }

    public boolean equals(registrarVehiculoReporte_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_vehiculo = true && this.isSetVehiculo();
      boolean that_present_vehiculo = true && that.isSetVehiculo();
      if (this_present_vehiculo || that_present_vehiculo) {
        if (!(this_present_vehiculo && that_present_vehiculo))
          return false;
        if (!this.vehiculo.equals(that.vehiculo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetVehiculo()) ? 131071 : 524287);
      if (isSetVehiculo())
        hashCode = hashCode * 8191 + vehiculo.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(registrarVehiculoReporte_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetVehiculo()).compareTo(other.isSetVehiculo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetVehiculo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vehiculo, other.vehiculo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("registrarVehiculoReporte_args(");
      boolean first = true;

      sb.append("vehiculo:");
      if (this.vehiculo == null) {
        sb.append("null");
      } else {
        sb.append(this.vehiculo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (vehiculo != null) {
        vehiculo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class registrarVehiculoReporte_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarVehiculoReporte_argsStandardScheme getScheme() {
        return new registrarVehiculoReporte_argsStandardScheme();
      }
    }

    private static class registrarVehiculoReporte_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<registrarVehiculoReporte_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, registrarVehiculoReporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // VEHICULO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.vehiculo = new Vehiculo();
                struct.vehiculo.read(iprot);
                struct.setVehiculoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, registrarVehiculoReporte_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.vehiculo != null) {
          oprot.writeFieldBegin(VEHICULO_FIELD_DESC);
          struct.vehiculo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class registrarVehiculoReporte_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarVehiculoReporte_argsTupleScheme getScheme() {
        return new registrarVehiculoReporte_argsTupleScheme();
      }
    }

    private static class registrarVehiculoReporte_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<registrarVehiculoReporte_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, registrarVehiculoReporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetVehiculo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetVehiculo()) {
          struct.vehiculo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, registrarVehiculoReporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.vehiculo = new Vehiculo();
          struct.vehiculo.read(iprot);
          struct.setVehiculoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class registrarVehiculoReporte_result implements org.apache.thrift.TBase<registrarVehiculoReporte_result, registrarVehiculoReporte_result._Fields>, java.io.Serializable, Cloneable, Comparable<registrarVehiculoReporte_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("registrarVehiculoReporte_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRING, (short)0);
    private static final org.apache.thrift.protocol.TField EBD_FIELD_DESC = new org.apache.thrift.protocol.TField("ebd", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new registrarVehiculoReporte_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new registrarVehiculoReporte_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String success; // required
    public @org.apache.thrift.annotation.Nullable ErrorBD ebd; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      EBD((short)1, "ebd");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // EBD
            return EBD;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.EBD, new org.apache.thrift.meta_data.FieldMetaData("ebd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ErrorBD.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(registrarVehiculoReporte_result.class, metaDataMap);
    }

    public registrarVehiculoReporte_result() {
    }

    public registrarVehiculoReporte_result(
      java.lang.String success,
      ErrorBD ebd)
    {
      this();
      this.success = success;
      this.ebd = ebd;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public registrarVehiculoReporte_result(registrarVehiculoReporte_result other) {
      if (other.isSetSuccess()) {
        this.success = other.success;
      }
      if (other.isSetEbd()) {
        this.ebd = new ErrorBD(other.ebd);
      }
    }

    public registrarVehiculoReporte_result deepCopy() {
      return new registrarVehiculoReporte_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.ebd = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getSuccess() {
      return this.success;
    }

    public registrarVehiculoReporte_result setSuccess(@org.apache.thrift.annotation.Nullable java.lang.String success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public ErrorBD getEbd() {
      return this.ebd;
    }

    public registrarVehiculoReporte_result setEbd(@org.apache.thrift.annotation.Nullable ErrorBD ebd) {
      this.ebd = ebd;
      return this;
    }

    public void unsetEbd() {
      this.ebd = null;
    }

    /** Returns true if field ebd is set (has been assigned a value) and false otherwise */
    public boolean isSetEbd() {
      return this.ebd != null;
    }

    public void setEbdIsSet(boolean value) {
      if (!value) {
        this.ebd = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.String)value);
        }
        break;

      case EBD:
        if (value == null) {
          unsetEbd();
        } else {
          setEbd((ErrorBD)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case EBD:
        return getEbd();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case EBD:
        return isSetEbd();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof registrarVehiculoReporte_result)
        return this.equals((registrarVehiculoReporte_result)that);
      return false;
    }

    public boolean equals(registrarVehiculoReporte_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_ebd = true && this.isSetEbd();
      boolean that_present_ebd = true && that.isSetEbd();
      if (this_present_ebd || that_present_ebd) {
        if (!(this_present_ebd && that_present_ebd))
          return false;
        if (!this.ebd.equals(that.ebd))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetEbd()) ? 131071 : 524287);
      if (isSetEbd())
        hashCode = hashCode * 8191 + ebd.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(registrarVehiculoReporte_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEbd()).compareTo(other.isSetEbd());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEbd()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ebd, other.ebd);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("registrarVehiculoReporte_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("ebd:");
      if (this.ebd == null) {
        sb.append("null");
      } else {
        sb.append(this.ebd);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class registrarVehiculoReporte_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarVehiculoReporte_resultStandardScheme getScheme() {
        return new registrarVehiculoReporte_resultStandardScheme();
      }
    }

    private static class registrarVehiculoReporte_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<registrarVehiculoReporte_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, registrarVehiculoReporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.success = iprot.readString();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // EBD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ebd = new ErrorBD();
                struct.ebd.read(iprot);
                struct.setEbdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, registrarVehiculoReporte_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeString(struct.success);
          oprot.writeFieldEnd();
        }
        if (struct.ebd != null) {
          oprot.writeFieldBegin(EBD_FIELD_DESC);
          struct.ebd.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class registrarVehiculoReporte_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public registrarVehiculoReporte_resultTupleScheme getScheme() {
        return new registrarVehiculoReporte_resultTupleScheme();
      }
    }

    private static class registrarVehiculoReporte_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<registrarVehiculoReporte_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, registrarVehiculoReporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetEbd()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          oprot.writeString(struct.success);
        }
        if (struct.isSetEbd()) {
          struct.ebd.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, registrarVehiculoReporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = iprot.readString();
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ebd = new ErrorBD();
          struct.ebd.read(iprot);
          struct.setEbdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class consultarReporte_args implements org.apache.thrift.TBase<consultarReporte_args, consultarReporte_args._Fields>, java.io.Serializable, Cloneable, Comparable<consultarReporte_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("consultarReporte_args");

    private static final org.apache.thrift.protocol.TField TELEFONO_FIELD_DESC = new org.apache.thrift.protocol.TField("telefono", org.apache.thrift.protocol.TType.I64, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new consultarReporte_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new consultarReporte_argsTupleSchemeFactory();

    public long telefono; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      TELEFONO((short)1, "telefono");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // TELEFONO
            return TELEFONO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __TELEFONO_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.TELEFONO, new org.apache.thrift.meta_data.FieldMetaData("telefono", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(consultarReporte_args.class, metaDataMap);
    }

    public consultarReporte_args() {
    }

    public consultarReporte_args(
      long telefono)
    {
      this();
      this.telefono = telefono;
      setTelefonoIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public consultarReporte_args(consultarReporte_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.telefono = other.telefono;
    }

    public consultarReporte_args deepCopy() {
      return new consultarReporte_args(this);
    }

    @Override
    public void clear() {
      setTelefonoIsSet(false);
      this.telefono = 0;
    }

    public long getTelefono() {
      return this.telefono;
    }

    public consultarReporte_args setTelefono(long telefono) {
      this.telefono = telefono;
      setTelefonoIsSet(true);
      return this;
    }

    public void unsetTelefono() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TELEFONO_ISSET_ID);
    }

    /** Returns true if field telefono is set (has been assigned a value) and false otherwise */
    public boolean isSetTelefono() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TELEFONO_ISSET_ID);
    }

    public void setTelefonoIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TELEFONO_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case TELEFONO:
        if (value == null) {
          unsetTelefono();
        } else {
          setTelefono((java.lang.Long)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case TELEFONO:
        return getTelefono();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case TELEFONO:
        return isSetTelefono();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof consultarReporte_args)
        return this.equals((consultarReporte_args)that);
      return false;
    }

    public boolean equals(consultarReporte_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_telefono = true;
      boolean that_present_telefono = true;
      if (this_present_telefono || that_present_telefono) {
        if (!(this_present_telefono && that_present_telefono))
          return false;
        if (this.telefono != that.telefono)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(telefono);

      return hashCode;
    }

    @Override
    public int compareTo(consultarReporte_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetTelefono()).compareTo(other.isSetTelefono());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTelefono()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telefono, other.telefono);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("consultarReporte_args(");
      boolean first = true;

      sb.append("telefono:");
      sb.append(this.telefono);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class consultarReporte_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarReporte_argsStandardScheme getScheme() {
        return new consultarReporte_argsStandardScheme();
      }
    }

    private static class consultarReporte_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<consultarReporte_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, consultarReporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // TELEFONO
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.telefono = iprot.readI64();
                struct.setTelefonoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, consultarReporte_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(TELEFONO_FIELD_DESC);
        oprot.writeI64(struct.telefono);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class consultarReporte_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarReporte_argsTupleScheme getScheme() {
        return new consultarReporte_argsTupleScheme();
      }
    }

    private static class consultarReporte_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<consultarReporte_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, consultarReporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetTelefono()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetTelefono()) {
          oprot.writeI64(struct.telefono);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, consultarReporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.telefono = iprot.readI64();
          struct.setTelefonoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class consultarReporte_result implements org.apache.thrift.TBase<consultarReporte_result, consultarReporte_result._Fields>, java.io.Serializable, Cloneable, Comparable<consultarReporte_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("consultarReporte_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
    private static final org.apache.thrift.protocol.TField EBD_FIELD_DESC = new org.apache.thrift.protocol.TField("ebd", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new consultarReporte_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new consultarReporte_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.util.List<Reporte> success; // required
    public @org.apache.thrift.annotation.Nullable ErrorBD ebd; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      EBD((short)1, "ebd");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // EBD
            return EBD;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Reporte.class))));
      tmpMap.put(_Fields.EBD, new org.apache.thrift.meta_data.FieldMetaData("ebd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ErrorBD.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(consultarReporte_result.class, metaDataMap);
    }

    public consultarReporte_result() {
    }

    public consultarReporte_result(
      java.util.List<Reporte> success,
      ErrorBD ebd)
    {
      this();
      this.success = success;
      this.ebd = ebd;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public consultarReporte_result(consultarReporte_result other) {
      if (other.isSetSuccess()) {
        java.util.List<Reporte> __this__success = new java.util.ArrayList<Reporte>(other.success.size());
        for (Reporte other_element : other.success) {
          __this__success.add(new Reporte(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetEbd()) {
        this.ebd = new ErrorBD(other.ebd);
      }
    }

    public consultarReporte_result deepCopy() {
      return new consultarReporte_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.ebd = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<Reporte> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(Reporte elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<Reporte>();
      }
      this.success.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.List<Reporte> getSuccess() {
      return this.success;
    }

    public consultarReporte_result setSuccess(@org.apache.thrift.annotation.Nullable java.util.List<Reporte> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public ErrorBD getEbd() {
      return this.ebd;
    }

    public consultarReporte_result setEbd(@org.apache.thrift.annotation.Nullable ErrorBD ebd) {
      this.ebd = ebd;
      return this;
    }

    public void unsetEbd() {
      this.ebd = null;
    }

    /** Returns true if field ebd is set (has been assigned a value) and false otherwise */
    public boolean isSetEbd() {
      return this.ebd != null;
    }

    public void setEbdIsSet(boolean value) {
      if (!value) {
        this.ebd = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<Reporte>)value);
        }
        break;

      case EBD:
        if (value == null) {
          unsetEbd();
        } else {
          setEbd((ErrorBD)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case EBD:
        return getEbd();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case EBD:
        return isSetEbd();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof consultarReporte_result)
        return this.equals((consultarReporte_result)that);
      return false;
    }

    public boolean equals(consultarReporte_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_ebd = true && this.isSetEbd();
      boolean that_present_ebd = true && that.isSetEbd();
      if (this_present_ebd || that_present_ebd) {
        if (!(this_present_ebd && that_present_ebd))
          return false;
        if (!this.ebd.equals(that.ebd))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetEbd()) ? 131071 : 524287);
      if (isSetEbd())
        hashCode = hashCode * 8191 + ebd.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(consultarReporte_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEbd()).compareTo(other.isSetEbd());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEbd()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ebd, other.ebd);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("consultarReporte_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("ebd:");
      if (this.ebd == null) {
        sb.append("null");
      } else {
        sb.append(this.ebd);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class consultarReporte_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarReporte_resultStandardScheme getScheme() {
        return new consultarReporte_resultStandardScheme();
      }
    }

    private static class consultarReporte_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<consultarReporte_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, consultarReporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list24 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<Reporte>(_list24.size);
                  @org.apache.thrift.annotation.Nullable Reporte _elem25;
                  for (int _i26 = 0; _i26 < _list24.size; ++_i26)
                  {
                    _elem25 = new Reporte();
                    _elem25.read(iprot);
                    struct.success.add(_elem25);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // EBD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ebd = new ErrorBD();
                struct.ebd.read(iprot);
                struct.setEbdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, consultarReporte_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (Reporte _iter27 : struct.success)
            {
              _iter27.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.ebd != null) {
          oprot.writeFieldBegin(EBD_FIELD_DESC);
          struct.ebd.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class consultarReporte_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarReporte_resultTupleScheme getScheme() {
        return new consultarReporte_resultTupleScheme();
      }
    }

    private static class consultarReporte_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<consultarReporte_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, consultarReporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetEbd()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (Reporte _iter28 : struct.success)
            {
              _iter28.write(oprot);
            }
          }
        }
        if (struct.isSetEbd()) {
          struct.ebd.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, consultarReporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list29 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.ArrayList<Reporte>(_list29.size);
            @org.apache.thrift.annotation.Nullable Reporte _elem30;
            for (int _i31 = 0; _i31 < _list29.size; ++_i31)
            {
              _elem30 = new Reporte();
              _elem30.read(iprot);
              struct.success.add(_elem30);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ebd = new ErrorBD();
          struct.ebd.read(iprot);
          struct.setEbdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class consultarDictamen_args implements org.apache.thrift.TBase<consultarDictamen_args, consultarDictamen_args._Fields>, java.io.Serializable, Cloneable, Comparable<consultarDictamen_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("consultarDictamen_args");

    private static final org.apache.thrift.protocol.TField FOLIO_UNICO_FIELD_DESC = new org.apache.thrift.protocol.TField("folioUnico", org.apache.thrift.protocol.TType.LIST, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new consultarDictamen_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new consultarDictamen_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> folioUnico; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      FOLIO_UNICO((short)1, "folioUnico");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // FOLIO_UNICO
            return FOLIO_UNICO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.FOLIO_UNICO, new org.apache.thrift.meta_data.FieldMetaData("folioUnico", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(consultarDictamen_args.class, metaDataMap);
    }

    public consultarDictamen_args() {
    }

    public consultarDictamen_args(
      java.util.List<java.lang.Integer> folioUnico)
    {
      this();
      this.folioUnico = folioUnico;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public consultarDictamen_args(consultarDictamen_args other) {
      if (other.isSetFolioUnico()) {
        java.util.List<java.lang.Integer> __this__folioUnico = new java.util.ArrayList<java.lang.Integer>(other.folioUnico);
        this.folioUnico = __this__folioUnico;
      }
    }

    public consultarDictamen_args deepCopy() {
      return new consultarDictamen_args(this);
    }

    @Override
    public void clear() {
      this.folioUnico = null;
    }

    public int getFolioUnicoSize() {
      return (this.folioUnico == null) ? 0 : this.folioUnico.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<java.lang.Integer> getFolioUnicoIterator() {
      return (this.folioUnico == null) ? null : this.folioUnico.iterator();
    }

    public void addToFolioUnico(int elem) {
      if (this.folioUnico == null) {
        this.folioUnico = new java.util.ArrayList<java.lang.Integer>();
      }
      this.folioUnico.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.List<java.lang.Integer> getFolioUnico() {
      return this.folioUnico;
    }

    public consultarDictamen_args setFolioUnico(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> folioUnico) {
      this.folioUnico = folioUnico;
      return this;
    }

    public void unsetFolioUnico() {
      this.folioUnico = null;
    }

    /** Returns true if field folioUnico is set (has been assigned a value) and false otherwise */
    public boolean isSetFolioUnico() {
      return this.folioUnico != null;
    }

    public void setFolioUnicoIsSet(boolean value) {
      if (!value) {
        this.folioUnico = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case FOLIO_UNICO:
        if (value == null) {
          unsetFolioUnico();
        } else {
          setFolioUnico((java.util.List<java.lang.Integer>)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case FOLIO_UNICO:
        return getFolioUnico();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case FOLIO_UNICO:
        return isSetFolioUnico();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof consultarDictamen_args)
        return this.equals((consultarDictamen_args)that);
      return false;
    }

    public boolean equals(consultarDictamen_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_folioUnico = true && this.isSetFolioUnico();
      boolean that_present_folioUnico = true && that.isSetFolioUnico();
      if (this_present_folioUnico || that_present_folioUnico) {
        if (!(this_present_folioUnico && that_present_folioUnico))
          return false;
        if (!this.folioUnico.equals(that.folioUnico))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetFolioUnico()) ? 131071 : 524287);
      if (isSetFolioUnico())
        hashCode = hashCode * 8191 + folioUnico.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(consultarDictamen_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetFolioUnico()).compareTo(other.isSetFolioUnico());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFolioUnico()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.folioUnico, other.folioUnico);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("consultarDictamen_args(");
      boolean first = true;

      sb.append("folioUnico:");
      if (this.folioUnico == null) {
        sb.append("null");
      } else {
        sb.append(this.folioUnico);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class consultarDictamen_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarDictamen_argsStandardScheme getScheme() {
        return new consultarDictamen_argsStandardScheme();
      }
    }

    private static class consultarDictamen_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<consultarDictamen_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, consultarDictamen_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // FOLIO_UNICO
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list32 = iprot.readListBegin();
                  struct.folioUnico = new java.util.ArrayList<java.lang.Integer>(_list32.size);
                  int _elem33;
                  for (int _i34 = 0; _i34 < _list32.size; ++_i34)
                  {
                    _elem33 = iprot.readI32();
                    struct.folioUnico.add(_elem33);
                  }
                  iprot.readListEnd();
                }
                struct.setFolioUnicoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, consultarDictamen_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.folioUnico != null) {
          oprot.writeFieldBegin(FOLIO_UNICO_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.folioUnico.size()));
            for (int _iter35 : struct.folioUnico)
            {
              oprot.writeI32(_iter35);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class consultarDictamen_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarDictamen_argsTupleScheme getScheme() {
        return new consultarDictamen_argsTupleScheme();
      }
    }

    private static class consultarDictamen_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<consultarDictamen_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, consultarDictamen_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetFolioUnico()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetFolioUnico()) {
          {
            oprot.writeI32(struct.folioUnico.size());
            for (int _iter36 : struct.folioUnico)
            {
              oprot.writeI32(_iter36);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, consultarDictamen_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list37 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
            struct.folioUnico = new java.util.ArrayList<java.lang.Integer>(_list37.size);
            int _elem38;
            for (int _i39 = 0; _i39 < _list37.size; ++_i39)
            {
              _elem38 = iprot.readI32();
              struct.folioUnico.add(_elem38);
            }
          }
          struct.setFolioUnicoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class consultarDictamen_result implements org.apache.thrift.TBase<consultarDictamen_result, consultarDictamen_result._Fields>, java.io.Serializable, Cloneable, Comparable<consultarDictamen_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("consultarDictamen_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
    private static final org.apache.thrift.protocol.TField EBD_FIELD_DESC = new org.apache.thrift.protocol.TField("ebd", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new consultarDictamen_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new consultarDictamen_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.util.List<Dictamen> success; // required
    public @org.apache.thrift.annotation.Nullable ErrorBD ebd; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      EBD((short)1, "ebd");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // EBD
            return EBD;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Dictamen.class))));
      tmpMap.put(_Fields.EBD, new org.apache.thrift.meta_data.FieldMetaData("ebd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ErrorBD.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(consultarDictamen_result.class, metaDataMap);
    }

    public consultarDictamen_result() {
    }

    public consultarDictamen_result(
      java.util.List<Dictamen> success,
      ErrorBD ebd)
    {
      this();
      this.success = success;
      this.ebd = ebd;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public consultarDictamen_result(consultarDictamen_result other) {
      if (other.isSetSuccess()) {
        java.util.List<Dictamen> __this__success = new java.util.ArrayList<Dictamen>(other.success.size());
        for (Dictamen other_element : other.success) {
          __this__success.add(new Dictamen(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetEbd()) {
        this.ebd = new ErrorBD(other.ebd);
      }
    }

    public consultarDictamen_result deepCopy() {
      return new consultarDictamen_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.ebd = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<Dictamen> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(Dictamen elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<Dictamen>();
      }
      this.success.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.List<Dictamen> getSuccess() {
      return this.success;
    }

    public consultarDictamen_result setSuccess(@org.apache.thrift.annotation.Nullable java.util.List<Dictamen> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public ErrorBD getEbd() {
      return this.ebd;
    }

    public consultarDictamen_result setEbd(@org.apache.thrift.annotation.Nullable ErrorBD ebd) {
      this.ebd = ebd;
      return this;
    }

    public void unsetEbd() {
      this.ebd = null;
    }

    /** Returns true if field ebd is set (has been assigned a value) and false otherwise */
    public boolean isSetEbd() {
      return this.ebd != null;
    }

    public void setEbdIsSet(boolean value) {
      if (!value) {
        this.ebd = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<Dictamen>)value);
        }
        break;

      case EBD:
        if (value == null) {
          unsetEbd();
        } else {
          setEbd((ErrorBD)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case EBD:
        return getEbd();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case EBD:
        return isSetEbd();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof consultarDictamen_result)
        return this.equals((consultarDictamen_result)that);
      return false;
    }

    public boolean equals(consultarDictamen_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_ebd = true && this.isSetEbd();
      boolean that_present_ebd = true && that.isSetEbd();
      if (this_present_ebd || that_present_ebd) {
        if (!(this_present_ebd && that_present_ebd))
          return false;
        if (!this.ebd.equals(that.ebd))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetEbd()) ? 131071 : 524287);
      if (isSetEbd())
        hashCode = hashCode * 8191 + ebd.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(consultarDictamen_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEbd()).compareTo(other.isSetEbd());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEbd()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ebd, other.ebd);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("consultarDictamen_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("ebd:");
      if (this.ebd == null) {
        sb.append("null");
      } else {
        sb.append(this.ebd);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class consultarDictamen_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarDictamen_resultStandardScheme getScheme() {
        return new consultarDictamen_resultStandardScheme();
      }
    }

    private static class consultarDictamen_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<consultarDictamen_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, consultarDictamen_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list40 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<Dictamen>(_list40.size);
                  @org.apache.thrift.annotation.Nullable Dictamen _elem41;
                  for (int _i42 = 0; _i42 < _list40.size; ++_i42)
                  {
                    _elem41 = new Dictamen();
                    _elem41.read(iprot);
                    struct.success.add(_elem41);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // EBD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ebd = new ErrorBD();
                struct.ebd.read(iprot);
                struct.setEbdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, consultarDictamen_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (Dictamen _iter43 : struct.success)
            {
              _iter43.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.ebd != null) {
          oprot.writeFieldBegin(EBD_FIELD_DESC);
          struct.ebd.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class consultarDictamen_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarDictamen_resultTupleScheme getScheme() {
        return new consultarDictamen_resultTupleScheme();
      }
    }

    private static class consultarDictamen_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<consultarDictamen_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, consultarDictamen_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetEbd()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (Dictamen _iter44 : struct.success)
            {
              _iter44.write(oprot);
            }
          }
        }
        if (struct.isSetEbd()) {
          struct.ebd.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, consultarDictamen_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list45 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.ArrayList<Dictamen>(_list45.size);
            @org.apache.thrift.annotation.Nullable Dictamen _elem46;
            for (int _i47 = 0; _i47 < _list45.size; ++_i47)
            {
              _elem46 = new Dictamen();
              _elem46.read(iprot);
              struct.success.add(_elem46);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ebd = new ErrorBD();
          struct.ebd.read(iprot);
          struct.setEbdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class consultarConductorPropio_args implements org.apache.thrift.TBase<consultarConductorPropio_args, consultarConductorPropio_args._Fields>, java.io.Serializable, Cloneable, Comparable<consultarConductorPropio_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("consultarConductorPropio_args");

    private static final org.apache.thrift.protocol.TField TELEFONO_FIELD_DESC = new org.apache.thrift.protocol.TField("telefono", org.apache.thrift.protocol.TType.I64, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new consultarConductorPropio_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new consultarConductorPropio_argsTupleSchemeFactory();

    public long telefono; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      TELEFONO((short)1, "telefono");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // TELEFONO
            return TELEFONO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __TELEFONO_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.TELEFONO, new org.apache.thrift.meta_data.FieldMetaData("telefono", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(consultarConductorPropio_args.class, metaDataMap);
    }

    public consultarConductorPropio_args() {
    }

    public consultarConductorPropio_args(
      long telefono)
    {
      this();
      this.telefono = telefono;
      setTelefonoIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public consultarConductorPropio_args(consultarConductorPropio_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.telefono = other.telefono;
    }

    public consultarConductorPropio_args deepCopy() {
      return new consultarConductorPropio_args(this);
    }

    @Override
    public void clear() {
      setTelefonoIsSet(false);
      this.telefono = 0;
    }

    public long getTelefono() {
      return this.telefono;
    }

    public consultarConductorPropio_args setTelefono(long telefono) {
      this.telefono = telefono;
      setTelefonoIsSet(true);
      return this;
    }

    public void unsetTelefono() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TELEFONO_ISSET_ID);
    }

    /** Returns true if field telefono is set (has been assigned a value) and false otherwise */
    public boolean isSetTelefono() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TELEFONO_ISSET_ID);
    }

    public void setTelefonoIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TELEFONO_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case TELEFONO:
        if (value == null) {
          unsetTelefono();
        } else {
          setTelefono((java.lang.Long)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case TELEFONO:
        return getTelefono();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case TELEFONO:
        return isSetTelefono();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof consultarConductorPropio_args)
        return this.equals((consultarConductorPropio_args)that);
      return false;
    }

    public boolean equals(consultarConductorPropio_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_telefono = true;
      boolean that_present_telefono = true;
      if (this_present_telefono || that_present_telefono) {
        if (!(this_present_telefono && that_present_telefono))
          return false;
        if (this.telefono != that.telefono)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(telefono);

      return hashCode;
    }

    @Override
    public int compareTo(consultarConductorPropio_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetTelefono()).compareTo(other.isSetTelefono());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTelefono()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telefono, other.telefono);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("consultarConductorPropio_args(");
      boolean first = true;

      sb.append("telefono:");
      sb.append(this.telefono);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class consultarConductorPropio_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarConductorPropio_argsStandardScheme getScheme() {
        return new consultarConductorPropio_argsStandardScheme();
      }
    }

    private static class consultarConductorPropio_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<consultarConductorPropio_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, consultarConductorPropio_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // TELEFONO
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.telefono = iprot.readI64();
                struct.setTelefonoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, consultarConductorPropio_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(TELEFONO_FIELD_DESC);
        oprot.writeI64(struct.telefono);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class consultarConductorPropio_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarConductorPropio_argsTupleScheme getScheme() {
        return new consultarConductorPropio_argsTupleScheme();
      }
    }

    private static class consultarConductorPropio_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<consultarConductorPropio_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, consultarConductorPropio_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetTelefono()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetTelefono()) {
          oprot.writeI64(struct.telefono);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, consultarConductorPropio_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.telefono = iprot.readI64();
          struct.setTelefonoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class consultarConductorPropio_result implements org.apache.thrift.TBase<consultarConductorPropio_result, consultarConductorPropio_result._Fields>, java.io.Serializable, Cloneable, Comparable<consultarConductorPropio_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("consultarConductorPropio_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
    private static final org.apache.thrift.protocol.TField EBD_FIELD_DESC = new org.apache.thrift.protocol.TField("ebd", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new consultarConductorPropio_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new consultarConductorPropio_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable Conductor success; // required
    public @org.apache.thrift.annotation.Nullable ErrorBD ebd; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      EBD((short)1, "ebd");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // EBD
            return EBD;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Conductor.class)));
      tmpMap.put(_Fields.EBD, new org.apache.thrift.meta_data.FieldMetaData("ebd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ErrorBD.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(consultarConductorPropio_result.class, metaDataMap);
    }

    public consultarConductorPropio_result() {
    }

    public consultarConductorPropio_result(
      Conductor success,
      ErrorBD ebd)
    {
      this();
      this.success = success;
      this.ebd = ebd;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public consultarConductorPropio_result(consultarConductorPropio_result other) {
      if (other.isSetSuccess()) {
        this.success = new Conductor(other.success);
      }
      if (other.isSetEbd()) {
        this.ebd = new ErrorBD(other.ebd);
      }
    }

    public consultarConductorPropio_result deepCopy() {
      return new consultarConductorPropio_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.ebd = null;
    }

    @org.apache.thrift.annotation.Nullable
    public Conductor getSuccess() {
      return this.success;
    }

    public consultarConductorPropio_result setSuccess(@org.apache.thrift.annotation.Nullable Conductor success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public ErrorBD getEbd() {
      return this.ebd;
    }

    public consultarConductorPropio_result setEbd(@org.apache.thrift.annotation.Nullable ErrorBD ebd) {
      this.ebd = ebd;
      return this;
    }

    public void unsetEbd() {
      this.ebd = null;
    }

    /** Returns true if field ebd is set (has been assigned a value) and false otherwise */
    public boolean isSetEbd() {
      return this.ebd != null;
    }

    public void setEbdIsSet(boolean value) {
      if (!value) {
        this.ebd = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Conductor)value);
        }
        break;

      case EBD:
        if (value == null) {
          unsetEbd();
        } else {
          setEbd((ErrorBD)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case EBD:
        return getEbd();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case EBD:
        return isSetEbd();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof consultarConductorPropio_result)
        return this.equals((consultarConductorPropio_result)that);
      return false;
    }

    public boolean equals(consultarConductorPropio_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_ebd = true && this.isSetEbd();
      boolean that_present_ebd = true && that.isSetEbd();
      if (this_present_ebd || that_present_ebd) {
        if (!(this_present_ebd && that_present_ebd))
          return false;
        if (!this.ebd.equals(that.ebd))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetEbd()) ? 131071 : 524287);
      if (isSetEbd())
        hashCode = hashCode * 8191 + ebd.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(consultarConductorPropio_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEbd()).compareTo(other.isSetEbd());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEbd()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ebd, other.ebd);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("consultarConductorPropio_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("ebd:");
      if (this.ebd == null) {
        sb.append("null");
      } else {
        sb.append(this.ebd);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class consultarConductorPropio_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarConductorPropio_resultStandardScheme getScheme() {
        return new consultarConductorPropio_resultStandardScheme();
      }
    }

    private static class consultarConductorPropio_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<consultarConductorPropio_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, consultarConductorPropio_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new Conductor();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // EBD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ebd = new ErrorBD();
                struct.ebd.read(iprot);
                struct.setEbdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, consultarConductorPropio_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.ebd != null) {
          oprot.writeFieldBegin(EBD_FIELD_DESC);
          struct.ebd.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class consultarConductorPropio_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public consultarConductorPropio_resultTupleScheme getScheme() {
        return new consultarConductorPropio_resultTupleScheme();
      }
    }

    private static class consultarConductorPropio_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<consultarConductorPropio_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, consultarConductorPropio_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetEbd()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
        if (struct.isSetEbd()) {
          struct.ebd.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, consultarConductorPropio_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = new Conductor();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ebd = new ErrorBD();
          struct.ebd.read(iprot);
          struct.setEbdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class recuperarNFuncionario_args implements org.apache.thrift.TBase<recuperarNFuncionario_args, recuperarNFuncionario_args._Fields>, java.io.Serializable, Cloneable, Comparable<recuperarNFuncionario_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("recuperarNFuncionario_args");

    private static final org.apache.thrift.protocol.TField FOLIO_UNICO_FIELD_DESC = new org.apache.thrift.protocol.TField("folioUnico", org.apache.thrift.protocol.TType.I32, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new recuperarNFuncionario_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new recuperarNFuncionario_argsTupleSchemeFactory();

    public int folioUnico; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      FOLIO_UNICO((short)1, "folioUnico");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // FOLIO_UNICO
            return FOLIO_UNICO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __FOLIOUNICO_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.FOLIO_UNICO, new org.apache.thrift.meta_data.FieldMetaData("folioUnico", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(recuperarNFuncionario_args.class, metaDataMap);
    }

    public recuperarNFuncionario_args() {
    }

    public recuperarNFuncionario_args(
      int folioUnico)
    {
      this();
      this.folioUnico = folioUnico;
      setFolioUnicoIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public recuperarNFuncionario_args(recuperarNFuncionario_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.folioUnico = other.folioUnico;
    }

    public recuperarNFuncionario_args deepCopy() {
      return new recuperarNFuncionario_args(this);
    }

    @Override
    public void clear() {
      setFolioUnicoIsSet(false);
      this.folioUnico = 0;
    }

    public int getFolioUnico() {
      return this.folioUnico;
    }

    public recuperarNFuncionario_args setFolioUnico(int folioUnico) {
      this.folioUnico = folioUnico;
      setFolioUnicoIsSet(true);
      return this;
    }

    public void unsetFolioUnico() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FOLIOUNICO_ISSET_ID);
    }

    /** Returns true if field folioUnico is set (has been assigned a value) and false otherwise */
    public boolean isSetFolioUnico() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FOLIOUNICO_ISSET_ID);
    }

    public void setFolioUnicoIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FOLIOUNICO_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case FOLIO_UNICO:
        if (value == null) {
          unsetFolioUnico();
        } else {
          setFolioUnico((java.lang.Integer)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case FOLIO_UNICO:
        return getFolioUnico();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case FOLIO_UNICO:
        return isSetFolioUnico();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof recuperarNFuncionario_args)
        return this.equals((recuperarNFuncionario_args)that);
      return false;
    }

    public boolean equals(recuperarNFuncionario_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_folioUnico = true;
      boolean that_present_folioUnico = true;
      if (this_present_folioUnico || that_present_folioUnico) {
        if (!(this_present_folioUnico && that_present_folioUnico))
          return false;
        if (this.folioUnico != that.folioUnico)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + folioUnico;

      return hashCode;
    }

    @Override
    public int compareTo(recuperarNFuncionario_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetFolioUnico()).compareTo(other.isSetFolioUnico());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFolioUnico()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.folioUnico, other.folioUnico);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("recuperarNFuncionario_args(");
      boolean first = true;

      sb.append("folioUnico:");
      sb.append(this.folioUnico);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class recuperarNFuncionario_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public recuperarNFuncionario_argsStandardScheme getScheme() {
        return new recuperarNFuncionario_argsStandardScheme();
      }
    }

    private static class recuperarNFuncionario_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<recuperarNFuncionario_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, recuperarNFuncionario_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // FOLIO_UNICO
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.folioUnico = iprot.readI32();
                struct.setFolioUnicoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, recuperarNFuncionario_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(FOLIO_UNICO_FIELD_DESC);
        oprot.writeI32(struct.folioUnico);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class recuperarNFuncionario_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public recuperarNFuncionario_argsTupleScheme getScheme() {
        return new recuperarNFuncionario_argsTupleScheme();
      }
    }

    private static class recuperarNFuncionario_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<recuperarNFuncionario_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, recuperarNFuncionario_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetFolioUnico()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetFolioUnico()) {
          oprot.writeI32(struct.folioUnico);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, recuperarNFuncionario_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.folioUnico = iprot.readI32();
          struct.setFolioUnicoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class recuperarNFuncionario_result implements org.apache.thrift.TBase<recuperarNFuncionario_result, recuperarNFuncionario_result._Fields>, java.io.Serializable, Cloneable, Comparable<recuperarNFuncionario_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("recuperarNFuncionario_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRING, (short)0);
    private static final org.apache.thrift.protocol.TField EBD_FIELD_DESC = new org.apache.thrift.protocol.TField("ebd", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new recuperarNFuncionario_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new recuperarNFuncionario_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String success; // required
    public @org.apache.thrift.annotation.Nullable ErrorBD ebd; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      EBD((short)1, "ebd");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // EBD
            return EBD;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.EBD, new org.apache.thrift.meta_data.FieldMetaData("ebd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ErrorBD.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(recuperarNFuncionario_result.class, metaDataMap);
    }

    public recuperarNFuncionario_result() {
    }

    public recuperarNFuncionario_result(
      java.lang.String success,
      ErrorBD ebd)
    {
      this();
      this.success = success;
      this.ebd = ebd;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public recuperarNFuncionario_result(recuperarNFuncionario_result other) {
      if (other.isSetSuccess()) {
        this.success = other.success;
      }
      if (other.isSetEbd()) {
        this.ebd = new ErrorBD(other.ebd);
      }
    }

    public recuperarNFuncionario_result deepCopy() {
      return new recuperarNFuncionario_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.ebd = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getSuccess() {
      return this.success;
    }

    public recuperarNFuncionario_result setSuccess(@org.apache.thrift.annotation.Nullable java.lang.String success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public ErrorBD getEbd() {
      return this.ebd;
    }

    public recuperarNFuncionario_result setEbd(@org.apache.thrift.annotation.Nullable ErrorBD ebd) {
      this.ebd = ebd;
      return this;
    }

    public void unsetEbd() {
      this.ebd = null;
    }

    /** Returns true if field ebd is set (has been assigned a value) and false otherwise */
    public boolean isSetEbd() {
      return this.ebd != null;
    }

    public void setEbdIsSet(boolean value) {
      if (!value) {
        this.ebd = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.String)value);
        }
        break;

      case EBD:
        if (value == null) {
          unsetEbd();
        } else {
          setEbd((ErrorBD)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case EBD:
        return getEbd();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case EBD:
        return isSetEbd();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof recuperarNFuncionario_result)
        return this.equals((recuperarNFuncionario_result)that);
      return false;
    }

    public boolean equals(recuperarNFuncionario_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_ebd = true && this.isSetEbd();
      boolean that_present_ebd = true && that.isSetEbd();
      if (this_present_ebd || that_present_ebd) {
        if (!(this_present_ebd && that_present_ebd))
          return false;
        if (!this.ebd.equals(that.ebd))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetEbd()) ? 131071 : 524287);
      if (isSetEbd())
        hashCode = hashCode * 8191 + ebd.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(recuperarNFuncionario_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEbd()).compareTo(other.isSetEbd());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEbd()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ebd, other.ebd);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("recuperarNFuncionario_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("ebd:");
      if (this.ebd == null) {
        sb.append("null");
      } else {
        sb.append(this.ebd);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class recuperarNFuncionario_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public recuperarNFuncionario_resultStandardScheme getScheme() {
        return new recuperarNFuncionario_resultStandardScheme();
      }
    }

    private static class recuperarNFuncionario_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<recuperarNFuncionario_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, recuperarNFuncionario_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.success = iprot.readString();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // EBD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ebd = new ErrorBD();
                struct.ebd.read(iprot);
                struct.setEbdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, recuperarNFuncionario_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeString(struct.success);
          oprot.writeFieldEnd();
        }
        if (struct.ebd != null) {
          oprot.writeFieldBegin(EBD_FIELD_DESC);
          struct.ebd.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class recuperarNFuncionario_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public recuperarNFuncionario_resultTupleScheme getScheme() {
        return new recuperarNFuncionario_resultTupleScheme();
      }
    }

    private static class recuperarNFuncionario_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<recuperarNFuncionario_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, recuperarNFuncionario_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetEbd()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          oprot.writeString(struct.success);
        }
        if (struct.isSetEbd()) {
          struct.ebd.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, recuperarNFuncionario_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = iprot.readString();
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ebd = new ErrorBD();
          struct.ebd.read(iprot);
          struct.setEbdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class recuperarVehiculoReporte_args implements org.apache.thrift.TBase<recuperarVehiculoReporte_args, recuperarVehiculoReporte_args._Fields>, java.io.Serializable, Cloneable, Comparable<recuperarVehiculoReporte_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("recuperarVehiculoReporte_args");

    private static final org.apache.thrift.protocol.TField FOLIO_UNICO_DICTAMEN_FIELD_DESC = new org.apache.thrift.protocol.TField("folioUnico_dictamen", org.apache.thrift.protocol.TType.I32, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new recuperarVehiculoReporte_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new recuperarVehiculoReporte_argsTupleSchemeFactory();

    public int folioUnico_dictamen; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      FOLIO_UNICO_DICTAMEN((short)1, "folioUnico_dictamen");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // FOLIO_UNICO_DICTAMEN
            return FOLIO_UNICO_DICTAMEN;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __FOLIOUNICO_DICTAMEN_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.FOLIO_UNICO_DICTAMEN, new org.apache.thrift.meta_data.FieldMetaData("folioUnico_dictamen", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(recuperarVehiculoReporte_args.class, metaDataMap);
    }

    public recuperarVehiculoReporte_args() {
    }

    public recuperarVehiculoReporte_args(
      int folioUnico_dictamen)
    {
      this();
      this.folioUnico_dictamen = folioUnico_dictamen;
      setFolioUnico_dictamenIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public recuperarVehiculoReporte_args(recuperarVehiculoReporte_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.folioUnico_dictamen = other.folioUnico_dictamen;
    }

    public recuperarVehiculoReporte_args deepCopy() {
      return new recuperarVehiculoReporte_args(this);
    }

    @Override
    public void clear() {
      setFolioUnico_dictamenIsSet(false);
      this.folioUnico_dictamen = 0;
    }

    public int getFolioUnico_dictamen() {
      return this.folioUnico_dictamen;
    }

    public recuperarVehiculoReporte_args setFolioUnico_dictamen(int folioUnico_dictamen) {
      this.folioUnico_dictamen = folioUnico_dictamen;
      setFolioUnico_dictamenIsSet(true);
      return this;
    }

    public void unsetFolioUnico_dictamen() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FOLIOUNICO_DICTAMEN_ISSET_ID);
    }

    /** Returns true if field folioUnico_dictamen is set (has been assigned a value) and false otherwise */
    public boolean isSetFolioUnico_dictamen() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FOLIOUNICO_DICTAMEN_ISSET_ID);
    }

    public void setFolioUnico_dictamenIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FOLIOUNICO_DICTAMEN_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case FOLIO_UNICO_DICTAMEN:
        if (value == null) {
          unsetFolioUnico_dictamen();
        } else {
          setFolioUnico_dictamen((java.lang.Integer)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case FOLIO_UNICO_DICTAMEN:
        return getFolioUnico_dictamen();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case FOLIO_UNICO_DICTAMEN:
        return isSetFolioUnico_dictamen();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof recuperarVehiculoReporte_args)
        return this.equals((recuperarVehiculoReporte_args)that);
      return false;
    }

    public boolean equals(recuperarVehiculoReporte_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_folioUnico_dictamen = true;
      boolean that_present_folioUnico_dictamen = true;
      if (this_present_folioUnico_dictamen || that_present_folioUnico_dictamen) {
        if (!(this_present_folioUnico_dictamen && that_present_folioUnico_dictamen))
          return false;
        if (this.folioUnico_dictamen != that.folioUnico_dictamen)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + folioUnico_dictamen;

      return hashCode;
    }

    @Override
    public int compareTo(recuperarVehiculoReporte_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetFolioUnico_dictamen()).compareTo(other.isSetFolioUnico_dictamen());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFolioUnico_dictamen()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.folioUnico_dictamen, other.folioUnico_dictamen);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("recuperarVehiculoReporte_args(");
      boolean first = true;

      sb.append("folioUnico_dictamen:");
      sb.append(this.folioUnico_dictamen);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class recuperarVehiculoReporte_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public recuperarVehiculoReporte_argsStandardScheme getScheme() {
        return new recuperarVehiculoReporte_argsStandardScheme();
      }
    }

    private static class recuperarVehiculoReporte_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<recuperarVehiculoReporte_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, recuperarVehiculoReporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // FOLIO_UNICO_DICTAMEN
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.folioUnico_dictamen = iprot.readI32();
                struct.setFolioUnico_dictamenIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, recuperarVehiculoReporte_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(FOLIO_UNICO_DICTAMEN_FIELD_DESC);
        oprot.writeI32(struct.folioUnico_dictamen);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class recuperarVehiculoReporte_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public recuperarVehiculoReporte_argsTupleScheme getScheme() {
        return new recuperarVehiculoReporte_argsTupleScheme();
      }
    }

    private static class recuperarVehiculoReporte_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<recuperarVehiculoReporte_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, recuperarVehiculoReporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetFolioUnico_dictamen()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetFolioUnico_dictamen()) {
          oprot.writeI32(struct.folioUnico_dictamen);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, recuperarVehiculoReporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.folioUnico_dictamen = iprot.readI32();
          struct.setFolioUnico_dictamenIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class recuperarVehiculoReporte_result implements org.apache.thrift.TBase<recuperarVehiculoReporte_result, recuperarVehiculoReporte_result._Fields>, java.io.Serializable, Cloneable, Comparable<recuperarVehiculoReporte_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("recuperarVehiculoReporte_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
    private static final org.apache.thrift.protocol.TField EBD_FIELD_DESC = new org.apache.thrift.protocol.TField("ebd", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new recuperarVehiculoReporte_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new recuperarVehiculoReporte_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.util.List<Vehiculo> success; // required
    public @org.apache.thrift.annotation.Nullable ErrorBD ebd; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      EBD((short)1, "ebd");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // EBD
            return EBD;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Vehiculo.class))));
      tmpMap.put(_Fields.EBD, new org.apache.thrift.meta_data.FieldMetaData("ebd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ErrorBD.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(recuperarVehiculoReporte_result.class, metaDataMap);
    }

    public recuperarVehiculoReporte_result() {
    }

    public recuperarVehiculoReporte_result(
      java.util.List<Vehiculo> success,
      ErrorBD ebd)
    {
      this();
      this.success = success;
      this.ebd = ebd;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public recuperarVehiculoReporte_result(recuperarVehiculoReporte_result other) {
      if (other.isSetSuccess()) {
        java.util.List<Vehiculo> __this__success = new java.util.ArrayList<Vehiculo>(other.success.size());
        for (Vehiculo other_element : other.success) {
          __this__success.add(new Vehiculo(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetEbd()) {
        this.ebd = new ErrorBD(other.ebd);
      }
    }

    public recuperarVehiculoReporte_result deepCopy() {
      return new recuperarVehiculoReporte_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.ebd = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<Vehiculo> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(Vehiculo elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<Vehiculo>();
      }
      this.success.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.List<Vehiculo> getSuccess() {
      return this.success;
    }

    public recuperarVehiculoReporte_result setSuccess(@org.apache.thrift.annotation.Nullable java.util.List<Vehiculo> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public ErrorBD getEbd() {
      return this.ebd;
    }

    public recuperarVehiculoReporte_result setEbd(@org.apache.thrift.annotation.Nullable ErrorBD ebd) {
      this.ebd = ebd;
      return this;
    }

    public void unsetEbd() {
      this.ebd = null;
    }

    /** Returns true if field ebd is set (has been assigned a value) and false otherwise */
    public boolean isSetEbd() {
      return this.ebd != null;
    }

    public void setEbdIsSet(boolean value) {
      if (!value) {
        this.ebd = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<Vehiculo>)value);
        }
        break;

      case EBD:
        if (value == null) {
          unsetEbd();
        } else {
          setEbd((ErrorBD)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case EBD:
        return getEbd();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case EBD:
        return isSetEbd();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof recuperarVehiculoReporte_result)
        return this.equals((recuperarVehiculoReporte_result)that);
      return false;
    }

    public boolean equals(recuperarVehiculoReporte_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_ebd = true && this.isSetEbd();
      boolean that_present_ebd = true && that.isSetEbd();
      if (this_present_ebd || that_present_ebd) {
        if (!(this_present_ebd && that_present_ebd))
          return false;
        if (!this.ebd.equals(that.ebd))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetEbd()) ? 131071 : 524287);
      if (isSetEbd())
        hashCode = hashCode * 8191 + ebd.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(recuperarVehiculoReporte_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEbd()).compareTo(other.isSetEbd());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEbd()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ebd, other.ebd);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("recuperarVehiculoReporte_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("ebd:");
      if (this.ebd == null) {
        sb.append("null");
      } else {
        sb.append(this.ebd);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class recuperarVehiculoReporte_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public recuperarVehiculoReporte_resultStandardScheme getScheme() {
        return new recuperarVehiculoReporte_resultStandardScheme();
      }
    }

    private static class recuperarVehiculoReporte_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<recuperarVehiculoReporte_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, recuperarVehiculoReporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list48 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<Vehiculo>(_list48.size);
                  @org.apache.thrift.annotation.Nullable Vehiculo _elem49;
                  for (int _i50 = 0; _i50 < _list48.size; ++_i50)
                  {
                    _elem49 = new Vehiculo();
                    _elem49.read(iprot);
                    struct.success.add(_elem49);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // EBD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ebd = new ErrorBD();
                struct.ebd.read(iprot);
                struct.setEbdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, recuperarVehiculoReporte_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (Vehiculo _iter51 : struct.success)
            {
              _iter51.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.ebd != null) {
          oprot.writeFieldBegin(EBD_FIELD_DESC);
          struct.ebd.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class recuperarVehiculoReporte_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public recuperarVehiculoReporte_resultTupleScheme getScheme() {
        return new recuperarVehiculoReporte_resultTupleScheme();
      }
    }

    private static class recuperarVehiculoReporte_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<recuperarVehiculoReporte_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, recuperarVehiculoReporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetEbd()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (Vehiculo _iter52 : struct.success)
            {
              _iter52.write(oprot);
            }
          }
        }
        if (struct.isSetEbd()) {
          struct.ebd.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, recuperarVehiculoReporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list53 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.ArrayList<Vehiculo>(_list53.size);
            @org.apache.thrift.annotation.Nullable Vehiculo _elem54;
            for (int _i55 = 0; _i55 < _list53.size; ++_i55)
            {
              _elem54 = new Vehiculo();
              _elem54.read(iprot);
              struct.success.add(_elem54);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ebd = new ErrorBD();
          struct.ebd.read(iprot);
          struct.setEbdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class asociarVehiculoReporte_args implements org.apache.thrift.TBase<asociarVehiculoReporte_args, asociarVehiculoReporte_args._Fields>, java.io.Serializable, Cloneable, Comparable<asociarVehiculoReporte_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("asociarVehiculoReporte_args");

    private static final org.apache.thrift.protocol.TField NUM_PLACAS_FIELD_DESC = new org.apache.thrift.protocol.TField("numPLacas", org.apache.thrift.protocol.TType.LIST, (short)1);
    private static final org.apache.thrift.protocol.TField TELEFONO_FIELD_DESC = new org.apache.thrift.protocol.TField("telefono", org.apache.thrift.protocol.TType.I64, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new asociarVehiculoReporte_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new asociarVehiculoReporte_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> numPLacas; // required
    public long telefono; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      NUM_PLACAS((short)1, "numPLacas"),
      TELEFONO((short)2, "telefono");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // NUM_PLACAS
            return NUM_PLACAS;
          case 2: // TELEFONO
            return TELEFONO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __TELEFONO_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.NUM_PLACAS, new org.apache.thrift.meta_data.FieldMetaData("numPLacas", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
      tmpMap.put(_Fields.TELEFONO, new org.apache.thrift.meta_data.FieldMetaData("telefono", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(asociarVehiculoReporte_args.class, metaDataMap);
    }

    public asociarVehiculoReporte_args() {
    }

    public asociarVehiculoReporte_args(
      java.util.List<java.lang.String> numPLacas,
      long telefono)
    {
      this();
      this.numPLacas = numPLacas;
      this.telefono = telefono;
      setTelefonoIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public asociarVehiculoReporte_args(asociarVehiculoReporte_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetNumPLacas()) {
        java.util.List<java.lang.String> __this__numPLacas = new java.util.ArrayList<java.lang.String>(other.numPLacas);
        this.numPLacas = __this__numPLacas;
      }
      this.telefono = other.telefono;
    }

    public asociarVehiculoReporte_args deepCopy() {
      return new asociarVehiculoReporte_args(this);
    }

    @Override
    public void clear() {
      this.numPLacas = null;
      setTelefonoIsSet(false);
      this.telefono = 0;
    }

    public int getNumPLacasSize() {
      return (this.numPLacas == null) ? 0 : this.numPLacas.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<java.lang.String> getNumPLacasIterator() {
      return (this.numPLacas == null) ? null : this.numPLacas.iterator();
    }

    public void addToNumPLacas(java.lang.String elem) {
      if (this.numPLacas == null) {
        this.numPLacas = new java.util.ArrayList<java.lang.String>();
      }
      this.numPLacas.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.List<java.lang.String> getNumPLacas() {
      return this.numPLacas;
    }

    public asociarVehiculoReporte_args setNumPLacas(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> numPLacas) {
      this.numPLacas = numPLacas;
      return this;
    }

    public void unsetNumPLacas() {
      this.numPLacas = null;
    }

    /** Returns true if field numPLacas is set (has been assigned a value) and false otherwise */
    public boolean isSetNumPLacas() {
      return this.numPLacas != null;
    }

    public void setNumPLacasIsSet(boolean value) {
      if (!value) {
        this.numPLacas = null;
      }
    }

    public long getTelefono() {
      return this.telefono;
    }

    public asociarVehiculoReporte_args setTelefono(long telefono) {
      this.telefono = telefono;
      setTelefonoIsSet(true);
      return this;
    }

    public void unsetTelefono() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TELEFONO_ISSET_ID);
    }

    /** Returns true if field telefono is set (has been assigned a value) and false otherwise */
    public boolean isSetTelefono() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TELEFONO_ISSET_ID);
    }

    public void setTelefonoIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TELEFONO_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case NUM_PLACAS:
        if (value == null) {
          unsetNumPLacas();
        } else {
          setNumPLacas((java.util.List<java.lang.String>)value);
        }
        break;

      case TELEFONO:
        if (value == null) {
          unsetTelefono();
        } else {
          setTelefono((java.lang.Long)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case NUM_PLACAS:
        return getNumPLacas();

      case TELEFONO:
        return getTelefono();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case NUM_PLACAS:
        return isSetNumPLacas();
      case TELEFONO:
        return isSetTelefono();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof asociarVehiculoReporte_args)
        return this.equals((asociarVehiculoReporte_args)that);
      return false;
    }

    public boolean equals(asociarVehiculoReporte_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_numPLacas = true && this.isSetNumPLacas();
      boolean that_present_numPLacas = true && that.isSetNumPLacas();
      if (this_present_numPLacas || that_present_numPLacas) {
        if (!(this_present_numPLacas && that_present_numPLacas))
          return false;
        if (!this.numPLacas.equals(that.numPLacas))
          return false;
      }

      boolean this_present_telefono = true;
      boolean that_present_telefono = true;
      if (this_present_telefono || that_present_telefono) {
        if (!(this_present_telefono && that_present_telefono))
          return false;
        if (this.telefono != that.telefono)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetNumPLacas()) ? 131071 : 524287);
      if (isSetNumPLacas())
        hashCode = hashCode * 8191 + numPLacas.hashCode();

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(telefono);

      return hashCode;
    }

    @Override
    public int compareTo(asociarVehiculoReporte_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetNumPLacas()).compareTo(other.isSetNumPLacas());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetNumPLacas()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numPLacas, other.numPLacas);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetTelefono()).compareTo(other.isSetTelefono());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTelefono()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telefono, other.telefono);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("asociarVehiculoReporte_args(");
      boolean first = true;

      sb.append("numPLacas:");
      if (this.numPLacas == null) {
        sb.append("null");
      } else {
        sb.append(this.numPLacas);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("telefono:");
      sb.append(this.telefono);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class asociarVehiculoReporte_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public asociarVehiculoReporte_argsStandardScheme getScheme() {
        return new asociarVehiculoReporte_argsStandardScheme();
      }
    }

    private static class asociarVehiculoReporte_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<asociarVehiculoReporte_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, asociarVehiculoReporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // NUM_PLACAS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list56 = iprot.readListBegin();
                  struct.numPLacas = new java.util.ArrayList<java.lang.String>(_list56.size);
                  @org.apache.thrift.annotation.Nullable java.lang.String _elem57;
                  for (int _i58 = 0; _i58 < _list56.size; ++_i58)
                  {
                    _elem57 = iprot.readString();
                    struct.numPLacas.add(_elem57);
                  }
                  iprot.readListEnd();
                }
                struct.setNumPLacasIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // TELEFONO
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.telefono = iprot.readI64();
                struct.setTelefonoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, asociarVehiculoReporte_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.numPLacas != null) {
          oprot.writeFieldBegin(NUM_PLACAS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.numPLacas.size()));
            for (java.lang.String _iter59 : struct.numPLacas)
            {
              oprot.writeString(_iter59);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(TELEFONO_FIELD_DESC);
        oprot.writeI64(struct.telefono);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class asociarVehiculoReporte_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public asociarVehiculoReporte_argsTupleScheme getScheme() {
        return new asociarVehiculoReporte_argsTupleScheme();
      }
    }

    private static class asociarVehiculoReporte_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<asociarVehiculoReporte_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, asociarVehiculoReporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetNumPLacas()) {
          optionals.set(0);
        }
        if (struct.isSetTelefono()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetNumPLacas()) {
          {
            oprot.writeI32(struct.numPLacas.size());
            for (java.lang.String _iter60 : struct.numPLacas)
            {
              oprot.writeString(_iter60);
            }
          }
        }
        if (struct.isSetTelefono()) {
          oprot.writeI64(struct.telefono);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, asociarVehiculoReporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list61 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
            struct.numPLacas = new java.util.ArrayList<java.lang.String>(_list61.size);
            @org.apache.thrift.annotation.Nullable java.lang.String _elem62;
            for (int _i63 = 0; _i63 < _list61.size; ++_i63)
            {
              _elem62 = iprot.readString();
              struct.numPLacas.add(_elem62);
            }
          }
          struct.setNumPLacasIsSet(true);
        }
        if (incoming.get(1)) {
          struct.telefono = iprot.readI64();
          struct.setTelefonoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class asociarVehiculoReporte_result implements org.apache.thrift.TBase<asociarVehiculoReporte_result, asociarVehiculoReporte_result._Fields>, java.io.Serializable, Cloneable, Comparable<asociarVehiculoReporte_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("asociarVehiculoReporte_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.BOOL, (short)0);
    private static final org.apache.thrift.protocol.TField EBD_FIELD_DESC = new org.apache.thrift.protocol.TField("ebd", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new asociarVehiculoReporte_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new asociarVehiculoReporte_resultTupleSchemeFactory();

    public boolean success; // required
    public @org.apache.thrift.annotation.Nullable ErrorBD ebd; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      EBD((short)1, "ebd");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // EBD
            return EBD;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      tmpMap.put(_Fields.EBD, new org.apache.thrift.meta_data.FieldMetaData("ebd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ErrorBD.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(asociarVehiculoReporte_result.class, metaDataMap);
    }

    public asociarVehiculoReporte_result() {
    }

    public asociarVehiculoReporte_result(
      boolean success,
      ErrorBD ebd)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
      this.ebd = ebd;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public asociarVehiculoReporte_result(asociarVehiculoReporte_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
      if (other.isSetEbd()) {
        this.ebd = new ErrorBD(other.ebd);
      }
    }

    public asociarVehiculoReporte_result deepCopy() {
      return new asociarVehiculoReporte_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = false;
      this.ebd = null;
    }

    public boolean isSuccess() {
      return this.success;
    }

    public asociarVehiculoReporte_result setSuccess(boolean success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    @org.apache.thrift.annotation.Nullable
    public ErrorBD getEbd() {
      return this.ebd;
    }

    public asociarVehiculoReporte_result setEbd(@org.apache.thrift.annotation.Nullable ErrorBD ebd) {
      this.ebd = ebd;
      return this;
    }

    public void unsetEbd() {
      this.ebd = null;
    }

    /** Returns true if field ebd is set (has been assigned a value) and false otherwise */
    public boolean isSetEbd() {
      return this.ebd != null;
    }

    public void setEbdIsSet(boolean value) {
      if (!value) {
        this.ebd = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.Boolean)value);
        }
        break;

      case EBD:
        if (value == null) {
          unsetEbd();
        } else {
          setEbd((ErrorBD)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return isSuccess();

      case EBD:
        return getEbd();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case EBD:
        return isSetEbd();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof asociarVehiculoReporte_result)
        return this.equals((asociarVehiculoReporte_result)that);
      return false;
    }

    public boolean equals(asociarVehiculoReporte_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      boolean this_present_ebd = true && this.isSetEbd();
      boolean that_present_ebd = true && that.isSetEbd();
      if (this_present_ebd || that_present_ebd) {
        if (!(this_present_ebd && that_present_ebd))
          return false;
        if (!this.ebd.equals(that.ebd))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((success) ? 131071 : 524287);

      hashCode = hashCode * 8191 + ((isSetEbd()) ? 131071 : 524287);
      if (isSetEbd())
        hashCode = hashCode * 8191 + ebd.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(asociarVehiculoReporte_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEbd()).compareTo(other.isSetEbd());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEbd()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ebd, other.ebd);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("asociarVehiculoReporte_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      if (!first) sb.append(", ");
      sb.append("ebd:");
      if (this.ebd == null) {
        sb.append("null");
      } else {
        sb.append(this.ebd);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class asociarVehiculoReporte_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public asociarVehiculoReporte_resultStandardScheme getScheme() {
        return new asociarVehiculoReporte_resultStandardScheme();
      }
    }

    private static class asociarVehiculoReporte_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<asociarVehiculoReporte_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, asociarVehiculoReporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.success = iprot.readBool();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // EBD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ebd = new ErrorBD();
                struct.ebd.read(iprot);
                struct.setEbdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, asociarVehiculoReporte_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeBool(struct.success);
          oprot.writeFieldEnd();
        }
        if (struct.ebd != null) {
          oprot.writeFieldBegin(EBD_FIELD_DESC);
          struct.ebd.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class asociarVehiculoReporte_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public asociarVehiculoReporte_resultTupleScheme getScheme() {
        return new asociarVehiculoReporte_resultTupleScheme();
      }
    }

    private static class asociarVehiculoReporte_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<asociarVehiculoReporte_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, asociarVehiculoReporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetEbd()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          oprot.writeBool(struct.success);
        }
        if (struct.isSetEbd()) {
          struct.ebd.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, asociarVehiculoReporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = iprot.readBool();
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ebd = new ErrorBD();
          struct.ebd.read(iprot);
          struct.setEbdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

}
