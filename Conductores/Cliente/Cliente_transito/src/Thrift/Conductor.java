/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package Thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
//@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-06-27")
public class Conductor implements org.apache.thrift.TBase<Conductor, Conductor._Fields>, java.io.Serializable, Cloneable, Comparable<Conductor> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Conductor");

  private static final org.apache.thrift.protocol.TField CURP_FIELD_DESC = new org.apache.thrift.protocol.TField("curp", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField FECHA_NAC_FIELD_DESC = new org.apache.thrift.protocol.TField("fechaNac", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField NOMBRE_COMP_FIELD_DESC = new org.apache.thrift.protocol.TField("nombreComp", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField NUM_LICENCIA_FIELD_DESC = new org.apache.thrift.protocol.TField("numLicencia", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField TELEFONO_FIELD_DESC = new org.apache.thrift.protocol.TField("telefono", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField ESTATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("estatus", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField CONTRASENA_FIELD_DESC = new org.apache.thrift.protocol.TField("contrasena", org.apache.thrift.protocol.TType.STRING, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ConductorStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ConductorTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String curp; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String fechaNac; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String nombreComp; // required
  public long numLicencia; // required
  public long telefono; // required
  public int estatus; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String contrasena; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    CURP((short)1, "curp"),
    FECHA_NAC((short)2, "fechaNac"),
    NOMBRE_COMP((short)3, "nombreComp"),
    NUM_LICENCIA((short)4, "numLicencia"),
    TELEFONO((short)5, "telefono"),
    ESTATUS((short)6, "estatus"),
    CONTRASENA((short)7, "contrasena");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CURP
          return CURP;
        case 2: // FECHA_NAC
          return FECHA_NAC;
        case 3: // NOMBRE_COMP
          return NOMBRE_COMP;
        case 4: // NUM_LICENCIA
          return NUM_LICENCIA;
        case 5: // TELEFONO
          return TELEFONO;
        case 6: // ESTATUS
          return ESTATUS;
        case 7: // CONTRASENA
          return CONTRASENA;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __NUMLICENCIA_ISSET_ID = 0;
  private static final int __TELEFONO_ISSET_ID = 1;
  private static final int __ESTATUS_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CURP, new org.apache.thrift.meta_data.FieldMetaData("curp", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FECHA_NAC, new org.apache.thrift.meta_data.FieldMetaData("fechaNac", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NOMBRE_COMP, new org.apache.thrift.meta_data.FieldMetaData("nombreComp", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUM_LICENCIA, new org.apache.thrift.meta_data.FieldMetaData("numLicencia", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TELEFONO, new org.apache.thrift.meta_data.FieldMetaData("telefono", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ESTATUS, new org.apache.thrift.meta_data.FieldMetaData("estatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CONTRASENA, new org.apache.thrift.meta_data.FieldMetaData("contrasena", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Conductor.class, metaDataMap);
  }

  public Conductor() {
  }

  public Conductor(
    java.lang.String curp,
    java.lang.String fechaNac,
    java.lang.String nombreComp,
    long numLicencia,
    long telefono,
    int estatus,
    java.lang.String contrasena)
  {
    this();
    this.curp = curp;
    this.fechaNac = fechaNac;
    this.nombreComp = nombreComp;
    this.numLicencia = numLicencia;
    setNumLicenciaIsSet(true);
    this.telefono = telefono;
    setTelefonoIsSet(true);
    this.estatus = estatus;
    setEstatusIsSet(true);
    this.contrasena = contrasena;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Conductor(Conductor other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetCurp()) {
      this.curp = other.curp;
    }
    if (other.isSetFechaNac()) {
      this.fechaNac = other.fechaNac;
    }
    if (other.isSetNombreComp()) {
      this.nombreComp = other.nombreComp;
    }
    this.numLicencia = other.numLicencia;
    this.telefono = other.telefono;
    this.estatus = other.estatus;
    if (other.isSetContrasena()) {
      this.contrasena = other.contrasena;
    }
  }

  public Conductor deepCopy() {
    return new Conductor(this);
  }

  @Override
  public void clear() {
    this.curp = null;
    this.fechaNac = null;
    this.nombreComp = null;
    setNumLicenciaIsSet(false);
    this.numLicencia = 0;
    setTelefonoIsSet(false);
    this.telefono = 0;
    setEstatusIsSet(false);
    this.estatus = 0;
    this.contrasena = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getCurp() {
    return this.curp;
  }

  public Conductor setCurp(@org.apache.thrift.annotation.Nullable java.lang.String curp) {
    this.curp = curp;
    return this;
  }

  public void unsetCurp() {
    this.curp = null;
  }

  /** Returns true if field curp is set (has been assigned a value) and false otherwise */
  public boolean isSetCurp() {
    return this.curp != null;
  }

  public void setCurpIsSet(boolean value) {
    if (!value) {
      this.curp = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getFechaNac() {
    return this.fechaNac;
  }

  public Conductor setFechaNac(@org.apache.thrift.annotation.Nullable java.lang.String fechaNac) {
    this.fechaNac = fechaNac;
    return this;
  }

  public void unsetFechaNac() {
    this.fechaNac = null;
  }

  /** Returns true if field fechaNac is set (has been assigned a value) and false otherwise */
  public boolean isSetFechaNac() {
    return this.fechaNac != null;
  }

  public void setFechaNacIsSet(boolean value) {
    if (!value) {
      this.fechaNac = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getNombreComp() {
    return this.nombreComp;
  }

  public Conductor setNombreComp(@org.apache.thrift.annotation.Nullable java.lang.String nombreComp) {
    this.nombreComp = nombreComp;
    return this;
  }

  public void unsetNombreComp() {
    this.nombreComp = null;
  }

  /** Returns true if field nombreComp is set (has been assigned a value) and false otherwise */
  public boolean isSetNombreComp() {
    return this.nombreComp != null;
  }

  public void setNombreCompIsSet(boolean value) {
    if (!value) {
      this.nombreComp = null;
    }
  }

  public long getNumLicencia() {
    return this.numLicencia;
  }

  public Conductor setNumLicencia(long numLicencia) {
    this.numLicencia = numLicencia;
    setNumLicenciaIsSet(true);
    return this;
  }

  public void unsetNumLicencia() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NUMLICENCIA_ISSET_ID);
  }

  /** Returns true if field numLicencia is set (has been assigned a value) and false otherwise */
  public boolean isSetNumLicencia() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NUMLICENCIA_ISSET_ID);
  }

  public void setNumLicenciaIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NUMLICENCIA_ISSET_ID, value);
  }

  public long getTelefono() {
    return this.telefono;
  }

  public Conductor setTelefono(long telefono) {
    this.telefono = telefono;
    setTelefonoIsSet(true);
    return this;
  }

  public void unsetTelefono() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TELEFONO_ISSET_ID);
  }

  /** Returns true if field telefono is set (has been assigned a value) and false otherwise */
  public boolean isSetTelefono() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TELEFONO_ISSET_ID);
  }

  public void setTelefonoIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TELEFONO_ISSET_ID, value);
  }

  public int getEstatus() {
    return this.estatus;
  }

  public Conductor setEstatus(int estatus) {
    this.estatus = estatus;
    setEstatusIsSet(true);
    return this;
  }

  public void unsetEstatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ESTATUS_ISSET_ID);
  }

  /** Returns true if field estatus is set (has been assigned a value) and false otherwise */
  public boolean isSetEstatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ESTATUS_ISSET_ID);
  }

  public void setEstatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ESTATUS_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getContrasena() {
    return this.contrasena;
  }

  public Conductor setContrasena(@org.apache.thrift.annotation.Nullable java.lang.String contrasena) {
    this.contrasena = contrasena;
    return this;
  }

  public void unsetContrasena() {
    this.contrasena = null;
  }

  /** Returns true if field contrasena is set (has been assigned a value) and false otherwise */
  public boolean isSetContrasena() {
    return this.contrasena != null;
  }

  public void setContrasenaIsSet(boolean value) {
    if (!value) {
      this.contrasena = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case CURP:
      if (value == null) {
        unsetCurp();
      } else {
        setCurp((java.lang.String)value);
      }
      break;

    case FECHA_NAC:
      if (value == null) {
        unsetFechaNac();
      } else {
        setFechaNac((java.lang.String)value);
      }
      break;

    case NOMBRE_COMP:
      if (value == null) {
        unsetNombreComp();
      } else {
        setNombreComp((java.lang.String)value);
      }
      break;

    case NUM_LICENCIA:
      if (value == null) {
        unsetNumLicencia();
      } else {
        setNumLicencia((java.lang.Long)value);
      }
      break;

    case TELEFONO:
      if (value == null) {
        unsetTelefono();
      } else {
        setTelefono((java.lang.Long)value);
      }
      break;

    case ESTATUS:
      if (value == null) {
        unsetEstatus();
      } else {
        setEstatus((java.lang.Integer)value);
      }
      break;

    case CONTRASENA:
      if (value == null) {
        unsetContrasena();
      } else {
        setContrasena((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case CURP:
      return getCurp();

    case FECHA_NAC:
      return getFechaNac();

    case NOMBRE_COMP:
      return getNombreComp();

    case NUM_LICENCIA:
      return getNumLicencia();

    case TELEFONO:
      return getTelefono();

    case ESTATUS:
      return getEstatus();

    case CONTRASENA:
      return getContrasena();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case CURP:
      return isSetCurp();
    case FECHA_NAC:
      return isSetFechaNac();
    case NOMBRE_COMP:
      return isSetNombreComp();
    case NUM_LICENCIA:
      return isSetNumLicencia();
    case TELEFONO:
      return isSetTelefono();
    case ESTATUS:
      return isSetEstatus();
    case CONTRASENA:
      return isSetContrasena();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Conductor)
      return this.equals((Conductor)that);
    return false;
  }

  public boolean equals(Conductor that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_curp = true && this.isSetCurp();
    boolean that_present_curp = true && that.isSetCurp();
    if (this_present_curp || that_present_curp) {
      if (!(this_present_curp && that_present_curp))
        return false;
      if (!this.curp.equals(that.curp))
        return false;
    }

    boolean this_present_fechaNac = true && this.isSetFechaNac();
    boolean that_present_fechaNac = true && that.isSetFechaNac();
    if (this_present_fechaNac || that_present_fechaNac) {
      if (!(this_present_fechaNac && that_present_fechaNac))
        return false;
      if (!this.fechaNac.equals(that.fechaNac))
        return false;
    }

    boolean this_present_nombreComp = true && this.isSetNombreComp();
    boolean that_present_nombreComp = true && that.isSetNombreComp();
    if (this_present_nombreComp || that_present_nombreComp) {
      if (!(this_present_nombreComp && that_present_nombreComp))
        return false;
      if (!this.nombreComp.equals(that.nombreComp))
        return false;
    }

    boolean this_present_numLicencia = true;
    boolean that_present_numLicencia = true;
    if (this_present_numLicencia || that_present_numLicencia) {
      if (!(this_present_numLicencia && that_present_numLicencia))
        return false;
      if (this.numLicencia != that.numLicencia)
        return false;
    }

    boolean this_present_telefono = true;
    boolean that_present_telefono = true;
    if (this_present_telefono || that_present_telefono) {
      if (!(this_present_telefono && that_present_telefono))
        return false;
      if (this.telefono != that.telefono)
        return false;
    }

    boolean this_present_estatus = true;
    boolean that_present_estatus = true;
    if (this_present_estatus || that_present_estatus) {
      if (!(this_present_estatus && that_present_estatus))
        return false;
      if (this.estatus != that.estatus)
        return false;
    }

    boolean this_present_contrasena = true && this.isSetContrasena();
    boolean that_present_contrasena = true && that.isSetContrasena();
    if (this_present_contrasena || that_present_contrasena) {
      if (!(this_present_contrasena && that_present_contrasena))
        return false;
      if (!this.contrasena.equals(that.contrasena))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetCurp()) ? 131071 : 524287);
    if (isSetCurp())
      hashCode = hashCode * 8191 + curp.hashCode();

    hashCode = hashCode * 8191 + ((isSetFechaNac()) ? 131071 : 524287);
    if (isSetFechaNac())
      hashCode = hashCode * 8191 + fechaNac.hashCode();

    hashCode = hashCode * 8191 + ((isSetNombreComp()) ? 131071 : 524287);
    if (isSetNombreComp())
      hashCode = hashCode * 8191 + nombreComp.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(numLicencia);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(telefono);

    hashCode = hashCode * 8191 + estatus;

    hashCode = hashCode * 8191 + ((isSetContrasena()) ? 131071 : 524287);
    if (isSetContrasena())
      hashCode = hashCode * 8191 + contrasena.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Conductor other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetCurp()).compareTo(other.isSetCurp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.curp, other.curp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFechaNac()).compareTo(other.isSetFechaNac());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFechaNac()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fechaNac, other.fechaNac);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNombreComp()).compareTo(other.isSetNombreComp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNombreComp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nombreComp, other.nombreComp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNumLicencia()).compareTo(other.isSetNumLicencia());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumLicencia()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numLicencia, other.numLicencia);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTelefono()).compareTo(other.isSetTelefono());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTelefono()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telefono, other.telefono);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEstatus()).compareTo(other.isSetEstatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEstatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.estatus, other.estatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetContrasena()).compareTo(other.isSetContrasena());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContrasena()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contrasena, other.contrasena);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Conductor(");
    boolean first = true;

    sb.append("curp:");
    if (this.curp == null) {
      sb.append("null");
    } else {
      sb.append(this.curp);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fechaNac:");
    if (this.fechaNac == null) {
      sb.append("null");
    } else {
      sb.append(this.fechaNac);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("nombreComp:");
    if (this.nombreComp == null) {
      sb.append("null");
    } else {
      sb.append(this.nombreComp);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("numLicencia:");
    sb.append(this.numLicencia);
    first = false;
    if (!first) sb.append(", ");
    sb.append("telefono:");
    sb.append(this.telefono);
    first = false;
    if (!first) sb.append(", ");
    sb.append("estatus:");
    sb.append(this.estatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("contrasena:");
    if (this.contrasena == null) {
      sb.append("null");
    } else {
      sb.append(this.contrasena);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ConductorStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ConductorStandardScheme getScheme() {
      return new ConductorStandardScheme();
    }
  }

  private static class ConductorStandardScheme extends org.apache.thrift.scheme.StandardScheme<Conductor> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Conductor struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CURP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.curp = iprot.readString();
              struct.setCurpIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // FECHA_NAC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fechaNac = iprot.readString();
              struct.setFechaNacIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // NOMBRE_COMP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nombreComp = iprot.readString();
              struct.setNombreCompIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // NUM_LICENCIA
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.numLicencia = iprot.readI64();
              struct.setNumLicenciaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // TELEFONO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.telefono = iprot.readI64();
              struct.setTelefonoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ESTATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.estatus = iprot.readI32();
              struct.setEstatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CONTRASENA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contrasena = iprot.readString();
              struct.setContrasenaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Conductor struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.curp != null) {
        oprot.writeFieldBegin(CURP_FIELD_DESC);
        oprot.writeString(struct.curp);
        oprot.writeFieldEnd();
      }
      if (struct.fechaNac != null) {
        oprot.writeFieldBegin(FECHA_NAC_FIELD_DESC);
        oprot.writeString(struct.fechaNac);
        oprot.writeFieldEnd();
      }
      if (struct.nombreComp != null) {
        oprot.writeFieldBegin(NOMBRE_COMP_FIELD_DESC);
        oprot.writeString(struct.nombreComp);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(NUM_LICENCIA_FIELD_DESC);
      oprot.writeI64(struct.numLicencia);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TELEFONO_FIELD_DESC);
      oprot.writeI64(struct.telefono);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ESTATUS_FIELD_DESC);
      oprot.writeI32(struct.estatus);
      oprot.writeFieldEnd();
      if (struct.contrasena != null) {
        oprot.writeFieldBegin(CONTRASENA_FIELD_DESC);
        oprot.writeString(struct.contrasena);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ConductorTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ConductorTupleScheme getScheme() {
      return new ConductorTupleScheme();
    }
  }

  private static class ConductorTupleScheme extends org.apache.thrift.scheme.TupleScheme<Conductor> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Conductor struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetCurp()) {
        optionals.set(0);
      }
      if (struct.isSetFechaNac()) {
        optionals.set(1);
      }
      if (struct.isSetNombreComp()) {
        optionals.set(2);
      }
      if (struct.isSetNumLicencia()) {
        optionals.set(3);
      }
      if (struct.isSetTelefono()) {
        optionals.set(4);
      }
      if (struct.isSetEstatus()) {
        optionals.set(5);
      }
      if (struct.isSetContrasena()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetCurp()) {
        oprot.writeString(struct.curp);
      }
      if (struct.isSetFechaNac()) {
        oprot.writeString(struct.fechaNac);
      }
      if (struct.isSetNombreComp()) {
        oprot.writeString(struct.nombreComp);
      }
      if (struct.isSetNumLicencia()) {
        oprot.writeI64(struct.numLicencia);
      }
      if (struct.isSetTelefono()) {
        oprot.writeI64(struct.telefono);
      }
      if (struct.isSetEstatus()) {
        oprot.writeI32(struct.estatus);
      }
      if (struct.isSetContrasena()) {
        oprot.writeString(struct.contrasena);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Conductor struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.curp = iprot.readString();
        struct.setCurpIsSet(true);
      }
      if (incoming.get(1)) {
        struct.fechaNac = iprot.readString();
        struct.setFechaNacIsSet(true);
      }
      if (incoming.get(2)) {
        struct.nombreComp = iprot.readString();
        struct.setNombreCompIsSet(true);
      }
      if (incoming.get(3)) {
        struct.numLicencia = iprot.readI64();
        struct.setNumLicenciaIsSet(true);
      }
      if (incoming.get(4)) {
        struct.telefono = iprot.readI64();
        struct.setTelefonoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.estatus = iprot.readI32();
        struct.setEstatusIsSet(true);
      }
      if (incoming.get(6)) {
        struct.contrasena = iprot.readString();
        struct.setContrasenaIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

